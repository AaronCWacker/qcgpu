var searchIndex = {};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of this function.",1,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"backtraceframe"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"inputs":[],"output":{"name":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",3,{"inputs":[{"generics":["backtraceframe"],"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["backtraceframe"],"name":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"inputs":[{"name":"self"}],"output":{"generics":["symbolname"],"name":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"inputs":[{"name":"self"}],"output":{"generics":["path"],"name":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["cl_sys"] = {"doc":"FFI bindings for OpenCL.","items":[[4,"c_void","cl_sys","",null,null],[6,"size_t","","",null,null],[6,"c_char","","",null,null],[6,"c_double","","",null,null],[6,"c_float","","",null,null],[6,"c_int","","",null,null],[6,"c_longlong","","",null,null],[6,"c_short","","",null,null],[6,"c_uchar","","",null,null],[6,"c_uint","","",null,null],[6,"c_ulonglong","","",null,null],[6,"c_ushort","","",null,null],[3,"cl_image_format","","",null,null],[12,"image_channel_order","","",0,null],[12,"image_channel_data_type","","",0,null],[3,"cl_image_desc","","",null,null],[12,"image_type","","",1,null],[12,"image_width","","",1,null],[12,"image_height","","",1,null],[12,"image_depth","","",1,null],[12,"image_array_size","","",1,null],[12,"image_row_pitch","","",1,null],[12,"image_slice_pitch","","",1,null],[12,"num_mip_levels","","",1,null],[12,"num_samples","","",1,null],[12,"buffer","","",1,null],[3,"cl_buffer_region","","",null,null],[12,"origin","","",2,null],[12,"size","","",2,null],[5,"clCreateFromGLBuffer","","",null,null],[5,"clCreateFromGLTexture","","",null,null],[5,"clGetGLObjectInfo","","",null,null],[5,"clGetGLTextureInfo","","",null,null],[5,"clCreateFromGLRenderbuffer","","",null,null],[5,"clEnqueueAcquireGLObjects","","",null,null],[5,"clEnqueueReleaseGLObjects","","",null,null],[5,"clCreateFromGLTexture2D","","",null,null],[5,"clCreateFromGLTexture3D","","",null,null],[5,"clGetGLContextInfoKHR","","",null,null],[5,"clGetPlatformIDs","","",null,null],[5,"clGetPlatformInfo","","",null,null],[5,"clGetDeviceIDs","","",null,null],[5,"clGetDeviceInfo","","",null,null],[5,"clCreateContext","","",null,null],[5,"clCreateContextFromType","","",null,null],[5,"clRetainContext","","",null,null],[5,"clReleaseContext","","",null,null],[5,"clGetContextInfo","","",null,null],[5,"clCreateCommandQueue","","",null,null],[5,"clRetainCommandQueue","","",null,null],[5,"clReleaseCommandQueue","","",null,null],[5,"clGetCommandQueueInfo","","",null,null],[5,"clCreateBuffer","","",null,null],[5,"clCreateSubBuffer","","",null,null],[5,"clCreateImage2D","","",null,null],[5,"clCreateImage3D","","",null,null],[5,"clRetainMemObject","","",null,null],[5,"clReleaseMemObject","","",null,null],[5,"clGetSupportedImageFormats","","",null,null],[5,"clGetMemObjectInfo","","",null,null],[5,"clGetImageInfo","","",null,null],[5,"clSetMemObjectDestructorCallback","","",null,null],[5,"clCreateSampler","","",null,null],[5,"clRetainSampler","","",null,null],[5,"clReleaseSampler","","",null,null],[5,"clGetSamplerInfo","","",null,null],[5,"clCreateProgramWithSource","","",null,null],[5,"clCreateProgramWithBinary","","",null,null],[5,"clRetainProgram","","",null,null],[5,"clReleaseProgram","","",null,null],[5,"clBuildProgram","","",null,null],[5,"clUnloadCompiler","","",null,null],[5,"clGetProgramInfo","","",null,null],[5,"clGetProgramBuildInfo","","",null,null],[5,"clCreateKernel","","",null,null],[5,"clCreateKernelsInProgram","","",null,null],[5,"clRetainKernel","","",null,null],[5,"clReleaseKernel","","",null,null],[5,"clSetKernelArg","","",null,null],[5,"clGetKernelInfo","","",null,null],[5,"clGetKernelWorkGroupInfo","","",null,null],[5,"clWaitForEvents","","",null,null],[5,"clGetEventInfo","","",null,null],[5,"clCreateUserEvent","","",null,null],[5,"clRetainEvent","","",null,null],[5,"clReleaseEvent","","",null,null],[5,"clSetUserEventStatus","","",null,null],[5,"clSetEventCallback","","",null,null],[5,"clGetEventProfilingInfo","","",null,null],[5,"clFlush","","",null,null],[5,"clFinish","","",null,null],[5,"clEnqueueReadBuffer","","",null,null],[5,"clEnqueueReadBufferRect","","",null,null],[5,"clEnqueueWriteBuffer","","",null,null],[5,"clEnqueueWriteBufferRect","","",null,null],[5,"clEnqueueCopyBuffer","","",null,null],[5,"clEnqueueCopyBufferRect","","",null,null],[5,"clEnqueueReadImage","","",null,null],[5,"clEnqueueWriteImage","","",null,null],[5,"clEnqueueCopyImage","","",null,null],[5,"clEnqueueCopyImageToBuffer","","",null,null],[5,"clEnqueueCopyBufferToImage","","",null,null],[5,"clEnqueueMapBuffer","","",null,null],[5,"clEnqueueMapImage","","",null,null],[5,"clEnqueueUnmapMemObject","","",null,null],[5,"clEnqueueNDRangeKernel","","",null,null],[5,"clEnqueueTask","","",null,null],[5,"clEnqueueNativeKernel","","",null,null],[5,"clEnqueueMarker","","",null,null],[5,"clEnqueueWaitForEvents","","",null,null],[5,"clEnqueueBarrier","","",null,null],[5,"clGetExtensionFunctionAddress","","",null,null],[5,"clCreateSubDevices","","",null,null],[5,"clRetainDevice","","",null,null],[5,"clReleaseDevice","","",null,null],[5,"clCreateImage","","",null,null],[5,"clCreateProgramWithBuiltInKernels","","",null,null],[5,"clCompileProgram","","",null,null],[5,"clLinkProgram","","",null,null],[5,"clGetKernelArgInfo","","",null,null],[5,"clEnqueueFillBuffer","","",null,null],[5,"clEnqueueFillImage","","",null,null],[5,"clEnqueueMigrateMemObjects","","",null,null],[5,"clEnqueueMarkerWithWaitList","","",null,null],[5,"clEnqueueBarrierWithWaitList","","",null,null],[5,"clGetExtensionFunctionAddressForPlatform","","",null,null],[6,"cl_GLuint","","",null,null],[6,"cl_GLint","","",null,null],[6,"cl_GLenum","","",null,null],[6,"cl_gl_object_type","","",null,null],[6,"cl_gl_texture_info","","",null,null],[6,"cl_gl_platform_info","","",null,null],[6,"cl_gl_context_info","","",null,null],[6,"clGetGLContextInfoKHR_fn","","",null,null],[6,"CLeglImageKHR","","",null,null],[6,"CLeglDisplayKHR","","",null,null],[6,"CLeglSyncKHR","","",null,null],[6,"cl_egl_image_properties_khr","","",null,null],[6,"cl_d3d10_device_source_khr","","",null,null],[6,"cl_d3d10_device_set_khr","","",null,null],[6,"cl_platform_id","","",null,null],[6,"cl_device_id","","",null,null],[6,"cl_context","","",null,null],[6,"cl_command_queue","","",null,null],[6,"cl_mem","","",null,null],[6,"cl_program","","",null,null],[6,"cl_kernel","","",null,null],[6,"cl_event","","",null,null],[6,"cl_sampler","","",null,null],[6,"cl_char","","",null,null],[6,"cl_uchar","","",null,null],[6,"cl_short","","",null,null],[6,"cl_ushort","","",null,null],[6,"cl_int","","",null,null],[6,"cl_uint","","",null,null],[6,"cl_long","","",null,null],[6,"cl_ulong","","",null,null],[6,"cl_half","","",null,null],[6,"cl_float","","",null,null],[6,"cl_double","","",null,null],[6,"cl_bool","","",null,null],[6,"cl_bitfield","","",null,null],[6,"cl_device_type","","",null,null],[6,"cl_platform_info","","",null,null],[6,"cl_device_info","","",null,null],[6,"cl_device_fp_config","","",null,null],[6,"cl_device_mem_cache_type","","",null,null],[6,"cl_device_local_mem_type","","",null,null],[6,"cl_device_exec_capabilities","","",null,null],[6,"cl_device_svm_capabilities","","",null,null],[6,"cl_command_queue_properties","","",null,null],[6,"cl_device_partition_property","","",null,null],[6,"cl_device_affinity_domain","","",null,null],[6,"cl_context_properties","","",null,null],[6,"cl_context_info","","",null,null],[6,"cl_queue_properties","","",null,null],[6,"cl_command_queue_info","","",null,null],[6,"cl_channel_order","","",null,null],[6,"cl_channel_type","","",null,null],[6,"cl_mem_flags","","",null,null],[6,"cl_svm_mem_flags","","",null,null],[6,"cl_mem_object_type","","",null,null],[6,"cl_mem_info","","",null,null],[6,"cl_mem_migration_flags","","",null,null],[6,"cl_image_info","","",null,null],[6,"cl_buffer_create_type","","",null,null],[6,"cl_addressing_mode","","",null,null],[6,"cl_filter_mode","","",null,null],[6,"cl_sampler_info","","",null,null],[6,"cl_map_flags","","",null,null],[6,"cl_pipe_properties","","",null,null],[6,"cl_pipe_info","","",null,null],[6,"cl_program_info","","",null,null],[6,"cl_program_build_info","","",null,null],[6,"cl_program_binary_type","","",null,null],[6,"cl_build_status","","",null,null],[6,"cl_kernel_info","","",null,null],[6,"cl_kernel_arg_info","","",null,null],[6,"cl_kernel_arg_address_qualifier","","",null,null],[6,"cl_kernel_arg_access_qualifier","","",null,null],[6,"cl_kernel_arg_type_qualifier","","",null,null],[6,"cl_kernel_work_group_info","","",null,null],[6,"cl_kernel_sub_group_info","","",null,null],[6,"cl_event_info","","",null,null],[6,"cl_command_type","","",null,null],[6,"cl_profiling_info","","",null,null],[6,"cl_sampler_properties","","",null,null],[6,"cl_kernel_exec_info","","",null,null],[17,"GL_TEXTURE_1D","","",null,null],[17,"GL_TEXTURE_1D_ARRAY","","",null,null],[17,"GL_TEXTURE_BUFFER","","",null,null],[17,"GL_TEXTURE_2D","","",null,null],[17,"GL_TEXTURE_2D_ARRAY","","",null,null],[17,"GL_TEXTURE_3D","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"GL_TEXTURE_RECTANGLE","","",null,null],[17,"CL_GL_OBJECT_BUFFER","","",null,null],[17,"CL_GL_OBJECT_TEXTURE2D","","",null,null],[17,"CL_GL_OBJECT_TEXTURE3D","","",null,null],[17,"CL_GL_OBJECT_RENDERBUFFER","","",null,null],[17,"CL_GL_OBJECT_TEXTURE2D_ARRAY","","",null,null],[17,"CL_GL_OBJECT_TEXTURE1D","","",null,null],[17,"CL_GL_OBJECT_TEXTURE1D_ARRAY","","",null,null],[17,"CL_GL_OBJECT_TEXTURE_BUFFER","","",null,null],[17,"CL_GL_TEXTURE_TARGET","","",null,null],[17,"CL_GL_MIPMAP_LEVEL","","",null,null],[17,"CL_GL_NUM_SAMPLES","","",null,null],[17,"CL_KHR_GL_SHARING","","",null,null],[17,"CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR","","",null,null],[17,"CL_CURRENT_DEVICE_FOR_GL_CONTEXT_KHR","","",null,null],[17,"CL_DEVICES_FOR_GL_CONTEXT_KHR","","",null,null],[17,"CL_GL_CONTEXT_KHR","","",null,null],[17,"CL_EGL_DISPLAY_KHR","","",null,null],[17,"CL_GLX_DISPLAY_KHR","","",null,null],[17,"CL_WGL_HDC_KHR","","",null,null],[17,"CL_CGL_SHAREGROUP_KHR","","",null,null],[17,"CL_CONTEXT_PROPERTY_USE_CGL_SHAREGROUP_APPLE","","",null,null],[17,"CL_CONTEXT_D3D10_DEVICE_KHR","","",null,null],[17,"CL_CONTEXT_ADAPTER_D3D9_KHR","","",null,null],[17,"CL_CONTEXT_ADAPTER_D3D9EX_KHR","","",null,null],[17,"CL_CONTEXT_ADAPTER_DXVA_KHR","","",null,null],[17,"CL_CONTEXT_D3D11_DEVICE_KHR","","",null,null],[17,"CL_SUCCESS","","",null,null],[17,"CL_DEVICE_NOT_FOUND","","",null,null],[17,"CL_DEVICE_NOT_AVAILABLE","","",null,null],[17,"CL_COMPILER_NOT_AVAILABLE","","",null,null],[17,"CL_MEM_OBJECT_ALLOCATION_FAILURE","","",null,null],[17,"CL_OUT_OF_RESOURCES","","",null,null],[17,"CL_OUT_OF_HOST_MEMORY","","",null,null],[17,"CL_PROFILING_INFO_NOT_AVAILABLE","","",null,null],[17,"CL_MEM_COPY_OVERLAP","","",null,null],[17,"CL_IMAGE_FORMAT_MISMATCH","","",null,null],[17,"CL_IMAGE_FORMAT_NOT_SUPPORTED","","",null,null],[17,"CL_BUILD_PROGRAM_FAILURE","","",null,null],[17,"CL_MAP_FAILURE","","",null,null],[17,"CL_MISALIGNED_SUB_BUFFER_OFFSET","","",null,null],[17,"CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST","","",null,null],[17,"CL_COMPILE_PROGRAM_FAILURE","","",null,null],[17,"CL_LINKER_NOT_AVAILABLE","","",null,null],[17,"CL_LINK_PROGRAM_FAILURE","","",null,null],[17,"CL_DEVICE_PARTITION_FAILED","","",null,null],[17,"CL_KERNEL_ARG_INFO_NOT_AVAILABLE","","",null,null],[17,"CL_INVALID_VALUE","","",null,null],[17,"CL_INVALID_DEVICE_TYPE","","",null,null],[17,"CL_INVALID_PLATFORM","","",null,null],[17,"CL_INVALID_DEVICE","","",null,null],[17,"CL_INVALID_CONTEXT","","",null,null],[17,"CL_INVALID_QUEUE_PROPERTIES","","",null,null],[17,"CL_INVALID_COMMAND_QUEUE","","",null,null],[17,"CL_INVALID_HOST_PTR","","",null,null],[17,"CL_INVALID_MEM_OBJECT","","",null,null],[17,"CL_INVALID_IMAGE_FORMAT_DESCRIPTOR","","",null,null],[17,"CL_INVALID_IMAGE_SIZE","","",null,null],[17,"CL_INVALID_SAMPLER","","",null,null],[17,"CL_INVALID_BINARY","","",null,null],[17,"CL_INVALID_BUILD_OPTIONS","","",null,null],[17,"CL_INVALID_PROGRAM","","",null,null],[17,"CL_INVALID_PROGRAM_EXECUTABLE","","",null,null],[17,"CL_INVALID_KERNEL_NAME","","",null,null],[17,"CL_INVALID_KERNEL_DEFINITION","","",null,null],[17,"CL_INVALID_KERNEL","","",null,null],[17,"CL_INVALID_ARG_INDEX","","",null,null],[17,"CL_INVALID_ARG_VALUE","","",null,null],[17,"CL_INVALID_ARG_SIZE","","",null,null],[17,"CL_INVALID_KERNEL_ARGS","","",null,null],[17,"CL_INVALID_WORK_DIMENSION","","",null,null],[17,"CL_INVALID_WORK_GROUP_SIZE","","",null,null],[17,"CL_INVALID_WORK_ITEM_SIZE","","",null,null],[17,"CL_INVALID_GLOBAL_OFFSET","","",null,null],[17,"CL_INVALID_EVENT_WAIT_LIST","","",null,null],[17,"CL_INVALID_EVENT","","",null,null],[17,"CL_INVALID_OPERATION","","",null,null],[17,"CL_INVALID_GL_OBJECT","","",null,null],[17,"CL_INVALID_BUFFER_SIZE","","",null,null],[17,"CL_INVALID_MIP_LEVEL","","",null,null],[17,"CL_INVALID_GLOBAL_WORK_SIZE","","",null,null],[17,"CL_INVALID_PROPERTY","","",null,null],[17,"CL_INVALID_IMAGE_DESCRIPTOR","","",null,null],[17,"CL_INVALID_COMPILER_OPTIONS","","",null,null],[17,"CL_INVALID_LINKER_OPTIONS","","",null,null],[17,"CL_INVALID_DEVICE_PARTITION_COUNT","","",null,null],[17,"CL_INVALID_PIPE_SIZE","","",null,null],[17,"CL_INVALID_DEVICE_QUEUE","","",null,null],[17,"CL_PLATFORM_NOT_FOUND_KHR","","",null,null],[17,"CL_VERSION_1_0","","",null,null],[17,"CL_VERSION_1_1","","",null,null],[17,"CL_VERSION_1_2","","",null,null],[17,"CL_VERSION_2_0","","",null,null],[17,"CL_VERSION_2_1","","",null,null],[17,"CL_FALSE","","",null,null],[17,"CL_TRUE","","",null,null],[17,"CL_BLOCKING","","",null,null],[17,"CL_NON_BLOCKING","","",null,null],[17,"CL_PLATFORM_PROFILE","","",null,null],[17,"CL_PLATFORM_VERSION","","",null,null],[17,"CL_PLATFORM_NAME","","",null,null],[17,"CL_PLATFORM_VENDOR","","",null,null],[17,"CL_PLATFORM_EXTENSIONS","","",null,null],[17,"CL_PLATFORM_HOST_TIMER_RESOLUTION","","",null,null],[17,"CL_DEVICE_TYPE_DEFAULT","","",null,null],[17,"CL_DEVICE_TYPE_CPU","","",null,null],[17,"CL_DEVICE_TYPE_GPU","","",null,null],[17,"CL_DEVICE_TYPE_ACCELERATOR","","",null,null],[17,"CL_DEVICE_TYPE_CUSTOM","","",null,null],[17,"CL_DEVICE_TYPE_ALL","","",null,null],[17,"CL_DEVICE_TYPE","","",null,null],[17,"CL_DEVICE_VENDOR_ID","","",null,null],[17,"CL_DEVICE_MAX_COMPUTE_UNITS","","",null,null],[17,"CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS","","",null,null],[17,"CL_DEVICE_MAX_WORK_GROUP_SIZE","","",null,null],[17,"CL_DEVICE_MAX_WORK_ITEM_SIZES","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE","","",null,null],[17,"CL_DEVICE_MAX_CLOCK_FREQUENCY","","",null,null],[17,"CL_DEVICE_ADDRESS_BITS","","",null,null],[17,"CL_DEVICE_MAX_READ_IMAGE_ARGS","","",null,null],[17,"CL_DEVICE_MAX_WRITE_IMAGE_ARGS","","",null,null],[17,"CL_DEVICE_MAX_MEM_ALLOC_SIZE","","",null,null],[17,"CL_DEVICE_IMAGE2D_MAX_WIDTH","","",null,null],[17,"CL_DEVICE_IMAGE2D_MAX_HEIGHT","","",null,null],[17,"CL_DEVICE_IMAGE3D_MAX_WIDTH","","",null,null],[17,"CL_DEVICE_IMAGE3D_MAX_HEIGHT","","",null,null],[17,"CL_DEVICE_IMAGE3D_MAX_DEPTH","","",null,null],[17,"CL_DEVICE_IMAGE_SUPPORT","","",null,null],[17,"CL_DEVICE_MAX_PARAMETER_SIZE","","",null,null],[17,"CL_DEVICE_MAX_SAMPLERS","","",null,null],[17,"CL_DEVICE_MEM_BASE_ADDR_ALIGN","","",null,null],[17,"CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE","","",null,null],[17,"CL_DEVICE_SINGLE_FP_CONFIG","","",null,null],[17,"CL_DEVICE_GLOBAL_MEM_CACHE_TYPE","","",null,null],[17,"CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE","","",null,null],[17,"CL_DEVICE_GLOBAL_MEM_CACHE_SIZE","","",null,null],[17,"CL_DEVICE_GLOBAL_MEM_SIZE","","",null,null],[17,"CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE","","",null,null],[17,"CL_DEVICE_MAX_CONSTANT_ARGS","","",null,null],[17,"CL_DEVICE_LOCAL_MEM_TYPE","","",null,null],[17,"CL_DEVICE_LOCAL_MEM_SIZE","","",null,null],[17,"CL_DEVICE_ERROR_CORRECTION_SUPPORT","","",null,null],[17,"CL_DEVICE_PROFILING_TIMER_RESOLUTION","","",null,null],[17,"CL_DEVICE_ENDIAN_LITTLE","","",null,null],[17,"CL_DEVICE_AVAILABLE","","",null,null],[17,"CL_DEVICE_COMPILER_AVAILABLE","","",null,null],[17,"CL_DEVICE_EXECUTION_CAPABILITIES","","",null,null],[17,"CL_DEVICE_QUEUE_PROPERTIES","","",null,null],[17,"CL_DEVICE_QUEUE_ON_HOST_PROPERTIES","","",null,null],[17,"CL_DEVICE_NAME","","",null,null],[17,"CL_DEVICE_VENDOR","","",null,null],[17,"CL_DRIVER_VERSION","","",null,null],[17,"CL_DEVICE_PROFILE","","",null,null],[17,"CL_DEVICE_VERSION","","",null,null],[17,"CL_DEVICE_EXTENSIONS","","",null,null],[17,"CL_DEVICE_PLATFORM","","",null,null],[17,"CL_DEVICE_DOUBLE_FP_CONFIG","","",null,null],[17,"CL_DEVICE_HALF_FP_CONFIG","","",null,null],[17,"CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF","","",null,null],[17,"CL_DEVICE_HOST_UNIFIED_MEMORY","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_INT","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE","","",null,null],[17,"CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF","","",null,null],[17,"CL_DEVICE_OPENCL_C_VERSION","","",null,null],[17,"CL_DEVICE_LINKER_AVAILABLE","","",null,null],[17,"CL_DEVICE_BUILT_IN_KERNELS","","",null,null],[17,"CL_DEVICE_IMAGE_MAX_BUFFER_SIZE","","",null,null],[17,"CL_DEVICE_IMAGE_MAX_ARRAY_SIZE","","",null,null],[17,"CL_DEVICE_PARENT_DEVICE","","",null,null],[17,"CL_DEVICE_PARTITION_MAX_SUB_DEVICES","","",null,null],[17,"CL_DEVICE_PARTITION_PROPERTIES","","",null,null],[17,"CL_DEVICE_PARTITION_AFFINITY_DOMAIN","","",null,null],[17,"CL_DEVICE_PARTITION_TYPE","","",null,null],[17,"CL_DEVICE_REFERENCE_COUNT","","",null,null],[17,"CL_DEVICE_PREFERRED_INTEROP_USER_SYNC","","",null,null],[17,"CL_DEVICE_PRINTF_BUFFER_SIZE","","",null,null],[17,"CL_DEVICE_IMAGE_PITCH_ALIGNMENT","","",null,null],[17,"CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT","","",null,null],[17,"CL_DEVICE_MAX_READ_WRITE_IMAGE_ARGS","","",null,null],[17,"CL_DEVICE_MAX_GLOBAL_VARIABLE_SIZE","","",null,null],[17,"CL_DEVICE_QUEUE_ON_DEVICE_PROPERTIES","","",null,null],[17,"CL_DEVICE_QUEUE_ON_DEVICE_PREFERRED_SIZE","","",null,null],[17,"CL_DEVICE_QUEUE_ON_DEVICE_MAX_SIZE","","",null,null],[17,"CL_DEVICE_MAX_ON_DEVICE_QUEUES","","",null,null],[17,"CL_DEVICE_MAX_ON_DEVICE_EVENTS","","",null,null],[17,"CL_DEVICE_SVM_CAPABILITIES","","",null,null],[17,"CL_DEVICE_GLOBAL_VARIABLE_PREFERRED_TOTAL_SIZE","","",null,null],[17,"CL_DEVICE_MAX_PIPE_ARGS","","",null,null],[17,"CL_DEVICE_PIPE_MAX_ACTIVE_RESERVATIONS","","",null,null],[17,"CL_DEVICE_PIPE_MAX_PACKET_SIZE","","",null,null],[17,"CL_DEVICE_PREFERRED_PLATFORM_ATOMIC_ALIGNMENT","","",null,null],[17,"CL_DEVICE_PREFERRED_GLOBAL_ATOMIC_ALIGNMENT","","",null,null],[17,"CL_DEVICE_PREFERRED_LOCAL_ATOMIC_ALIGNMENT","","",null,null],[17,"CL_DEVICE_IL_VERSION","","",null,null],[17,"CL_DEVICE_MAX_NUM_SUB_GROUPS","","",null,null],[17,"CL_DEVICE_SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS","","",null,null],[17,"CL_FP_DENORM","","",null,null],[17,"CL_FP_INF_NAN","","",null,null],[17,"CL_FP_ROUND_TO_NEAREST","","",null,null],[17,"CL_FP_ROUND_TO_ZERO","","",null,null],[17,"CL_FP_ROUND_TO_INF","","",null,null],[17,"CL_FP_FMA","","",null,null],[17,"CL_FP_SOFT_FLOAT","","",null,null],[17,"CL_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT","","",null,null],[17,"CL_NONE","","",null,null],[17,"CL_READ_ONLY_CACHE","","",null,null],[17,"CL_READ_WRITE_CACHE","","",null,null],[17,"CL_LOCAL","","",null,null],[17,"CL_GLOBAL","","",null,null],[17,"CL_EXEC_KERNEL","","",null,null],[17,"CL_EXEC_NATIVE_KERNEL","","",null,null],[17,"CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE","","",null,null],[17,"CL_QUEUE_PROFILING_ENABLE","","",null,null],[17,"CL_QUEUE_ON_DEVICE","","",null,null],[17,"CL_QUEUE_ON_DEVICE_DEFAULT","","",null,null],[17,"CL_CONTEXT_REFERENCE_COUNT","","",null,null],[17,"CL_CONTEXT_DEVICES","","",null,null],[17,"CL_CONTEXT_PROPERTIES","","",null,null],[17,"CL_CONTEXT_NUM_DEVICES","","",null,null],[17,"CL_CONTEXT_PLATFORM","","",null,null],[17,"CL_CONTEXT_INTEROP_USER_SYNC","","",null,null],[17,"CL_DEVICE_PARTITION_EQUALLY","","",null,null],[17,"CL_DEVICE_PARTITION_BY_COUNTS","","",null,null],[17,"CL_DEVICE_PARTITION_BY_COUNTS_LIST_END","","",null,null],[17,"CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_NUMA","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_L4_CACHE","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_L3_CACHE","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_L2_CACHE","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_L1_CACHE","","",null,null],[17,"CL_DEVICE_AFFINITY_DOMAIN_NEXT_PARTITIONABLE","","",null,null],[17,"CL_DEVICE_SVM_COARSE_GRAIN_BUFFER","","",null,null],[17,"CL_DEVICE_SVM_FINE_GRAIN_BUFFER","","",null,null],[17,"CL_DEVICE_SVM_FINE_GRAIN_SYSTEM","","",null,null],[17,"CL_DEVICE_SVM_ATOMICS","","",null,null],[17,"CL_QUEUE_CONTEXT","","",null,null],[17,"CL_QUEUE_DEVICE","","",null,null],[17,"CL_QUEUE_REFERENCE_COUNT","","",null,null],[17,"CL_QUEUE_PROPERTIES","","",null,null],[17,"CL_QUEUE_SIZE","","",null,null],[17,"CL_QUEUE_DEVICE_DEFAULT","","",null,null],[17,"CL_MEM_READ_WRITE","","",null,null],[17,"CL_MEM_WRITE_ONLY","","",null,null],[17,"CL_MEM_READ_ONLY","","",null,null],[17,"CL_MEM_USE_HOST_PTR","","",null,null],[17,"CL_MEM_ALLOC_HOST_PTR","","",null,null],[17,"CL_MEM_COPY_HOST_PTR","","",null,null],[17,"CL_MEM_HOST_WRITE_ONLY","","",null,null],[17,"CL_MEM_HOST_READ_ONLY","","",null,null],[17,"CL_MEM_HOST_NO_ACCESS","","",null,null],[17,"CL_MEM_SVM_FINE_GRAIN_BUFFER","","",null,null],[17,"CL_MEM_SVM_ATOMICS","","",null,null],[17,"CL_MEM_KERNEL_READ_AND_WRITE","","",null,null],[17,"CL_MIGRATE_MEM_OBJECT_HOST","","",null,null],[17,"CL_MIGRATE_MEM_OBJECT_CONTENT_UNDEFINED","","",null,null],[17,"CL_R","","",null,null],[17,"CL_A","","",null,null],[17,"CL_RG","","",null,null],[17,"CL_RA","","",null,null],[17,"CL_RGB","","",null,null],[17,"CL_RGBA","","",null,null],[17,"CL_BGRA","","",null,null],[17,"CL_ARGB","","",null,null],[17,"CL_INTENSITY","","",null,null],[17,"CL_LUMINANCE","","",null,null],[17,"CL_Rx","","",null,null],[17,"CL_RGx","","",null,null],[17,"CL_RGBx","","",null,null],[17,"CL_DEPTH","","",null,null],[17,"CL_DEPTH_STENCIL","","",null,null],[17,"CL_sRGB","","",null,null],[17,"CL_sRGBx","","",null,null],[17,"CL_sRGBA","","",null,null],[17,"CL_sBGRA","","",null,null],[17,"CL_ABGR","","",null,null],[17,"CL_SNORM_INT8","","",null,null],[17,"CL_SNORM_INT16","","",null,null],[17,"CL_UNORM_INT8","","",null,null],[17,"CL_UNORM_INT16","","",null,null],[17,"CL_UNORM_SHORT_565","","",null,null],[17,"CL_UNORM_SHORT_555","","",null,null],[17,"CL_UNORM_INT_101010","","",null,null],[17,"CL_SIGNED_INT8","","",null,null],[17,"CL_SIGNED_INT16","","",null,null],[17,"CL_SIGNED_INT32","","",null,null],[17,"CL_UNSIGNED_INT8","","",null,null],[17,"CL_UNSIGNED_INT16","","",null,null],[17,"CL_UNSIGNED_INT32","","",null,null],[17,"CL_HALF_FLOAT","","",null,null],[17,"CL_FLOAT","","",null,null],[17,"CL_UNORM_INT24","","",null,null],[17,"CL_UNORM_INT_101010_2","","",null,null],[17,"CL_MEM_OBJECT_BUFFER","","",null,null],[17,"CL_MEM_OBJECT_IMAGE2D","","",null,null],[17,"CL_MEM_OBJECT_IMAGE3D","","",null,null],[17,"CL_MEM_OBJECT_IMAGE2D_ARRAY","","",null,null],[17,"CL_MEM_OBJECT_IMAGE1D","","",null,null],[17,"CL_MEM_OBJECT_IMAGE1D_ARRAY","","",null,null],[17,"CL_MEM_OBJECT_IMAGE1D_BUFFER","","",null,null],[17,"CL_MEM_OBJECT_PIPE","","",null,null],[17,"CL_MEM_TYPE","","",null,null],[17,"CL_MEM_FLAGS","","",null,null],[17,"CL_MEM_SIZE","","",null,null],[17,"CL_MEM_HOST_PTR","","",null,null],[17,"CL_MEM_MAP_COUNT","","",null,null],[17,"CL_MEM_REFERENCE_COUNT","","",null,null],[17,"CL_MEM_CONTEXT","","",null,null],[17,"CL_MEM_ASSOCIATED_MEMOBJECT","","",null,null],[17,"CL_MEM_OFFSET","","",null,null],[17,"CL_MEM_USES_SVM_POINTER","","",null,null],[17,"CL_IMAGE_FORMAT","","",null,null],[17,"CL_IMAGE_ELEMENT_SIZE","","",null,null],[17,"CL_IMAGE_ROW_PITCH","","",null,null],[17,"CL_IMAGE_SLICE_PITCH","","",null,null],[17,"CL_IMAGE_WIDTH","","",null,null],[17,"CL_IMAGE_HEIGHT","","",null,null],[17,"CL_IMAGE_DEPTH","","",null,null],[17,"CL_IMAGE_ARRAY_SIZE","","",null,null],[17,"CL_IMAGE_BUFFER","","",null,null],[17,"CL_IMAGE_NUM_MIP_LEVELS","","",null,null],[17,"CL_IMAGE_NUM_SAMPLES","","",null,null],[17,"CL_PIPE_PACKET_SIZE","","",null,null],[17,"CL_PIPE_MAX_PACKETS","","",null,null],[17,"CL_ADDRESS_NONE","","",null,null],[17,"CL_ADDRESS_CLAMP_TO_EDGE","","",null,null],[17,"CL_ADDRESS_CLAMP","","",null,null],[17,"CL_ADDRESS_REPEAT","","",null,null],[17,"CL_ADDRESS_MIRRORED_REPEAT","","",null,null],[17,"CL_FILTER_NEAREST","","",null,null],[17,"CL_FILTER_LINEAR","","",null,null],[17,"CL_SAMPLER_REFERENCE_COUNT","","",null,null],[17,"CL_SAMPLER_CONTEXT","","",null,null],[17,"CL_SAMPLER_NORMALIZED_COORDS","","",null,null],[17,"CL_SAMPLER_ADDRESSING_MODE","","",null,null],[17,"CL_SAMPLER_FILTER_MODE","","",null,null],[17,"CL_SAMPLER_MIP_FILTER_MODE","","",null,null],[17,"CL_SAMPLER_LOD_MIN","","",null,null],[17,"CL_SAMPLER_LOD_MAX","","",null,null],[17,"CL_MAP_READ","","",null,null],[17,"CL_MAP_WRITE","","",null,null],[17,"CL_MAP_WRITE_INVALIDATE_REGION","","",null,null],[17,"CL_PROGRAM_REFERENCE_COUNT","","",null,null],[17,"CL_PROGRAM_CONTEXT","","",null,null],[17,"CL_PROGRAM_NUM_DEVICES","","",null,null],[17,"CL_PROGRAM_DEVICES","","",null,null],[17,"CL_PROGRAM_SOURCE","","",null,null],[17,"CL_PROGRAM_BINARY_SIZES","","",null,null],[17,"CL_PROGRAM_BINARIES","","",null,null],[17,"CL_PROGRAM_NUM_KERNELS","","",null,null],[17,"CL_PROGRAM_KERNEL_NAMES","","",null,null],[17,"CL_PROGRAM_IL","","",null,null],[17,"CL_PROGRAM_BUILD_STATUS","","",null,null],[17,"CL_PROGRAM_BUILD_OPTIONS","","",null,null],[17,"CL_PROGRAM_BUILD_LOG","","",null,null],[17,"CL_PROGRAM_BINARY_TYPE","","",null,null],[17,"CL_PROGRAM_BUILD_GLOBAL_VARIABLE_TOTAL_SIZE","","",null,null],[17,"CL_PROGRAM_BINARY_TYPE_NONE","","",null,null],[17,"CL_PROGRAM_BINARY_TYPE_COMPILED_OBJECT","","",null,null],[17,"CL_PROGRAM_BINARY_TYPE_LIBRARY","","",null,null],[17,"CL_PROGRAM_BINARY_TYPE_EXECUTABLE","","",null,null],[17,"CL_BUILD_SUCCESS","","",null,null],[17,"CL_BUILD_NONE","","",null,null],[17,"CL_BUILD_ERROR","","",null,null],[17,"CL_BUILD_IN_PROGRESS","","",null,null],[17,"CL_KERNEL_FUNCTION_NAME","","",null,null],[17,"CL_KERNEL_NUM_ARGS","","",null,null],[17,"CL_KERNEL_REFERENCE_COUNT","","",null,null],[17,"CL_KERNEL_CONTEXT","","",null,null],[17,"CL_KERNEL_PROGRAM","","",null,null],[17,"CL_KERNEL_ATTRIBUTES","","",null,null],[17,"CL_KERNEL_MAX_NUM_SUB_GROUPS","","",null,null],[17,"CL_KERNEL_COMPILE_NUM_SUB_GROUPS","","",null,null],[17,"CL_KERNEL_ARG_ADDRESS_QUALIFIER","","",null,null],[17,"CL_KERNEL_ARG_ACCESS_QUALIFIER","","",null,null],[17,"CL_KERNEL_ARG_TYPE_NAME","","",null,null],[17,"CL_KERNEL_ARG_TYPE_QUALIFIER","","",null,null],[17,"CL_KERNEL_ARG_NAME","","",null,null],[17,"CL_KERNEL_ARG_ADDRESS_GLOBAL","","",null,null],[17,"CL_KERNEL_ARG_ADDRESS_LOCAL","","",null,null],[17,"CL_KERNEL_ARG_ADDRESS_CONSTANT","","",null,null],[17,"CL_KERNEL_ARG_ADDRESS_PRIVATE","","",null,null],[17,"CL_KERNEL_ARG_ACCESS_READ_ONLY","","",null,null],[17,"CL_KERNEL_ARG_ACCESS_WRITE_ONLY","","",null,null],[17,"CL_KERNEL_ARG_ACCESS_READ_WRITE","","",null,null],[17,"CL_KERNEL_ARG_ACCESS_NONE","","",null,null],[17,"CL_KERNEL_ARG_TYPE_NONE","","",null,null],[17,"CL_KERNEL_ARG_TYPE_CONST","","",null,null],[17,"CL_KERNEL_ARG_TYPE_RESTRICT","","",null,null],[17,"CL_KERNEL_ARG_TYPE_VOLATILE","","",null,null],[17,"CL_KERNEL_ARG_TYPE_PIPE","","",null,null],[17,"CL_KERNEL_WORK_GROUP_SIZE","","",null,null],[17,"CL_KERNEL_COMPILE_WORK_GROUP_SIZE","","",null,null],[17,"CL_KERNEL_LOCAL_MEM_SIZE","","",null,null],[17,"CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE","","",null,null],[17,"CL_KERNEL_PRIVATE_MEM_SIZE","","",null,null],[17,"CL_KERNEL_GLOBAL_WORK_SIZE","","",null,null],[17,"CL_KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE","","",null,null],[17,"CL_KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE","","",null,null],[17,"CL_KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT","","",null,null],[17,"CL_KERNEL_EXEC_INFO_SVM_PTRS","","",null,null],[17,"CL_KERNEL_EXEC_INFO_SVM_FINE_GRAIN_SYSTEM","","",null,null],[17,"CL_EVENT_COMMAND_QUEUE","","",null,null],[17,"CL_EVENT_COMMAND_TYPE","","",null,null],[17,"CL_EVENT_REFERENCE_COUNT","","",null,null],[17,"CL_EVENT_COMMAND_EXECUTION_STATUS","","",null,null],[17,"CL_EVENT_CONTEXT","","",null,null],[17,"CL_COMMAND_NDRANGE_KERNEL","","",null,null],[17,"CL_COMMAND_TASK","","",null,null],[17,"CL_COMMAND_NATIVE_KERNEL","","",null,null],[17,"CL_COMMAND_READ_BUFFER","","",null,null],[17,"CL_COMMAND_WRITE_BUFFER","","",null,null],[17,"CL_COMMAND_COPY_BUFFER","","",null,null],[17,"CL_COMMAND_READ_IMAGE","","",null,null],[17,"CL_COMMAND_WRITE_IMAGE","","",null,null],[17,"CL_COMMAND_COPY_IMAGE","","",null,null],[17,"CL_COMMAND_COPY_IMAGE_TO_BUFFER","","",null,null],[17,"CL_COMMAND_COPY_BUFFER_TO_IMAGE","","",null,null],[17,"CL_COMMAND_MAP_BUFFER","","",null,null],[17,"CL_COMMAND_MAP_IMAGE","","",null,null],[17,"CL_COMMAND_UNMAP_MEM_OBJECT","","",null,null],[17,"CL_COMMAND_MARKER","","",null,null],[17,"CL_COMMAND_ACQUIRE_GL_OBJECTS","","",null,null],[17,"CL_COMMAND_RELEASE_GL_OBJECTS","","",null,null],[17,"CL_COMMAND_READ_BUFFER_RECT","","",null,null],[17,"CL_COMMAND_WRITE_BUFFER_RECT","","",null,null],[17,"CL_COMMAND_COPY_BUFFER_RECT","","",null,null],[17,"CL_COMMAND_USER","","",null,null],[17,"CL_COMMAND_BARRIER","","",null,null],[17,"CL_COMMAND_MIGRATE_MEM_OBJECTS","","",null,null],[17,"CL_COMMAND_FILL_BUFFER","","",null,null],[17,"CL_COMMAND_FILL_IMAGE","","",null,null],[17,"CL_COMMAND_SVM_FREE","","",null,null],[17,"CL_COMMAND_SVM_MEMCPY","","",null,null],[17,"CL_COMMAND_SVM_MEMFILL","","",null,null],[17,"CL_COMMAND_SVM_MAP","","",null,null],[17,"CL_COMMAND_SVM_UNMAP","","",null,null],[17,"CL_COMPLETE","","",null,null],[17,"CL_RUNNING","","",null,null],[17,"CL_SUBMITTED","","",null,null],[17,"CL_QUEUED","","",null,null],[17,"CL_BUFFER_CREATE_TYPE_REGION","","",null,null],[17,"CL_PROFILING_COMMAND_QUEUED","","",null,null],[17,"CL_PROFILING_COMMAND_SUBMIT","","",null,null],[17,"CL_PROFILING_COMMAND_START","","",null,null],[17,"CL_PROFILING_COMMAND_END","","",null,null],[17,"CL_PROFILING_COMMAND_COMPLETE","","",null,null]],"paths":[[3,"cl_image_format"],[3,"cl_image_desc"],[3,"cl_buffer_region"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[3,"CachePadded","","Pad `T` to the length of a cacheline.",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"generics":["joinhandle"],"name":"result"}}],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box<T>`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&'a T`: a shared reference valid for lifetime `'a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,{"inputs":[{"name":"self"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"store","","Do an atomic store with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["owned"],"name":"option"},{"name":"ordering"}],"output":null}],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding a shared reference to the pointer that was stored.",0,{"inputs":[{"name":"self"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"shared"}}],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"ordering"}],"output":null}],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"generics":["owned"],"name":"option"},{"name":"ordering"}],"output":{"generics":["option"],"name":"result"}}],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the given memory ordering, immediatley acquiring a new `Shared` reference to the previously-owned pointer if successful.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared","owned"],"name":"result"}}],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"generics":["shared"],"name":"option"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["owned"],"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"self"},{"generics":["shared"],"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"generics":["shared"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data structure and should be collected when sufficient epochs have passed.",1,{"inputs":[{"name":"self"},{"name":"shared"}],"output":null}],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_raw","","",3,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber's lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates \"segments\" (arrays of nodes) for efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc<T>`.",null,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",4,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",4,{"inputs":[{"name":"self"},{"name":"box"},{"name":"ordering"}],"output":{"generics":["box"],"name":"option"}}],[11,"swap","","",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"take","","",4,{"inputs":[{"name":"self"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty queue.",5,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads blocked on `pop`.",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"is_empty","","Check if this queue is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"try_pop","","Attempt to dequeue from the front.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is empty.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty stack.",6,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to pop the top element of the stack. Deprecated method, use try_pop",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"try_pop","","Attempt to pop the top element of the stack.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_empty","","Check if this queue is empty.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new, empty queue.",7,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"is_empty","","Judge if the queue is empty.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"try_pop","","Attempt to dequeue from the front.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to one side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the opposite end of the deque from the worker, and they only have access to the `steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",8,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more data.",8,null],[13,"Data","","The stealer has successfully stolen some data.",8,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"push","","Pushes data onto the front of this work queue.",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty queue.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"steal","","Steals work off the end of the queue (opposite of the worker's end)",10,{"inputs":[{"name":"self"}],"output":{"name":"steal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"stealer"}}],[11,"fmt","crossbeam::sync","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `ArcCell`.",11,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous value.",11,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"arc"}}],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",11,{"inputs":[{"name":"self"}],"output":{"name":"arc"}}],[11,"fmt","crossbeam","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"defer","","Schedule code to be executed when exiting the scope.",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"spawn","","Create a scoped thread.",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"scopedjoinhandle"}}],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",12,{"inputs":[{"name":"self"}],"output":{"name":"scopedthreadbuilder"}}],[11,"join","","Join the scoped thread, returning the result it produced.",13,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"thread","","Get the underlying thread handle.",13,{"inputs":[{"name":"self"}],"output":{"name":"thread"}}],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"zeroed","","A const fn equivalent to mem::zeroed().",14,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",14,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"CachePadded"]]};
searchIndex["enum_primitive"] = {"doc":"This crate exports a macro `enum_from_primitive!` that wraps an `enum` declaration and automatically adds an implementation of `num::FromPrimitive` (reexported here), to allow conversion from primitive integers to the enum.  It therefore provides an alternative to the built-in `#[derive(FromPrimitive)]`, which requires the unstable `std::num::FromPrimitive` and is disabled in Rust 1.0.","items":[[4,"Option","enum_primitive","The `Option` type. See the module level documentation for more.",null,null],[13,"None","","No value",0,null],[13,"Some","","Some value `T`",0,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",1,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[14,"enum_from_primitive_impl_ty","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive_impl","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive","","Wrap this macro around an `enum` declaration to get an automatically generated implementation of `num::FromPrimitive`.",null,null],[11,"is_some","","Returns `true` if the option is a [`Some`] value.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a [`None`] value.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a [`Some`].",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is [`Some(v)`].",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any), or returns the provided default (if not).",0,{"inputs":[{"name":"self"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any), or computes a default (if not).",0,{"inputs":[{"name":"self"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a [`Result<T, E>`], mapping [`Some(v)`] to [`Ok(v)`] and [`None`] to [`Err(err)`].",0,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a [`Result<T, E>`], mapping [`Some(v)`] to [`Ok(v)`] and [`None`] to [`Err(err())`].",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"and","","Returns [`None`] if the option is [`None`], otherwise returns `optb`.",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns [`None`] if the option is [`None`], otherwise calls `f` with the wrapped value and returns the result.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"filter","","Returns `None` if the option is `None`, otherwise calls `predicate` with the wrapped value and returns:",0,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and returns the result.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"get_or_insert","","Inserts `v` into the option if it is [`None`], then returns a mutable reference to the contained value.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"get_or_insert_with","","Inserts a value computed from `f` into the option if it is [`None`], then returns a mutable reference to the contained value.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"take","","Takes the value out of the option, leaving a [`None`] in its place.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the option.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option<&mut T>` to an `Option<T>` by cloning the contents of the option.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"transpose","","Transposes an `Option` of a `Result` into a `Result` of an `Option`.",0,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"from_iter","","Takes each element in the [`Iterator`]: if it is [`None`], no further elements are taken, and the [`None`] is returned. Should no [`None`] occur, a container with the values of each `Option` is returned.",0,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"bool"}}],[11,"into_result","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["noneerror"],"name":"result"}}],[11,"from_ok","","",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"from_error","","",0,{"inputs":[{"name":"noneerror"}],"output":{"name":"option"}}],[11,"default","","Returns [`None`].",0,{"inputs":[],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}]],"paths":[[4,"Option"],[8,"FromPrimitive"]]};
searchIndex["failure"] = {"doc":"An experimental new error-handling library.","items":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this crate.",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,{"inputs":[{"name":"d"}],"output":{"name":"error"}}],[11,"new","","Constructs a new backtrace. This will only create a real backtrace if the crate is compiled in std mode and the `RUST_BACKTRACE` environmental variable is activated.",0,{"inputs":[],"output":{"name":"backtrace"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"backtrace"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"compat"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"compat"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"compat"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"compat"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_inner","","Unwraps this into the inner error.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Creates a new context without an underlying error message.",2,{"inputs":[{"name":"d"}],"output":{"name":"context"}}],[11,"get_context","","Returns a reference to the context provided with this error.",2,{"inputs":[{"name":"self"}],"output":{"name":"d"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",2,{"inputs":[{"name":"d"}],"output":{"name":"context"}}],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement `Fail`.",3,{"inputs":[{"name":"e"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"f"}],"output":{"name":"error"}}],[11,"cause","","Returns a reference to the underlying cause of this `Error`. Unlike the method on `Fail`, this does not return an `Option`. The `Error` type always has an underlying failure.",4,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"context","","Provides context for this `Error`.",4,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"context"}}],[11,"compat","","Wraps `Error` in a compatibility type.",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"compat"}}],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail` type.",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"root_cause","","Returns the \"root cause\" of this error - the last value in the cause chain which does not return an underlying `cause`.",4,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail` type by reference.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail` type by mutable reference.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"causes","","Returns a iterator over the causes of the `Error`, beginning with the failure returned by the `cause` method and ending with the failure returned by `root_cause`.",4,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with older error handling APIs that expect `std::error::Error`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["compat"],"name":"result"}}],[10,"context","","Wraps the error type in a context type.",5,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"generics":["context"],"name":"result"}}],[10,"with_context","","Wraps the error type in a context type generated by looking at the error value.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["context"],"name":"result"}}],[8,"Fail","","The `Fail` trait.",null,null],[11,"cause","","Returns a reference to the underlying cause of this failure, if it is an error that wraps other errors.",6,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this failure, if it carries one.",6,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"context","","Provides context for this failure.",6,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"context"}}],[11,"compat","","Wraps this failure in a compatibility wrapper that implements `std::error::Error`.",6,{"inputs":[{"name":"self"}],"output":{"name":"compat"}}],[11,"causes","","Returns a iterator over the causes of this `Fail` with itself as the first item and the `root_cause` as the final item.",6,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",6,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by reference.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by mutable reference.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",6,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"causes","","Returns a iterator over the causes of this `Fail` with itself as the first item and the `root_cause` as the final item.",6,{"inputs":[{"name":"self"}],"output":{"name":"causes"}}],[11,"next","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is not satisfied.",null,null],[14,"format_err","","Constructs an `Error` using the standard string interpolation syntax.",null,null]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"] = {"doc":"","items":[[5,"Fail","failure_derive","",null,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}]],"paths":[]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"asyncsink"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"asyncsink"}],"output":{"name":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from","","",8,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_done","","Returns whether the underlying future has finished or not.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",24,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["executeerror"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"executeerrorkind"}],"output":{"name":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"inputs":[{"name":"executeerrorkind"},{"name":"f"}],"output":{"name":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"inputs":[{"name":"self"}],"output":{"name":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"inputs":[{"name":"self"}],"output":{"name":"f"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",40,null],[12,"1","","",40,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",41,null],[13,"Second","","An item from the second stream",41,null],[13,"Both","","Items from both streams",41,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",46,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",46,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",46,null],[11,"poll_complete","","",46,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",46,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",47,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",48,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",49,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",50,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",51,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",51,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",52,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",53,null],[11,"poll_complete","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",53,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",54,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",55,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",56,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",57,null],[11,"poll_complete","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",59,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",60,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",60,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",61,null],[11,"poll_complete","","",61,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",61,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",61,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",62,null],[11,"poll_complete","","",62,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",62,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",62,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",63,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",64,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",65,null],[11,"poll_complete","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",65,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",66,null],[11,"poll_complete","","",66,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",66,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",66,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",67,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",68,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",69,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",69,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",70,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",70,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",71,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",71,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",72,null],[11,"poll_complete","","",72,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",72,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",72,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",73,null],[11,"poll_complete","","",73,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",73,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",73,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",74,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",75,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",76,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",77,null],[11,"poll_complete","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",77,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",77,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",78,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",78,null],[11,"poll_complete","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",78,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",79,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_send","","",80,null],[11,"poll_complete","","",80,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",80,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",80,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"poll"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"next","","",82,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",83,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll","","",83,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",84,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"start_send","","",84,null],[11,"poll_complete","","",84,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",84,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",40,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[11,"new","","Constructs a new, empty `FuturesUnordered`",85,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",85,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",85,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",85,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"poll","","",85,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",86,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",87,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",87,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",87,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll","","",87,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",87,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",88,null],[16,"Error","","The type of error this stream may generate.",88,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",88,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",88,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",88,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",88,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"inputs":[{"name":"self"}],"output":{"name":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",88,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",88,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",88,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",88,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",88,{"inputs":[{"name":"self"}],"output":{"name":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",88,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",88,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",88,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",88,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",88,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",88,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",88,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",88,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",88,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",88,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",88,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",89,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",89,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",90,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",90,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",90,null],[11,"poll_complete","","",90,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",90,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink.",91,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",91,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",92,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",93,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",93,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",94,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",95,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"start_send","","",95,null],[11,"poll_complete","","",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",95,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",95,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",96,null],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"start_send","","",96,null],[11,"poll_complete","","",96,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",96,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",97,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",97,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",97,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll","","",97,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send","","",97,null],[11,"poll_complete","","",97,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","",97,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",98,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",98,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",98,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",99,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",99,null],[10,"start_send","","Begin the process of sending a value to the sink.",99,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",99,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"wait"}}],[11,"with","","Composes a function in front of the sink.",99,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",99,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",99,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",99,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",99,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",99,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",99,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",100,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task responsible for running it to completion.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"inputs":[{"name":"t"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",101,{"inputs":[{"name":"self"}],"output":null}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",102,{"inputs":[{"name":"self"},{"name":"run"}],"output":null}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",104,{"inputs":[{"name":"self"}],"output":{"name":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",104,{"inputs":[{"name":"self"}],"output":null}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",106,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",107,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",105,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",105,{"inputs":[{"name":"self"}],"output":{"generics":["canceled"],"name":"poll"}}],[11,"drop","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",108,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",108,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",109,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",109,{"inputs":[{"name":"self"}],"output":null}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",114,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",115,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",115,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",110,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"start_send","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",111,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"start_send","","",111,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",111,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",111,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",110,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",112,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",112,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",112,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half",113,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",113,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll","","",116,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",117,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","futures::sync","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",118,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",118,{"inputs":[{"name":"self"}],"output":{"generics":["bilockguard"],"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",118,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",118,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",119,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",119,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",120,{"inputs":[{"name":"self"}],"output":{"generics":["bilockacquired"],"name":"poll"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",121,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",121,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",121,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",121,{"inputs":[{"name":"self"}],"output":null}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"inputs":[{"name":"s"},{"name":"e"},{"name":"usize"}],"output":{"name":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",122,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",122,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"drop","","",122,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",123,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",123,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",123,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"start_send","","",124,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"startsend"}}],[11,"poll_complete","","",124,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"close","","",124,{"inputs":[{"name":"self"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",124,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","Closes the receiving half",125,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",125,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",126,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",126,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",127,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",128,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"inputs":[{"name":"f"},{"name":"e"}],"output":{"name":"spawnhandle"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",129,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",129,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",129,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",130,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",130,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","",130,{"inputs":[{"name":"self"}],"output":null}],[11,"forget","","Drop this future without canceling the underlying future.",131,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",131,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",132,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",133,{"inputs":[],"output":{"name":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",133,{"inputs":[{"name":"self"}],"output":null}],[11,"register_task","","Registers the provided task to be notified on calls to `notify`.",133,{"inputs":[{"name":"self"},{"name":"task"}],"output":null}],[11,"notify","","Notifies the task that last called `register`.",133,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",133,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",134,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",135,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",135,{"inputs":[{"name":"self"},{"generics":["executor"],"name":"arc"}],"output":null}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",135,{"inputs":[{"name":"self"},{"generics":["unpark"],"name":"arc"}],"output":{"generics":["option"],"name":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",135,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"arc"}],"output":{"name":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",135,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",135,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",136,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","futures::task","",137,{"inputs":[{"name":"self"}],"output":{"name":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",137,{"inputs":[{"generics":["eventset"],"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","futures::executor","",138,{"inputs":[{"name":"arc"}],"output":{"name":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","futures::task","",139,{"inputs":[{"name":"self"}],"output":{"name":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",139,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns `true` when called from within the context of the task.",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",135,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"generics":["option"],"name":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",135,{"inputs":[{"name":"self"},{"name":"n"},{"name":"usize"}],"output":{"name":"poll"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",138,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",138,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",138,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",138,{"inputs":[{"name":"t"}],"output":{"name":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"NotifyHandle"],[3,"Task"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",20,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",21,null],[12,"sin6_family","","",21,null],[12,"sin6_port","","",21,null],[12,"sin6_flowinfo","","",21,null],[12,"sin6_addr","","",21,null],[12,"sin6_scope_id","","",21,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",22,null],[12,"sun_family","","",22,null],[12,"sun_path","","",22,null],[3,"passwd","","",null,null],[12,"pw_name","","",23,null],[12,"pw_passwd","","",23,null],[12,"pw_uid","","",23,null],[12,"pw_gid","","",23,null],[12,"pw_change","","",23,null],[12,"pw_class","","",23,null],[12,"pw_gecos","","",23,null],[12,"pw_dir","","",23,null],[12,"pw_shell","","",23,null],[12,"pw_expire","","",23,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",24,null],[12,"ifa_name","","",24,null],[12,"ifa_flags","","",24,null],[12,"ifa_addr","","",24,null],[12,"ifa_netmask","","",24,null],[12,"ifa_dstaddr","","",24,null],[12,"ifa_data","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[3,"msghdr","","",null,null],[12,"msg_name","","",27,null],[12,"msg_namelen","","",27,null],[12,"msg_iov","","",27,null],[12,"msg_iovlen","","",27,null],[12,"msg_control","","",27,null],[12,"msg_controllen","","",27,null],[12,"msg_flags","","",27,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",28,null],[12,"cmsg_level","","",28,null],[12,"cmsg_type","","",28,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",29,null],[12,"if_name","","",29,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",30,null],[12,"aio_offset","","",30,null],[12,"aio_buf","","",30,null],[12,"aio_nbytes","","",30,null],[12,"aio_reqprio","","",30,null],[12,"aio_sigevent","","",30,null],[12,"aio_lio_opcode","","",30,null],[3,"utmpx","","",null,null],[12,"ut_user","","",31,null],[12,"ut_id","","",31,null],[12,"ut_line","","",31,null],[12,"ut_pid","","",31,null],[12,"ut_type","","",31,null],[12,"ut_tv","","",31,null],[12,"ut_host","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_pathv","","",32,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",33,null],[12,"ss_family","","",33,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",34,null],[12,"ai_family","","",34,null],[12,"ai_socktype","","",34,null],[12,"ai_protocol","","",34,null],[12,"ai_addrlen","","",34,null],[12,"ai_canonname","","",34,null],[12,"ai_addr","","",34,null],[12,"ai_next","","",34,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",35,null],[12,"denom","","",35,null],[3,"stat","","",null,null],[12,"st_dev","","",36,null],[12,"st_mode","","",36,null],[12,"st_nlink","","",36,null],[12,"st_ino","","",36,null],[12,"st_uid","","",36,null],[12,"st_gid","","",36,null],[12,"st_rdev","","",36,null],[12,"st_atime","","",36,null],[12,"st_atime_nsec","","",36,null],[12,"st_mtime","","",36,null],[12,"st_mtime_nsec","","",36,null],[12,"st_ctime","","",36,null],[12,"st_ctime_nsec","","",36,null],[12,"st_birthtime","","",36,null],[12,"st_birthtime_nsec","","",36,null],[12,"st_size","","",36,null],[12,"st_blocks","","",36,null],[12,"st_blksize","","",36,null],[12,"st_flags","","",36,null],[12,"st_gen","","",36,null],[12,"st_lspare","","",36,null],[12,"st_qspare","","",36,null],[3,"dirent","","",null,null],[12,"d_ino","","",37,null],[12,"d_seekoff","","",37,null],[12,"d_reclen","","",37,null],[12,"d_namlen","","",37,null],[12,"d_type","","",37,null],[12,"d_name","","",37,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",38,null],[12,"si_errno","","",38,null],[12,"si_code","","",38,null],[12,"si_pid","","",38,null],[12,"si_uid","","",38,null],[12,"si_status","","",38,null],[12,"si_addr","","",38,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",39,null],[12,"sa_mask","","",39,null],[12,"sa_flags","","",39,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",40,null],[12,"ss_size","","",40,null],[12,"ss_flags","","",40,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",41,null],[12,"fst_posmode","","",41,null],[12,"fst_offset","","",41,null],[12,"fst_length","","",41,null],[12,"fst_bytesalloc","","",41,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",42,null],[12,"ra_count","","",42,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",43,null],[12,"f_frsize","","",43,null],[12,"f_blocks","","",43,null],[12,"f_bfree","","",43,null],[12,"f_bavail","","",43,null],[12,"f_files","","",43,null],[12,"f_ffree","","",43,null],[12,"f_favail","","",43,null],[12,"f_fsid","","",43,null],[12,"f_flag","","",43,null],[12,"f_namemax","","",43,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",44,null],[12,"dli_fbase","","",44,null],[12,"dli_sname","","",44,null],[12,"dli_saddr","","",44,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",45,null],[12,"sin_family","","",45,null],[12,"sin_port","","",45,null],[12,"sin_addr","","",45,null],[12,"sin_zero","","",45,null],[3,"statfs","","",null,null],[12,"f_bsize","","",46,null],[12,"f_iosize","","",46,null],[12,"f_blocks","","",46,null],[12,"f_bfree","","",46,null],[12,"f_bavail","","",46,null],[12,"f_files","","",46,null],[12,"f_ffree","","",46,null],[12,"f_fsid","","",46,null],[12,"f_owner","","",46,null],[12,"f_type","","",46,null],[12,"f_flags","","",46,null],[12,"f_fssubtype","","",46,null],[12,"f_fstypename","","",46,null],[12,"f_mntonname","","",46,null],[12,"f_mntfromname","","",46,null],[12,"f_reserved","","",46,null],[3,"kevent","","",null,null],[12,"ident","","",47,null],[12,"filter","","",47,null],[12,"flags","","",47,null],[12,"fflags","","",47,null],[12,"data","","",47,null],[12,"udata","","",47,null],[3,"kevent64_s","","",null,null],[12,"ident","","",48,null],[12,"filter","","",48,null],[12,"flags","","",48,null],[12,"fflags","","",48,null],[12,"data","","",48,null],[12,"udata","","",48,null],[12,"ext","","",48,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",49,null],[12,"dqb_bsoftlimit","","",49,null],[12,"dqb_curbytes","","",49,null],[12,"dqb_ihardlimit","","",49,null],[12,"dqb_isoftlimit","","",49,null],[12,"dqb_curinodes","","",49,null],[12,"dqb_btime","","",49,null],[12,"dqb_itime","","",49,null],[12,"dqb_id","","",49,null],[12,"dqb_spare","","",49,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",50,null],[12,"ifm_version","","",50,null],[12,"ifm_type","","",50,null],[12,"ifm_addrs","","",50,null],[12,"ifm_flags","","",50,null],[12,"ifm_index","","",50,null],[12,"ifm_data","","",50,null],[3,"termios","","",null,null],[12,"c_iflag","","",51,null],[12,"c_oflag","","",51,null],[12,"c_cflag","","",51,null],[12,"c_lflag","","",51,null],[12,"c_cc","","",51,null],[12,"c_ispeed","","",51,null],[12,"c_ospeed","","",51,null],[3,"flock","","",null,null],[12,"l_start","","",52,null],[12,"l_len","","",52,null],[12,"l_pid","","",52,null],[12,"l_type","","",52,null],[12,"l_whence","","",52,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",53,null],[12,"hdr_cnt","","",53,null],[12,"trailers","","",53,null],[12,"trl_cnt","","",53,null],[3,"lconv","","",null,null],[12,"decimal_point","","",54,null],[12,"thousands_sep","","",54,null],[12,"grouping","","",54,null],[12,"int_curr_symbol","","",54,null],[12,"currency_symbol","","",54,null],[12,"mon_decimal_point","","",54,null],[12,"mon_thousands_sep","","",54,null],[12,"mon_grouping","","",54,null],[12,"positive_sign","","",54,null],[12,"negative_sign","","",54,null],[12,"int_frac_digits","","",54,null],[12,"frac_digits","","",54,null],[12,"p_cs_precedes","","",54,null],[12,"p_sep_by_space","","",54,null],[12,"n_cs_precedes","","",54,null],[12,"n_sep_by_space","","",54,null],[12,"p_sign_posn","","",54,null],[12,"n_sign_posn","","",54,null],[12,"int_p_cs_precedes","","",54,null],[12,"int_n_cs_precedes","","",54,null],[12,"int_p_sep_by_space","","",54,null],[12,"int_n_sep_by_space","","",54,null],[12,"int_p_sign_posn","","",54,null],[12,"int_n_sign_posn","","",54,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",55,null],[12,"sigev_signo","","",55,null],[12,"sigev_value","","",55,null],[12,"sigev_notify_attributes","","",55,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",56,null],[12,"pti_resident_size","","",56,null],[12,"pti_total_user","","",56,null],[12,"pti_total_system","","",56,null],[12,"pti_threads_user","","",56,null],[12,"pti_threads_system","","",56,null],[12,"pti_policy","","",56,null],[12,"pti_faults","","",56,null],[12,"pti_pageins","","",56,null],[12,"pti_cow_faults","","",56,null],[12,"pti_messages_sent","","",56,null],[12,"pti_messages_received","","",56,null],[12,"pti_syscalls_mach","","",56,null],[12,"pti_syscalls_unix","","",56,null],[12,"pti_csw","","",56,null],[12,"pti_threadnum","","",56,null],[12,"pti_numrunning","","",56,null],[12,"pti_priority","","",56,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",57,null],[12,"pbi_status","","",57,null],[12,"pbi_xstatus","","",57,null],[12,"pbi_pid","","",57,null],[12,"pbi_ppid","","",57,null],[12,"pbi_uid","","",57,null],[12,"pbi_gid","","",57,null],[12,"pbi_ruid","","",57,null],[12,"pbi_rgid","","",57,null],[12,"pbi_svuid","","",57,null],[12,"pbi_svgid","","",57,null],[12,"rfu_1","","",57,null],[12,"pbi_comm","","",57,null],[12,"pbi_name","","",57,null],[12,"pbi_nfiles","","",57,null],[12,"pbi_pgid","","",57,null],[12,"pbi_pjobc","","",57,null],[12,"e_tdev","","",57,null],[12,"e_tpgid","","",57,null],[12,"pbi_nice","","",57,null],[12,"pbi_start_tvsec","","",57,null],[12,"pbi_start_tvusec","","",57,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",58,null],[12,"ptinfo","","",58,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",59,null],[12,"pth_system_time","","",59,null],[12,"pth_cpu_usage","","",59,null],[12,"pth_policy","","",59,null],[12,"pth_run_state","","",59,null],[12,"pth_flags","","",59,null],[12,"pth_sleep_time","","",59,null],[12,"pth_curpri","","",59,null],[12,"pth_priority","","",59,null],[12,"pth_maxpriority","","",59,null],[12,"pth_name","","",59,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",60,null],[12,"xsu_avail","","",60,null],[12,"xsu_used","","",60,null],[12,"xsu_pagesize","","",60,null],[12,"xsu_encrypted","","",60,null],[3,"xucred","","",null,null],[12,"cr_version","","",61,null],[12,"cr_uid","","",61,null],[12,"cr_ngroups","","",61,null],[12,"cr_groups","","",61,null],[3,"mach_header","","",null,null],[12,"magic","","",62,null],[12,"cputype","","",62,null],[12,"cpusubtype","","",62,null],[12,"filetype","","",62,null],[12,"ncmds","","",62,null],[12,"sizeofcmds","","",62,null],[12,"flags","","",62,null],[3,"mach_header_64","","",null,null],[12,"magic","","",63,null],[12,"cputype","","",63,null],[12,"cpusubtype","","",63,null],[12,"filetype","","",63,null],[12,"ncmds","","",63,null],[12,"sizeofcmds","","",63,null],[12,"flags","","",63,null],[12,"reserved","","",63,null],[3,"segment_command","","",null,null],[12,"cmd","","",64,null],[12,"cmdsize","","",64,null],[12,"segname","","",64,null],[12,"vmaddr","","",64,null],[12,"vmsize","","",64,null],[12,"fileoff","","",64,null],[12,"filesize","","",64,null],[12,"maxprot","","",64,null],[12,"initprot","","",64,null],[12,"nsects","","",64,null],[12,"flags","","",64,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",65,null],[12,"cmdsize","","",65,null],[12,"segname","","",65,null],[12,"vmaddr","","",65,null],[12,"vmsize","","",65,null],[12,"fileoff","","",65,null],[12,"filesize","","",65,null],[12,"maxprot","","",65,null],[12,"initprot","","",65,null],[12,"nsects","","",65,null],[12,"flags","","",65,null],[3,"load_command","","",null,null],[12,"cmd","","",66,null],[12,"cmdsize","","",66,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",67,null],[12,"sdl_family","","",67,null],[12,"sdl_index","","",67,null],[12,"sdl_type","","",67,null],[12,"sdl_nlen","","",67,null],[12,"sdl_alen","","",67,null],[12,"sdl_slen","","",67,null],[12,"sdl_data","","",67,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",68,null],[12,"sin_family","","",68,null],[12,"sin_port","","",68,null],[12,"sin_addr","","",68,null],[12,"sin_srcaddr","","",68,null],[12,"sin_tos","","",68,null],[12,"sin_other","","",68,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",69,null],[12,"sc_family","","",69,null],[12,"ss_sysaddr","","",69,null],[12,"sc_id","","",69,null],[12,"sc_unit","","",69,null],[12,"sc_reserved","","",69,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",70,null],[12,"ipi_spec_dst","","",70,null],[12,"ipi_addr","","",70,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",71,null],[12,"ipi6_ifindex","","",71,null],[3,"ipc_perm","","",null,null],[12,"uid","","",72,null],[12,"gid","","",72,null],[12,"cuid","","",72,null],[12,"cgid","","",72,null],[12,"mode","","",72,null],[12,"_seq","","",72,null],[12,"_key","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"pthread_attr_t","","",null,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",74,null],[12,"tv_usec","","",74,null],[3,"if_data","","",null,null],[12,"ifi_type","","",75,null],[12,"ifi_typelen","","",75,null],[12,"ifi_physical","","",75,null],[12,"ifi_addrlen","","",75,null],[12,"ifi_hdrlen","","",75,null],[12,"ifi_recvquota","","",75,null],[12,"ifi_xmitquota","","",75,null],[12,"ifi_unused1","","",75,null],[12,"ifi_mtu","","",75,null],[12,"ifi_metric","","",75,null],[12,"ifi_baudrate","","",75,null],[12,"ifi_ipackets","","",75,null],[12,"ifi_ierrors","","",75,null],[12,"ifi_opackets","","",75,null],[12,"ifi_oerrors","","",75,null],[12,"ifi_collisions","","",75,null],[12,"ifi_ibytes","","",75,null],[12,"ifi_obytes","","",75,null],[12,"ifi_imcasts","","",75,null],[12,"ifi_omcasts","","",75,null],[12,"ifi_iqdrops","","",75,null],[12,"ifi_noproto","","",75,null],[12,"ifi_recvtiming","","",75,null],[12,"ifi_xmittiming","","",75,null],[12,"ifi_lastchange","","",75,null],[12,"ifi_unused2","","",75,null],[12,"ifi_hwassist","","",75,null],[12,"ifi_reserved1","","",75,null],[12,"ifi_reserved2","","",75,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",76,null],[12,"bh_caplen","","",76,null],[12,"bh_datalen","","",76,null],[12,"bh_hdrlen","","",76,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"QCMD","","",null,{"inputs":[{"name":"c_int"},{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"_WSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"timeval32"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"if_data"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bpf_hdr"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"mach_timebase_info"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"fstore_t"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"radvisory"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"kevent"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"kevent64_s"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"if_msghdr"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"sf_hdtr"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"proc_taskinfo"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"proc_bsdinfo"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"proc_taskallinfo"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"proc_threadinfo"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"xsw_usage"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"xucred"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"mach_header"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"mach_header_64"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"segment_command"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"segment_command_64"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"load_command"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_dl"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_inarp"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ctl"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"in_pktinfo"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"in6_pktinfo"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servent"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"c_char","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this pkt is done\".",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDENABLE_BG_TRACE","","",null,null],[17,"KERN_KDDISABLE_BG_TRACE","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"proc_threadinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_rwlockattr_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["nodrop"] = {"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"inputs":[{"name":"t"}],"output":{"name":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",2,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",13,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",13,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",13,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",13,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",17,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"pow","num","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",18,null],[10,"pow","","Returns `self` to the power `rhs`.",18,null],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"bigint","","",null,null],[0,"complex","","",null,null],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null],[0,"rational","","",null,null],[11,"new","","Creates and initializes a BigInt.",19,{"inputs":[{"name":"sign"},{"generics":["u32"],"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",19,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",19,null],[11,"assign_from_slice","","Reinitializes a `BigInt`.",19,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",19,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",19,null],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes in two's complement binary representation.",19,null],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes in two's complement.",19,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",19,null],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",19,null],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",19,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",19,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",19,null],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the `BigInt` in big-endian byte order.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the `BigInt` in little-endian byte order.",19,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix. `radix` must be in the range `2...36`.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"string"}}],[11,"to_radix_be","","Returns the integer in the requested base in big-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",19,null],[11,"to_radix_le","","Returns the integer in the requested base in little-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",19,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",19,{"inputs":[{"name":"self"}],"output":{"name":"sign"}}],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`, not including the sign.",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",19,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_add","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_sub","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_mul","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_div","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",19,{"inputs":[{"name":"self"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_assign","","",0,null],[11,"div_assign","","",0,null],[11,"div_assign","","",0,null],[11,"div_assign","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"self"},{"name":"__st"}],"output":{"name":"result"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["complex"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"generics":["complex"],"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"rem_assign","","",0,null],[11,"rem_assign","","",0,null],[11,"rem_assign","","",0,null],[11,"rem_assign","","",0,null],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"}],"output":{"generics":["complex"],"name":"result"}}],[11,"add_assign","","",0,null],[11,"add_assign","","",0,null],[11,"add_assign","","",0,null],[11,"add_assign","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"sub_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"hash","","",0,null],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"checked_div","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_div","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"to_bigint","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"to_bigint","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"bitxor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"div_assign","","",20,null],[11,"abs","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"is_positive","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_negative","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_i64","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_u64","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"to_i64","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_u64","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"checked_add","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_add","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"bitxor_assign","","",20,null],[11,"bitxor_assign","","",20,null],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from_i64","","",19,{"inputs":[{"name":"i64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from_u64","","",19,{"inputs":[{"name":"u64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from_f64","","",19,{"inputs":[{"name":"f64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from_i64","","",20,{"inputs":[{"name":"i64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"from_u64","","",20,{"inputs":[{"name":"u64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"from_f64","","",20,{"inputs":[{"name":"f64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"bitor_assign","","",20,null],[11,"bitor_assign","","",20,null],[11,"default","","",20,{"inputs":[],"output":{"name":"biguint"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"bigint"}}],[11,"shl_assign","","",20,null],[11,"bitand","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_mul","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_mul","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"neg","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"neg","","",20,{"inputs":[{"name":"self"}],"output":{"name":"biguint"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"shr","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"biguint"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"rem_assign","","",20,null],[11,"div_rem","","",20,null],[11,"div_floor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",20,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"div_rem","","",19,null],[11,"div_floor","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",19,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"from_str","","",20,{"inputs":[{"name":"str"}],"output":{"generics":["biguint","parsebiginterror"],"name":"result"}}],[11,"from_str","","",19,{"inputs":[{"name":"str"}],"output":{"generics":["bigint","parsebiginterror"],"name":"result"}}],[11,"to_biguint","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"to_biguint","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"one","","",19,{"inputs":[],"output":{"name":"bigint"}}],[11,"one","","",20,{"inputs":[],"output":{"name":"biguint"}}],[11,"checked_sub","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_sub","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"add_assign","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",20,{"inputs":[{"name":"u32"}],"output":{"name":"biguint"}}],[11,"from","","",19,{"inputs":[{"name":"isize"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"u32"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"i8"}],"output":{"name":"bigint"}}],[11,"from","","",20,{"inputs":[{"name":"u8"}],"output":{"name":"biguint"}}],[11,"from","","",19,{"inputs":[{"name":"u64"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from","","",20,{"inputs":[{"name":"u64"}],"output":{"name":"biguint"}}],[11,"from","","",19,{"inputs":[{"name":"usize"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"u8"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from","","",20,{"inputs":[{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from","","",19,{"inputs":[{"name":"i32"}],"output":{"name":"bigint"}}],[11,"from","","",19,{"inputs":[{"name":"u16"}],"output":{"name":"bigint"}}],[11,"from","","",20,{"inputs":[{"name":"usize"}],"output":{"name":"biguint"}}],[11,"from","","",19,{"inputs":[{"name":"i64"}],"output":{"name":"bigint"}}],[11,"shl","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shl","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",20,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",19,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"mul_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"sub_assign","","",20,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",19,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["bigint","parsebiginterror"],"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",20,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["biguint","parsebiginterror"],"name":"result"}}],[11,"hash","","",20,null],[11,"hash","","",19,null],[11,"bitand_assign","","",20,null],[11,"bitand_assign","","",20,null],[11,"shr_assign","","",20,null],[11,"encode","","",20,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"bitor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"decode","","",20,{"inputs":[{"name":"__d"}],"output":{"generics":["biguint"],"name":"result"}}],[11,"decode","","",19,{"inputs":[{"name":"__d"}],"output":{"generics":["bigint"],"name":"result"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"biguint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",20,{"inputs":[{"generics":["u32"],"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",20,null],[11,"assign_from_slice","","Assign a value to a `BigUint`.",20,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",20,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",20,null],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must contain ascii/utf8 characters in [0-9a-zA-Z]. `radix` must be in the range `2...36`.",20,null],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",20,null],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",20,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",20,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",20,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix. `radix` must be in the range `2...36`.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"string"}}],[11,"to_radix_be","","Returns the integer in the requested base in big-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_radix_le","","Returns the integer in the requested base in little-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",20,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",20,{"inputs":[{"name":"self"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily have a sqrt function), i.e. `re^2 + im^2`.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i * theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"powf","","Raises `self` to a floating point power.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"powc","","Raises `self` to a complex power.",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"expf","","Raises a floating point number to the complex power `self`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sin","","Computes the sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cos","","Computes the cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tan","","Computes the tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[3,"BigInt"],[3,"BigUint"]]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",0,null],[13,"Other","","",0,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",1,null],[13,"NoSign","","",1,null],[13,"Plus","","",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"biguint"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"encode","","",2,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"generics":["biguint"],"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"generics":["biguint","parsebiginterror"],"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["biguint","parsebiginterror"],"name":"result"}}],[11,"bitand","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"bitand","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"bitor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"bitor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"bitxor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"bitxor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"shl","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shl_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"zero","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":null}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":null}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":null}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":null}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":null}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":null}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":null}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"biguint"}}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":null}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"biguint"}}],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":null}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"biguint"}}],[11,"checked_add","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_sub","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_mul","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_div","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"div_rem","","",2,null],[11,"div_floor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",2,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_i64","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_u64","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"from_i64","","",2,{"inputs":[{"name":"i64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"u64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"from_f64","","",2,{"inputs":[{"name":"f64"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"from","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"new","","Creates and initializes a `BigUint`.",2,{"inputs":[{"generics":["bigdigit"],"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",2,null],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,null],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must contain ascii/utf8 characters in [0-9a-zA-Z]. `radix` must be in the range `2...36`.",2,null],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",2,null],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",2,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",2,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",2,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix. `radix` must be in the range `2...36`.",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"string"}}],[11,"to_radix_be","","Returns the integer in the requested base in big-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_radix_le","","Returns the integer in the requested base in little-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",2,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"sign"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"sign"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"encode","","",1,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"generics":["sign"],"name":"result"}}],[11,"neg","","Negate Sign value.",1,{"inputs":[{"name":"self"}],"output":{"name":"sign"}}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"sign"}],"output":{"name":"sign"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"encode","","",3,{"inputs":[{"name":"self"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"generics":["bigint"],"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"generics":["bigint","parsebiginterror"],"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["bigint","parsebiginterror"],"name":"result"}}],[11,"shl","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"is_positive","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_negative","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"bigdigit"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"doublebigdigit"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bigint"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"bigint"}}],[11,"neg","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bigint"}}],[11,"checked_add","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_sub","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_mul","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_div","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"div_rem","","",3,null],[11,"div_floor","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",3,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_i64","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_u64","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_f32","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"from_i64","","",3,{"inputs":[{"name":"i64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"u64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from_f64","","",3,{"inputs":[{"name":"f64"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"from","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"to_bigint","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"to_biguint","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"sign"},{"generics":["bigdigit"],"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",3,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",3,null],[11,"assign_from_slice","","Reinitializes a `BigInt`.",3,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",3,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",3,null],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes in two's complement binary representation.",3,null],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes in two's complement.",3,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",3,null],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",3,null],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input slice is interpreted as one digit of the number and must therefore be less than `radix`.",3,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",3,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",3,null],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the `BigInt` in big-endian byte order.",3,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the `BigInt` in little-endian byte order.",3,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix. `radix` must be in the range `2...36`.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"string"}}],[11,"to_radix_be","","Returns the integer in the requested base in big-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",3,null],[11,"to_radix_le","","Returns the integer in the requested base in little-endian digit order. The output is not given in a human readable alphabet but as a zero based u8 number. `radix` must be in the range `2...256`.",3,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",3,{"inputs":[{"name":"self"}],"output":{"name":"sign"}}],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`, not including the sign.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",3,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[11,"checked_add","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_sub","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_mul","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"checked_div","","",3,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"generics":["bigint"],"name":"option"}}],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",3,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[6,"BigDigit","","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its size is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its size is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",4,{"inputs":[{"name":"self"}],"output":{"generics":["biguint"],"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",5,{"inputs":[{"name":"self"}],"output":{"generics":["bigint"],"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails when the bound is zero.",6,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower bound is inclusive; the upper bound is exclusive. Fails when the upper bound is not greater than the lower bound.",6,{"inputs":[{"name":"self"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower bound is inclusive; the upper bound is exclusive. Fails when the upper bound is not greater than the lower bound.",6,{"inputs":[{"name":"self"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",0,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[11,"add","num_bigint::big_digit","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"bigint"}],"output":{"name":"bigint"}}]],"paths":[[4,"ParseBigIntError"],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[6,"BigDigit"],[6,"DoubleBigDigit"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"encode","","",0,{"inputs":[{"name":"self"},{"name":"__st"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"generics":["complex"],"name":"result"}}],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily have a sqrt function), i.e. `re^2 + im^2`.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i * theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"powf","","Raises `self` to a floating point power.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"powc","","Raises `self` to a complex power.",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"expf","","Raises a floating point number to the complex power `self`.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sin","","Computes the sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cos","","Computes the cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tan","","Computes the tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"complex"}],"output":{"name":"self"}}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"complex"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"parsecomplexerror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"parsecomplexerror"}],"output":{"name":"bool"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",null,null],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",null,{"inputs":[{"name":"t"},{"name":"u32"}],"output":{"name":"t"}}],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"binomial","","Calculate the binomial coefficient.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"multinomial","","Calculate the multinomial coefficient.",null,null],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",0,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,null],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",2,{"inputs":[{"name":"t"}],"output":{"name":"iterbinomial"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rangestep"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":null}],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"self"},{"name":"__st"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"generics":["ratio"],"name":"result"}}],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or reducing.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a reduced copy of self.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number, with division rounded towards zero.",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",0,{"inputs":[{"name":"t"}],"output":{"generics":["bigrational"],"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"from","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"checked_mul","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"generics":["ratio"],"name":"option"}}],[11,"checked_div","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"generics":["ratio"],"name":"option"}}],[11,"checked_add","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"generics":["ratio"],"name":"option"}}],[11,"checked_sub","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"generics":["ratio"],"name":"option"}}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"generics":["ratio","parseratioerror"],"name":"result"}}],[11,"abs","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",0,{"inputs":[{"name":"self"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ratio"}}],[11,"is_positive","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_negative","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,{"inputs":[{"name":"str"}],"output":{"generics":["ratio","parseratioerror"],"name":"result"}}],[11,"into","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","",0,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"approximate_float","","",0,{"inputs":[{"name":"f"}],"output":{"generics":["ratio"],"name":"option"}}]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[8,"Bounded","num_traits","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",0,{"inputs":[],"output":{"name":"self"}}],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",1,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",2,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",16,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",21,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",21,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",22,null],[13,"Invalid","","",22,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",23,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",0,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",1,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",1,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",1,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",1,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",2,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,{"inputs":[],"output":{"name":"self"}}],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",null,null],[10,"min_value","","Returns the smallest finite value that this type can represent.",24,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",24,{"inputs":[],"output":{"name":"self"}}],[10,"epsilon","","Returns epsilon, a small positive value.",24,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",24,{"inputs":[],"output":{"name":"self"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",24,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",24,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a real number power.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_degrees","","Converts radians to degrees.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_radians","","Converts degrees to radians.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",24,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[8,"AsPrimitive","num_traits::cast","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",16,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"i128"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"u128"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["i128"],"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["u128"],"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","num_traits","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}]],"paths":[[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"Saturating"],[8,"Signed"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Real"]]};
searchIndex["ocl"] = {"doc":" | GitHub","items":[[3,"Platform","ocl","A platform identifier.",null,null],[3,"Extensions","","Extensions of a platform.",null,null],[3,"Device","","An individual device identifier (an OpenCL device_id).",null,null],[3,"Context","","A context for a particular platform and set of device types.",null,null],[3,"Program","","A program from which kernels can be created from.",null,null],[3,"Queue","","A command queue which manages all actions taken on kernels, buffers, and images.",null,null],[3,"Kernel","","A kernel which represents a 'procedure'.",null,null],[3,"Buffer","","A chunk of memory physically located on a device, such as a GPU.",null,null],[3,"Image","","A section of device memory which represents one or many images.",null,null],[3,"Event","","An event representing a command or user created event.",null,null],[3,"EventList","","A list of events for coordinating enqueued commands.",null,null],[3,"EventArray","","A list of events for coordinating enqueued commands.",null,null],[3,"Sampler","","An image sampler used to process images.",null,null],[3,"ProQue","","An all-in-one chimera of the `Program`, `Queue`, `Context` and (optionally) `SpatialDims` types.",null,null],[3,"MemMap","","A view of memory mapped by `clEnqueueMap{...}`.",null,null],[3,"FutureMemMap","","A future which resolves to a `MemMap` as soon as its creating command completes.",null,null],[3,"RwVec","","A locking `Vec` which interoperates with OpenCL events and Rust futures to provide exclusive access to data.",null,null],[3,"ReadGuard","","Allows access to the data contained within a lock just like a mutex guard.",null,null],[3,"WriteGuard","","Allows access to the data contained within just like a mutex guard.",null,null],[4,"SpatialDims","","Specifies a size or offset in up to three dimensions.",null,null],[13,"Unspecified","","",0,null],[13,"One","","",0,null],[13,"Two","","",0,null],[13,"Three","","",0,null],[4,"BufferCmdError","","A buffer command error.",null,null],[13,"RectUnavailable","","",1,null],[13,"NoQueue","","",1,null],[13,"AlreadyMapped","","",1,null],[13,"MapUnavailable","","",1,null],[13,"Ocl","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"iter","","Iterate over platform extensions, split at whitespace.",2,{"inputs":[{"name":"self"}],"output":{"name":"splitwhitespace"}}],[11,"as_str","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"platform"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"list","","Returns a list of all platforms avaliable on the host machine.",3,{"inputs":[],"output":{"generics":["platform"],"name":"vec"}}],[11,"first","","Returns the first available platform.",3,{"inputs":[],"output":{"generics":["platform"],"name":"oclresult"}}],[11,"new","","Creates a new `Platform` from a `PlatformIdCore`.",3,{"inputs":[{"name":"platformidcore"}],"output":{"name":"platform"}}],[11,"list_from_core","","Returns a list of `Platform`s from a list of `PlatformIdCore`s",3,{"inputs":[{"generics":["platformidcore"],"name":"vec"}],"output":{"generics":["platform"],"name":"vec"}}],[11,"info","","Returns info about the platform.",3,{"inputs":[{"name":"self"},{"name":"platforminfo"}],"output":{"generics":["platforminforesult"],"name":"oclcoreresult"}}],[11,"profile","","Returns the platform profile as a string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"version","","Returns the platform driver version as a string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"name","","Returns the platform name as a string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"vendor","","Returns the platform vendor as a string.",3,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"extensions","","Returns the list of platform extensions.",3,{"inputs":[{"name":"self"}],"output":{"generics":["extensions"],"name":"oclcoreresult"}}],[11,"as_core","","Returns a reference to the underlying `PlatformIdCore`.",3,{"inputs":[{"name":"self"}],"output":{"name":"platformidcore"}}],[11,"as_ptr","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cl_platform_id"}}],[11,"default","","Returns the first (0th) platform available, or the platform specified by the `OCL_DEFAULT_PLATFORM_IDX` environment variable if it is set.",3,{"inputs":[],"output":{"name":"platform"}}],[11,"from","","",3,{"inputs":[{"name":"platformidcore"}],"output":{"name":"platform"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"platformidcore"}}],[11,"deref_mut","","",3,{"inputs":[{"name":"self"}],"output":{"name":"platformidcore"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"device"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"device"}],"output":{"name":"bool"}}],[11,"first","","Returns the first available device on a platform.",4,{"inputs":[{"name":"p"}],"output":{"generics":["device"],"name":"oclresult"}}],[11,"by_idx_wrap","","Returns a single device specified by a wrapped index.",4,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"generics":["device"],"name":"oclresult"}}],[11,"specifier","","Returns a `DeviceSpecifier` useful for precisely specifying a set of devices.",4,{"inputs":[],"output":{"name":"devicespecifier"}}],[11,"resolve_idxs","","Resolves a list of indices into a list of valid devices.",4,null],[11,"resolve_idxs_wrap","","Resolves a list of indices into a list of valid devices.",4,null],[11,"list","","Returns a list of all devices avaliable for a given platform which optionally match the flags set in the bitfield, `device_types`.",4,{"inputs":[{"name":"p"},{"generics":["devicetype"],"name":"option"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"list_all","","Returns a list of all devices avaliable for a given `platform`.",4,{"inputs":[{"name":"p"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"list_select","","Returns a list of devices filtered by type then selected using a list of indices.",4,null],[11,"list_select_wrap","","Returns a list of devices filtered by type then selected using a wrapping list of indices.",4,null],[11,"list_from_core","","Returns a list of `Device`s from a list of `DeviceIdCore`s",4,{"inputs":[{"generics":["deviceidcore"],"name":"vec"}],"output":{"generics":["device"],"name":"vec"}}],[11,"name","","Returns the device name.",4,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"vendor","","Returns the device vendor as a string.",4,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"max_wg_size","","Returns the maximum workgroup size or an error.",4,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"oclcoreresult"}}],[11,"mem_base_addr_align","","Returns the memory base address alignment offset or an error.",4,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"oclcoreresult"}}],[11,"is_available","","Returns whether or not the device is available for use.",4,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"oclcoreresult"}}],[11,"info","","Returns info about the device.",4,{"inputs":[{"name":"self"},{"name":"deviceinfo"}],"output":{"generics":["deviceinforesult"],"name":"oclcoreresult"}}],[11,"to_string","","Returns a string containing a formatted list of device properties.",4,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"as_core","","Returns the underlying `DeviceIdCore`.",4,{"inputs":[{"name":"self"}],"output":{"name":"deviceidcore"}}],[11,"as_ptr","","",4,{"inputs":[{"name":"self"}],"output":{"name":"cl_device_id"}}],[11,"from","","",4,{"inputs":[{"name":"deviceidcore"}],"output":{"name":"device"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"deviceidcore"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"deviceidcore"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"builder","","Returns a `ContextBuilder`.",5,{"inputs":[],"output":{"name":"contextbuilder"}}],[11,"new","","Returns a newly created context.",5,{"inputs":[{"generics":["contextproperties"],"name":"option"},{"generics":["devicespecifier"],"name":"option"},{"generics":["createcontextcallbackfn"],"name":"option"},{"generics":["userdataptr"],"name":"option"}],"output":{"generics":["context"],"name":"oclresult"}}],[11,"resolve_wrapping_device_idxs","","Resolves a list of zero-based device indices into a list of Devices.",5,null],[11,"get_device_by_wrapping_index","","Returns a device by its ordinal count within this context.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"device"}}],[11,"platform_info","","Returns info about the platform associated with the context.",5,{"inputs":[{"name":"self"},{"name":"platforminfo"}],"output":{"generics":["platforminforesult"],"name":"oclcoreresult"}}],[11,"device_info","","Returns info about the device indexed by `index` associated with this context.",5,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"deviceinfo"}],"output":{"generics":["deviceinforesult"],"name":"oclcoreresult"}}],[11,"info","","Returns info about the context.",5,{"inputs":[{"name":"self"},{"name":"contextinfo"}],"output":{"generics":["contextinforesult"],"name":"oclcoreresult"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",5,{"inputs":[{"name":"self"}],"output":{"name":"contextcore"}}],[11,"devices","","Returns the list of devices associated with this context.",5,{"inputs":[{"name":"self"}],"output":{"generics":["device"],"name":"vec"}}],[11,"device_versions","","Returns the list of device versions associated with this context.",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform","","Returns the platform this context is associated with.",5,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"oclcoreresult"}}],[11,"from","","",5,{"inputs":[{"name":"contextcore"}],"output":{"name":"context"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"contextcore"}}],[11,"deref_mut","","",5,{"inputs":[{"name":"self"}],"output":{"name":"contextcore"}}],[11,"device_versions","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"program"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","Returns a new `ProgramBuilder`.",6,{"inputs":[],"output":{"name":"programbuilder"}}],[11,"with_source","","Returns a new program built from pre-created build components and device list.",6,null],[11,"with_binary","","Returns a new program built from pre-created build components and device list.",6,null],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",6,{"inputs":[{"name":"self"}],"output":{"name":"programcore"}}],[11,"info","","Returns info about this program.",6,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"generics":["programinforesult"],"name":"oclcoreresult"}}],[11,"build_info","","Returns info about this program's build.",6,{"inputs":[{"name":"self"},{"name":"device"},{"name":"programbuildinfo"}],"output":{"generics":["programbuildinforesult"],"name":"oclcoreresult"}}],[11,"from","","",6,{"inputs":[{"name":"programcore"}],"output":{"name":"program"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"programcore"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"programcore"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","Returns a new `KernelBuilder`.",7,{"inputs":[],"output":{"name":"kernelbuilder"}}],[11,"named_arg_idx","","Returns the argument index of a named argument if it exists.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["u32"],"name":"option"}}],[11,"set_arg_unchecked","","Sets an argument by index without checks of any kind.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"argval"}],"output":{"name":"oclresult"}}],[11,"set_arg","","Sets a `Buffer`, `Image`, scalar, or vector argument by index or by name.",7,{"inputs":[{"name":"self"},{"name":"ai"},{"name":"av"}],"output":{"name":"oclresult"}}],[11,"set_arg_buf_named","","Modifies the kernel argument named: `name`.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"}],"output":{"name":"oclresult"}}],[11,"set_arg_img_named","","Modifies the kernel argument named: `name`.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"}],"output":{"name":"oclresult"}}],[11,"set_arg_smp_named","","Sets the value of a named sampler argument.",7,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["sampler"],"name":"option"}],"output":{"name":"oclresult"}}],[11,"set_arg_scl_named","","Modifies the kernel argument named: `name`.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"b"}],"output":{"name":"oclresult"}}],[11,"set_arg_vec_named","","Modifies the kernel argument named: `name`.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"b"}],"output":{"name":"oclresult"}}],[11,"set_arg_sampler_named","","Sets the value of a named sampler argument.",7,{"inputs":[{"name":"self"},{"name":"ai"},{"generics":["sampler"],"name":"option"}],"output":{"name":"oclresult"}}],[11,"cmd","","Returns a command builder which is used to chain parameters of an 'enqueue' command together.",7,{"inputs":[{"name":"self"}],"output":{"name":"kernelcmd"}}],[11,"enq","","Enqueues this kernel on the default queue using the default work sizes and offsets.",7,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"set_default_queue","","Changes the default queue.",7,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"kernel"}}],[11,"get_gwo","","Returns the default global work offset.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"get_gws","","Returns the default global work size.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"get_lws","","Returns the default local work size.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"set_default_global_work_offset","","Sets the default global work offset.",7,{"inputs":[{"name":"self"},{"name":"spatialdims"}],"output":{"name":"kernel"}}],[11,"set_default_global_work_size","","Sets the default global work size.",7,{"inputs":[{"name":"self"},{"name":"spatialdims"}],"output":{"name":"kernel"}}],[11,"set_default_local_work_size","","Sets the default local work size.",7,{"inputs":[{"name":"self"},{"name":"spatialdims"}],"output":{"name":"kernel"}}],[11,"default_queue","","Returns the default queue for this kernel if one has been set.",7,{"inputs":[{"name":"self"}],"output":{"generics":["queue"],"name":"option"}}],[11,"default_global_work_offset","","Returns the default global work offset.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"default_global_work_size","","Returns the default global work size.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"default_local_work_size","","Returns the default local work size.",7,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",7,{"inputs":[{"name":"self"}],"output":{"name":"kernelcore"}}],[11,"info","","Returns information about this kernel.",7,{"inputs":[{"name":"self"},{"name":"kernelinfo"}],"output":{"generics":["kernelinforesult"],"name":"oclcoreresult"}}],[11,"wg_info","","Returns work group information for this kernel.",7,{"inputs":[{"name":"self"},{"name":"device"},{"name":"kernelworkgroupinfo"}],"output":{"generics":["kernelworkgroupinforesult"],"name":"oclcoreresult"}}],[11,"arg_info","","Returns argument information for this kernel.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"kernelarginfo"}],"output":{"generics":["kernelarginforesult"],"name":"oclcoreresult"}}],[11,"name","","Returns the name of this kernel.",7,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"oclcoreresult"}}],[11,"num_args","","Returns the number of arguments this kernel has.",7,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"oclcoreresult"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"kernelcore"}}],[11,"clone","","Creates a new, identical kernel.",7,{"inputs":[{"name":"self"}],"output":{"name":"kernel"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new Queue on the device specified by `device`.",8,{"inputs":[{"name":"context"},{"name":"device"},{"generics":["commandqueueproperties"],"name":"option"}],"output":{"generics":["queue"],"name":"oclresult"}}],[11,"flush","","Issues all previously queued OpenCL commands to the device.",8,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"finish","","Blocks until all commands in this queue have completed before returning.",8,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"enqueue_marker","","Enqueues a marker command which waits for either a list of events to complete, or all previously enqueued commands to complete.",8,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",8,{"inputs":[{"name":"self"}],"output":{"name":"commandqueuecore"}}],[11,"context","","Returns a copy of the Context associated with this queue.",8,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"device","","Returns the `OpenCL` device associated with this queue.",8,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"device_version","","Returns the cached device version.",8,{"inputs":[{"name":"self"}],"output":{"name":"openclversion"}}],[11,"info","","Returns info about this queue.",8,{"inputs":[{"name":"self"},{"name":"commandqueueinfo"}],"output":{"generics":["commandqueueinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"as_ref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"commandqueuecore"}}],[11,"deref","","",8,{"inputs":[{"name":"self"}],"output":{"name":"commandqueuecore"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"self"}],"output":{"name":"commandqueuecore"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"oclcoreerror"}],"output":{"name":"buffercmderror"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"buffer"}}],[11,"builder","","Returns a new buffer builder.",9,{"inputs":[],"output":{"name":"bufferbuilder"}}],[11,"new","","Creates a new buffer.",9,{"inputs":[{"name":"q"},{"name":"memflags"},{"name":"d"},{"name":"option"}],"output":{"generics":["buffer"],"name":"oclresult"}}],[11,"from_gl_buffer","","Creates a buffer linked to a previously created OpenGL buffer object.",9,{"inputs":[{"name":"q"},{"generics":["memflags"],"name":"option"},{"name":"cl_gluint"}],"output":{"generics":["buffer"],"name":"oclresult"}}],[11,"cmd","","Returns a command builder used to read, write, copy, etc.",9,{"inputs":[{"name":"self"}],"output":{"name":"buffercmd"}}],[11,"read","","Returns a command builder used to read data.",9,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bufferreadcmd"}}],[11,"write","","Returns a command builder used to write data.",9,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"bufferwritecmd"}}],[11,"map","","Returns a command builder used to map data for reading or writing.",9,{"inputs":[{"name":"self"}],"output":{"name":"buffermapcmd"}}],[11,"copy","","Specifies that this command will be a copy operation.",9,{"inputs":[{"name":"self"},{"name":"m"},{"generics":["usize"],"name":"option"},{"generics":["usize"],"name":"option"}],"output":{"name":"buffercmd"}}],[11,"offset","","Returns the offset of the sub-buffer within its buffer if this is a sub-buffer.",9,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"option"}}],[11,"len","","Returns the length of the buffer.",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_sub_buffer","","Returns true if this is a sub-buffer.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"mem_info","","Returns info about the underlying memory object.",9,{"inputs":[{"name":"self"},{"name":"meminfo"}],"output":{"generics":["meminforesult"],"name":"oclcoreresult"}}],[11,"set_default_queue","","Changes the default queue used by this buffer for all subsequent command enqueue operations (reads, writes, etc.).",9,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"buffer"}}],[11,"default_queue","","Returns a reference to the default queue.",9,{"inputs":[{"name":"self"}],"output":{"generics":["queue"],"name":"option"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"flags","","Returns the memory flags used during the creation of this buffer.",9,{"inputs":[{"name":"self"}],"output":{"generics":["memflags"],"name":"oclresult"}}],[11,"create_sub_buffer","","Creates a new sub-buffer from a region of this buffer.",9,{"inputs":[{"name":"self"},{"generics":["memflags"],"name":"option"},{"name":"do"},{"name":"dl"}],"output":{"generics":["buffer"],"name":"oclresult"}}],[11,"deref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"deref_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"as_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"as_mem","","",9,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"image"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"supported_formats","","Returns a list of supported image formats.",10,{"inputs":[{"name":"context"},{"name":"memflags"},{"name":"memobjecttype"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"builder","","Returns an `ImageBuilder`. This is the recommended method to create a new `Image`.",10,{"inputs":[],"output":{"name":"imagebuilder"}}],[11,"new","","Returns a new `Image`.",10,{"inputs":[{"name":"q"},{"name":"memflags"},{"name":"imageformat"},{"name":"imagedescriptor"},{"name":"option"}],"output":{"generics":["image"],"name":"oclcoreresult"}}],[11,"from_gl_texture","","Returns a new `Image` from an existant GL texture2D/3D.",10,{"inputs":[{"name":"q"},{"name":"memflags"},{"name":"imagedescriptor"},{"name":"gltexturetarget"},{"name":"cl_glint"},{"name":"cl_gluint"}],"output":{"generics":["image"],"name":"oclcoreresult"}}],[11,"from_gl_renderbuffer","","Returns a new `Image` from an existant renderbuffer.",10,{"inputs":[{"name":"q"},{"name":"memflags"},{"name":"imagedescriptor"},{"name":"cl_gluint"}],"output":{"generics":["image"],"name":"oclcoreresult"}}],[11,"cmd","","Returns an image command builder used to read, write, copy, etc.",10,{"inputs":[{"name":"self"}],"output":{"name":"imagecmd"}}],[11,"read","","Returns an image command builder set to read.",10,null],[11,"write","","Returns an image command builder set to write.",10,null],[11,"map","","Returns a command builder used to map data for reading or writing.",10,{"inputs":[{"name":"self"}],"output":{"name":"imagemapcmd"}}],[11,"set_default_queue","","Changes the default queue.",10,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"image"}}],[11,"default_queue","","Returns a reference to the default queue.",10,{"inputs":[{"name":"self"}],"output":{"generics":["queue"],"name":"option"}}],[11,"dims","","Returns this image's dimensions.",10,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"pixel_count","","Returns the total number of pixels in this image.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"pixel_element_len","","Returns the length of each pixel element.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"element_count","","Returns the total number of pixel elements in this image. Equivalent to its length.",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"info","","Get information about this image.",10,{"inputs":[{"name":"self"},{"name":"imageinfo"}],"output":{"generics":["imageinforesult"],"name":"oclcoreresult"}}],[11,"mem_info","","Returns info about this image's memory.",10,{"inputs":[{"name":"self"},{"name":"meminfo"}],"output":{"generics":["meminforesult"],"name":"oclcoreresult"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",10,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"deref_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"as_mem","","",10,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and returns a new sampler.",11,{"inputs":[{"name":"context"},{"name":"bool"},{"name":"addressingmode"},{"name":"filtermode"}],"output":{"generics":["sampler"],"name":"oclresult"}}],[11,"with_defaults","","Creates and returns a new sampler with some default settings.",11,{"inputs":[{"name":"context"}],"output":{"generics":["sampler"],"name":"oclresult"}}],[11,"info","","Returns various kinds of information about the sampler.",11,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"generics":["samplerinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"samplercore"}}],[11,"deref_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"samplercore"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"proque"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"builder","","Returns a new `ProQueBuilder`.",12,{"inputs":[],"output":{"name":"proquebuilder"}}],[11,"new","","Creates a new ProQue from individual parts.",12,{"inputs":[{"name":"context"},{"name":"queue"},{"name":"program"},{"name":"option"}],"output":{"name":"proque"}}],[11,"kernel_builder","","Returns a new `KernelBuilder` with the name, program, default queue, and global work size pre-configured.",12,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"kernelbuilder"}}],[11,"create_buffer","","Returns a new buffer.",12,{"inputs":[{"name":"self"}],"output":{"generics":["buffer"],"name":"oclresult"}}],[11,"buffer_builder","","Returns a new `BufferBuilder` with the default queue and length pre-configured.",12,{"inputs":[{"name":"self"}],"output":{"name":"bufferbuilder"}}],[11,"set_dims","","Sets the default dimensions used when creating buffers and kernels.",12,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"max_wg_size","","Returns the maximum workgroup size supported by the device associated with this `ProQue`.",12,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"oclresult"}}],[11,"queue","","Returns a reference to the queue associated with this ProQue.",12,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"context","","Returns the contained context.",12,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"program","","Returns the current program build.",12,{"inputs":[{"name":"self"}],"output":{"name":"program"}}],[11,"dims","","Returns the current `dims` or panics.",12,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"dims_result","","Returns the current `dims` or an error.",12,{"inputs":[{"name":"self"}],"output":{"generics":["spatialdims"],"name":"oclresult"}}],[11,"to_len","","",12,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_len_padded","","",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"to_lens","","",12,null],[11,"dim_count","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"to_work_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_work_offset","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",12,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"empty","","Creates a new, empty (null) event which must be filled by a command, associating the event with it.",13,{"inputs":[],"output":{"name":"event"}}],[11,"user","","Creates a new, empty event which must be filled by a newly initiated command, associating the event with it.",13,{"inputs":[{"name":"c"}],"output":{"generics":["event"],"name":"oclcoreresult"}}],[11,"is_empty","","Returns true if this event is 'empty' and has not yet been associated with a command.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_unpark_callback","","Sets a callback function to trigger upon completion of this event which will unpark the current task.",13,{"inputs":[{"name":"self"}],"output":{"name":"oclcoreresult"}}],[11,"register_event_relay","","Registers a user event to have its status set to complete (`CommandExecutionStatus::Complete`) immediately upon completion of this event.",13,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"oclcoreresult"}}],[11,"info","","Returns info about the event.",13,{"inputs":[{"name":"self"},{"name":"eventinfo"}],"output":{"generics":["eventinforesult"],"name":"oclcoreresult"}}],[11,"profiling_info","","Returns info about the event.",13,{"inputs":[{"name":"self"},{"name":"profilinginfo"}],"output":{"generics":["profilinginforesult"],"name":"oclcoreresult"}}],[11,"queue_core","","Returns this event's associated command queue.",13,{"inputs":[{"name":"self"}],"output":{"generics":["commandqueuecore"],"name":"oclcoreresult"}}],[11,"as_core","","Returns a reference to the core pointer wrapper, usable by functions in the `core` module.",13,{"inputs":[{"name":"self"}],"output":{"name":"eventcore"}}],[11,"into_raw","","Consumes the `Event`, returning the wrapped `cl_event` pointer.",13,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"from_raw","","Constructs an `Event` from a raw `cl_event` pointer.",13,{"inputs":[{"name":"cl_event"}],"output":{"name":"event"}}],[11,"from","","",13,{"inputs":[{"name":"eventcore"}],"output":{"name":"event"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"event"}}],[11,"deref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"eventcore"}}],[11,"deref_mut","","",13,{"inputs":[{"name":"self"}],"output":{"name":"eventcore"}}],[11,"as_ref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"eventcore"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ptr_ref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"as_ptr_ptr","","",13,null],[11,"count","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"new","","Returns a new, empty, `EventArray`.",14,{"inputs":[],"output":{"name":"eventarray"}}],[11,"push","","Pushes a new event into the list.",14,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"generics":["event"],"name":"result"}}],[11,"pop","","Removes the last event from the list and returns it.",14,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"swap_remove","","Removes an event from the list and returns it, swapping the last element into its place.",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"event"}}],[11,"remove","","Removes an event from the list and returns it, shifting elements after it to the left.",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"event"}}],[11,"clear","","Clears all events from the list whether or not they have completed.",14,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_completed","","Clears events which have already completed.",14,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"wait_for","","Blocks the host thread until all events in this list are complete.",14,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"enqueue_marker","","Enqueue a marker event representing the completion of each and every event in this list.",14,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"len","","The number of events in this list.",14,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_slice","","Returns a slice of events in the list.",14,null],[11,"as_mut_slice","","Returns a mutable slice of events in the list.",14,null],[11,"from","","",14,{"inputs":[{"name":"eventcore"}],"output":{"name":"eventarray"}}],[11,"from","","",14,{"inputs":[{"name":"event"}],"output":{"name":"eventarray"}}],[11,"from","","",14,{"inputs":[{"name":"e"}],"output":{"name":"eventarray"}}],[11,"from","","",14,null],[11,"deref","","",14,null],[11,"deref_mut","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"eventarray"}}],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","Polls each event from this list.",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"as_ptr_ptr","","",14,null],[11,"count","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"eventlist"}}],[11,"new","","Returns a new, empty, stack-allocated `EventList`.",15,{"inputs":[],"output":{"name":"eventlist"}}],[11,"with_capacity","","Returns a new, empty, EventList`with an initial capacity of`cap`.",15,{"inputs":[{"name":"usize"}],"output":{"name":"eventlist"}}],[11,"push","","Adds an event to the list.",15,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"pop","","Removes the last event from the list and returns it.",15,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"clear","","Clears all events from the list whether or not they have completed.",15,{"inputs":[{"name":"self"}],"output":null}],[11,"clear_completed","","Clears events which have completed.",15,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"wait_for","","Blocks the host thread until all events in this list are complete.",15,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"enqueue_marker","","Enqueue a marker event representing the completion of each and every event in this list.",15,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"as_slice","","Returns a slice of the contained events.",15,null],[11,"as_mut_slice","","Returns a mutable slice of the contained events.",15,null],[11,"from","","",15,{"inputs":[{"name":"eventcore"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"event"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"e"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"generics":["event"],"name":"vec"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"option"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"option"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"option"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"option"}],"output":{"name":"eventlist"}}],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,null],[11,"from","","",15,{"inputs":[{"name":"eventarray"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"generics":["clwaitlistptr"],"name":"box"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"name":"box"}],"output":{"name":"eventlist"}}],[11,"from","","",15,{"inputs":[{"generics":["clwaitlistptr"],"name":"ref"}],"output":{"name":"eventlist"}}],[11,"from","","Returns an `EventList` containing owned copies of each element in this `ClWaitListPtrEnum`.",15,{"inputs":[{"name":"clwaitlistptrenum"}],"output":{"name":"eventlist"}}],[11,"deref","","",15,null],[11,"deref_mut","","",15,null],[11,"into_iter","","",15,null],[11,"poll","","Polls each event from this list.",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"as_ptr_ptr","","",15,null],[11,"count","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"spatialdims"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"spatialdims"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"spatialdims"}],"output":{"name":"bool"}}],[11,"new","","Returns a new `SpatialDims`.",0,{"inputs":[{"generics":["usize"],"name":"option"},{"generics":["usize"],"name":"option"},{"generics":["usize"],"name":"option"}],"output":{"generics":["spatialdims"],"name":"oclresult"}}],[11,"dim_count","","Returns the number of dimensions defined by this `SpatialDims`.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"to_lens","","Returns a 3D size or an error if unspecified.",0,{"inputs":[{"name":"self"}],"output":{"generics":["unspecifieddimensionserror"],"name":"result"}}],[11,"to_offset","","Returns a 3D offset or an error if unspecified.",0,{"inputs":[{"name":"self"}],"output":{"generics":["unspecifieddimensionserror"],"name":"result"}}],[11,"to_len","","Returns the product of all contained dimensional values (equivalent to a length, area, or volume) or zero if unspecified.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"try_to_padded_len","","Takes the length and rounds it up to the nearest `incr` or an error.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"generics":["usize"],"name":"oclresult"}}],[11,"is_unspecified","","Returns `true` if this `SpatialDims` is an `Unspecified` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_len_padded","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"to_len","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_lens","","",0,null],[11,"dim_count","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"to_work_size","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_work_offset","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"from","","",0,{"inputs":[{"name":"spatialdims"}],"output":{"name":"spatialdims"}}],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"spatialdims"}}],[11,"from","","",0,{"inputs":[{"name":"isize"}],"output":{"name":"spatialdims"}}],[11,"from","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"spatialdims"}}],[11,"from","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"spatialdims"}}],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[11,"from","","",0,null],[0,"error","","Standard error type for ocl futures.",null,null],[3,"Error","ocl::error","An Error.",null,null],[4,"ErrorKind","","An enum containing either a `String` or one of several other error types.",null,null],[13,"OclCore","","",16,null],[13,"FuturesMpscSend","","",16,null],[13,"OneshotCanceled","","",16,null],[13,"BufferCmd","","",16,null],[13,"Device","","",16,null],[13,"Platform","","",16,null],[13,"Kernel","","",16,null],[6,"Result","","",null,null],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"api_status","","Returns the error status code for `OclCore` variants.",17,{"inputs":[{"name":"self"}],"output":{"generics":["status"],"name":"option"}}],[11,"kind","","Returns the error variant and contents.",17,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"cause","","Returns the immediate cause of this error (e.g. the next error in the chain).",17,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"cause","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",17,{"inputs":[{"name":"oclcoreerror"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"senderror"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"oneshotcanceled"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",17,{"inputs":[{"name":"buffercmderror"}],"output":{"name":"error"}}],[0,"async","ocl","Types related to futures and asynchrony.",null,null],[3,"OrderLock","ocl::async","A lock with conserved global order which interoperates with OpenCL events and Rust futures to provide exclusive access to data.",null,null],[3,"ReadGuard","","Allows access to the data contained within a lock just like a mutex guard.",null,null],[3,"WriteGuard","","Allows access to the data contained within just like a mutex guard.",null,null],[3,"FutureGuard","","A future that resolves to a read or write guard after ensuring that the data being guarded is appropriately locked during the execution of an OpenCL command.",null,null],[3,"RwVec","","A locking `Vec` which interoperates with OpenCL events and Rust futures to provide exclusive access to data.",null,null],[3,"MemMap","","A view of memory mapped by `clEnqueueMap{...}`.",null,null],[3,"FutureMemMap","","A future which resolves to a `MemMap` as soon as its creating command completes.",null,null],[3,"BufferSink","","Represents mapped memory and allows frames of data to be 'flushed' (written) from host-accessible mapped memory region into its associated device-visible buffer in a repeated fashion.",null,null],[3,"FutureFlush","","",null,null],[3,"BufferSinkInner","","",null,null],[3,"BufferStream","","Represents mapped memory and allows frames of data to be 'flooded' (read) from a device-visible `Buffer` into its associated host-accessible mapped memory region in a repeated fashion.",null,null],[3,"FutureFlood","","",null,null],[3,"BufferStreamInner","","",null,null],[11,"fmt","ocl","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new `FutureMemMap`.",18,{"inputs":[{"name":"memmapcore"},{"name":"usize"},{"name":"event"},{"name":"mem"},{"name":"queue"}],"output":{"name":"futurememmap"}}],[11,"set_unmap_wait_events","","Set an event wait list for the unmap command.",18,{"inputs":[{"name":"self"},{"name":"el"}],"output":null}],[11,"ewait_unmap","","Set an event wait list for the unmap command.",18,{"inputs":[{"name":"self"},{"name":"l"}],"output":{"name":"futurememmap"}}],[11,"create_unmap_event","","Create an event which will be triggered (set complete) after this future resolves into a `MemMap` and after that `MemMap` is dropped or manually unmapped.",18,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"enew_unmap","","Specifies an event which will be triggered (set complete) after this future resolves into a `MemMap` and after that `MemMap` is dropped or manually unmapped.",18,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"futurememmap"}}],[11,"set_unmap_queue","","Specifies the queue to be used for the unmap command.",18,{"inputs":[{"name":"self"},{"name":"queue"}],"output":null}],[11,"with_unmap_queue","","Specifies the queue to be used for the unmap command.",18,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"futurememmap"}}],[11,"unmap_event","","Returns the unmap event if it has been created.",18,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"wait","","Blocks the current thread until the OpenCL command is complete and an appropriate lock can be obtained on the underlying data.",18,{"inputs":[{"name":"self"}],"output":{"generics":["memmap"],"name":"oclresult"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release_event","","Returns a reference to the event previously set using `create_release_event` on the `FutureGuard` which preceded this `ReadGuard`. The event can be manually 'triggered' by calling `...set_complete()...` or used normally (as a wait event) by subsequent commands. If the event is not manually completed it will be automatically set complete when this `ReadGuard` is dropped.",19,{"inputs":[{"name":"readguard"}],"output":{"generics":["event"],"name":"option"}}],[11,"release","","Triggers the release event and releases the lock held by this `ReadGuard` before returning the original `OrderLock`.",19,{"inputs":[{"name":"readguard"}],"output":{"name":"orderlock"}}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"drop","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",19,{"inputs":[{"name":"orderlock"},{"generics":["event"],"name":"option"}],"output":{"name":"readguard"}}],[11,"order_lock","","",19,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release_event","","Returns a reference to the event previously set using `create_release_event` on the `FutureGuard` which preceded this `WriteGuard`. The event can be manually 'triggered' by calling `...set_complete()...` or used normally (as a wait event) by subsequent commands. If the event is not manually completed it will be automatically set complete when this `WriteGuard` is dropped.",20,{"inputs":[{"name":"writeguard"}],"output":{"generics":["event"],"name":"option"}}],[11,"release","","Triggers the release event and releases the lock held by this `WriteGuard` before returning the original `OrderLock`.",20,{"inputs":[{"name":"writeguard"}],"output":{"name":"orderlock"}}],[11,"deref","","",20,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"deref_mut","","",20,{"inputs":[{"name":"self"}],"output":{"name":"v"}}],[11,"drop","","",20,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",20,{"inputs":[{"name":"orderlock"},{"generics":["event"],"name":"option"}],"output":{"name":"writeguard"}}],[11,"order_lock","","",20,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"fmt","ocl::async","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_lock_wait_events","","Sets an event wait list.",21,{"inputs":[{"name":"self"},{"name":"l"}],"output":null}],[11,"ewait_lock","","Sets an event wait list.",21,{"inputs":[{"name":"self"},{"name":"l"}],"output":{"name":"futureguard"}}],[11,"create_lock_event","","Creates an event which will be triggered when a lock is obtained on the guarded internal value.",21,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"enew_lock","","Creates an event which will be triggered when a lock is obtained on the guarded internal value.",21,{"inputs":[{"name":"self"},{"name":"c"},{"name":"en"}],"output":{"name":"futureguard"}}],[11,"set_command_wait_event","","Sets a command completion wait event.",21,{"inputs":[{"name":"self"},{"name":"event"}],"output":null}],[11,"ewait_command","","Sets a command completion wait event.",21,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"futureguard"}}],[11,"create_release_event","","Creates an event which will be triggered after this future resolves and the ensuing `OrderGuard` is dropped or manually released.",21,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"enew_release","","Creates an event which will be triggered after this future resolves and the ensuing `OrderGuard` is dropped or manually released.",21,{"inputs":[{"name":"self"},{"name":"c"},{"name":"en"}],"output":{"name":"futureguard"}}],[11,"lock_event","","Returns a reference to the event previously created with `::create_lock_event` or `::enew_lock` which will trigger (be completed) when the wait events are complete and the lock is locked.",21,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"release_event","","Returns a reference to the event previously created with `::create_release_event` or `::enew_release` which will trigger (be completed) when a lock is obtained on the guarded internal value.",21,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"wait","","Blocks the current thread until the OpenCL command is complete and an appropriate lock can be obtained on the underlying data.",21,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"as_ptr","","Returns a mutable pointer to the data contained within the internal value, bypassing all locks and protections.",21,null],[11,"as_mut_ptr","","Returns a mutable pointer to the data contained within the internal value, bypassing all locks and protections.",21,null],[11,"order_lock","","Returns a reference to the `OrderLock` used to create this future.",21,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","Drops this FutureGuard.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"upgrade_after_command","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["writeguard"],"name":"futureguard"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and returns a new `OrderLock`.",22,{"inputs":[{"name":"v"}],"output":{"name":"orderlock"}}],[11,"read","","Returns a new `FutureGuard` which will resolve into a a `OrderGuard`.",22,{"inputs":[{"name":"self"}],"output":{"generics":["readguard"],"name":"futureguard"}}],[11,"write","","Returns a new `FutureGuard` which will resolve into a a `OrderGuard`.",22,{"inputs":[{"name":"self"}],"output":{"generics":["writeguard"],"name":"futureguard"}}],[11,"as_ptr","","Returns a reference to the inner value.",22,null],[11,"as_mut_ptr","","Returns a mutable reference to the inner value.",22,null],[11,"from","","",22,{"inputs":[{"name":"qrwlock"}],"output":{"name":"orderlock"}}],[11,"from","","",22,{"inputs":[{"name":"v"}],"output":{"name":"orderlock"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"clone","ocl","",23,{"inputs":[{"name":"self"}],"output":{"name":"rwvec"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and returns a new `RwVec`.",23,{"inputs":[],"output":{"name":"rwvec"}}],[11,"read","","Returns a new `FutureRwGuard` which will resolve into a a `RwGuard`.",23,{"inputs":[{"name":"self"}],"output":{"generics":["vec","readguard"],"name":"futureguard"}}],[11,"write","","Returns a new `FutureRwGuard` which will resolve into a a `RwGuard`.",23,{"inputs":[{"name":"self"}],"output":{"generics":["vec","writeguard"],"name":"futureguard"}}],[11,"as_mut_slice","","Returns a mutable slice into the contained `Vec`.",23,null],[11,"len_stale","","Returns the length of the internal `Vec`.",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"id","","Returns a pointer address to the internal array, usable as a unique identifier.",23,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from","","",23,{"inputs":[{"generics":["vec"],"name":"qrwlock"}],"output":{"name":"rwvec"}}],[11,"from","","",23,{"inputs":[{"name":"vec"}],"output":{"name":"rwvec"}}],[11,"deref","","",23,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",24,{"inputs":[{"name":"memmapcore"},{"name":"usize"},{"generics":["eventlist"],"name":"option"},{"generics":["event"],"name":"option"},{"name":"memcore"},{"name":"queue"}],"output":{"name":"memmap"}}],[11,"unmap","","Returns an unmap command builder.",24,{"inputs":[{"name":"self"}],"output":{"name":"memunmapcmd"}}],[11,"enqueue_unmap","","Enqueues an unmap command for this memory object immediately.",24,{"inputs":[{"name":"self"},{"generics":["queue"],"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"oclresult"}}],[11,"unmap_event","","Returns a reference to the unmap target event if it has been set.",24,{"inputs":[{"name":"self"}],"output":{"generics":["event"],"name":"option"}}],[11,"unmap_wait_events","","Returns a reference to the unmap wait event list if it has been set.",24,{"inputs":[{"name":"self"}],"output":{"generics":["eventlist"],"name":"option"}}],[11,"is_unmapped","","Returns true if an unmap command has already been enqueued, causing the memory referenced by this `MemMap` to become invalid.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ptr","","Returns a pointer to the host mapped memory.",24,null],[11,"as_mut_ptr","","Returns a mutable pointer to the host mapped memory.",24,null],[11,"queue","","Returns a reference to the internal core command queue.",24,{"inputs":[{"name":"self"}],"output":{"name":"queue"}}],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"drop","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"as_mem","","",24,{"inputs":[{"name":"self"}],"output":{"name":"memcore"}}],[11,"fmt","ocl::async","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"future_guard","","Returns a mutable reference to the contained `FutureGuard`.",25,{"inputs":[{"name":"self"}],"output":{"name":"futureguard"}}],[11,"poll","","",25,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"buffer","","Returns the internal buffer.",26,{"inputs":[{"name":"inner"}],"output":{"name":"buffer"}}],[11,"memory","","Returns the internal memory mapping.",26,{"inputs":[{"name":"inner"}],"output":{"name":"memmapcore"}}],[11,"default_offset","","Returns the default offset.",26,{"inputs":[{"name":"inner"}],"output":{"name":"usize"}}],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"drop","","Drops the `Inner` enqueuing an unmap and blocking until it completes.",26,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"buffersink"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new `BufferSink`.",27,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"generics":["buffersink"],"name":"oclresult"}}],[11,"from_buffer","","Returns a new `BufferSink`.",27,{"inputs":[{"name":"buffer"},{"generics":["queue"],"name":"option"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["buffersink"],"name":"oclresult"}}],[11,"read","","Returns a new `FutureGuard` which will resolve into a a `ReadGuard`.",27,{"inputs":[{"name":"self"}],"output":{"generics":["inner","readguard"],"name":"futureguard"}}],[11,"write","","Returns a new `FutureGuard` which will resolve into a a `WriteGuard`.",27,{"inputs":[{"name":"self"}],"output":{"generics":["inner","writeguard"],"name":"futureguard"}}],[11,"flush","","Returns a command builder which, once enqueued, will flush data from the mapped memory region to the device.",27,{"inputs":[{"name":"self"}],"output":{"name":"flushcmd"}}],[11,"buffer","","Returns a reference to the internal buffer.",27,{"inputs":[{"name":"self"}],"output":{"name":"buffer"}}],[11,"memory","","Returns a reference to the internal memory mapping.",27,{"inputs":[{"name":"self"}],"output":{"name":"memmapcore"}}],[11,"default_offset","","Returns a reference to the internal offset.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"default_len","","Returns the length of the memory region.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_mut_slice","","Returns a mutable slice into the contained memory region.",27,null],[11,"id","","Returns a pointer address to the internal memory region, usable as a unique identifier.",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from","","",27,{"inputs":[{"generics":["inner"],"name":"orderlock"}],"output":{"name":"buffersink"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"future_guard","","Returns a mutable reference to the contained `FutureGuard`.",28,{"inputs":[{"name":"self"}],"output":{"name":"futureguard"}}],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"buffer","","Returns the internal buffer.",29,{"inputs":[{"name":"inner"}],"output":{"name":"buffer"}}],[11,"memory","","Returns the internal memory mapping.",29,{"inputs":[{"name":"inner"}],"output":{"name":"memmapcore"}}],[11,"default_offset","","Returns the default offset.",29,{"inputs":[{"name":"inner"}],"output":{"name":"usize"}}],[11,"deref","","",29,null],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bufferstream"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new `BufferStream`.",30,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"generics":["bufferstream"],"name":"oclresult"}}],[11,"from_buffer","","Returns a new `BufferStream`.",30,{"inputs":[{"name":"buffer"},{"generics":["queue"],"name":"option"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["bufferstream"],"name":"oclresult"}}],[11,"read","","Returns a new `FutureGuard` which will resolve into a a `ReadGuard`.",30,{"inputs":[{"name":"self"}],"output":{"generics":["inner","readguard"],"name":"futureguard"}}],[11,"flood","","Returns a command builder which, when enqueued, floods the mapped memory region with fresh data from the device.",30,{"inputs":[{"name":"self"}],"output":{"name":"floodcmd"}}],[11,"buffer","","Returns a reference to the internal buffer.",30,{"inputs":[{"name":"self"}],"output":{"name":"buffer"}}],[11,"memory","","Returns a reference to the internal memory mapping.",30,{"inputs":[{"name":"self"}],"output":{"name":"memmapcore"}}],[11,"default_offset","","Returns a reference to the default offset.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"default_len","","Returns the length of the memory region.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_mut_slice","","Returns a mutable slice into the contained memory region.",30,null],[11,"id","","Returns a pointer address to the internal memory region, usable as a unique identifier.",30,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from","","",30,{"inputs":[{"generics":["inner"],"name":"orderlock"}],"output":{"name":"bufferstream"}}],[6,"FutureReadGuard","","",null,null],[6,"FutureWriteGuard","","",null,null],[8,"OrderGuard","","A read or write guard for an `OrderLock`.",null,null],[10,"new","","",31,{"inputs":[{"name":"orderlock"},{"generics":["event"],"name":"option"}],"output":{"name":"self"}}],[10,"order_lock","","",31,{"inputs":[{"name":"self"}],"output":{"name":"orderlock"}}],[11,"forget","","",31,{"inputs":[{"name":"self"}],"output":null}],[0,"prm","ocl","OpenCL scalar and vector primitive types.",null,null],[6,"cl_char","ocl::prm","",null,null],[6,"cl_uchar","","",null,null],[6,"cl_short","","",null,null],[6,"cl_ushort","","",null,null],[6,"cl_int","","",null,null],[6,"cl_uint","","",null,null],[6,"cl_long","","",null,null],[6,"cl_ulong","","",null,null],[6,"cl_half","","",null,null],[6,"cl_float","","",null,null],[6,"cl_double","","",null,null],[6,"cl_bool","","",null,null],[6,"cl_bitfield","","",null,null],[6,"cl_GLuint","","",null,null],[6,"cl_GLint","","",null,null],[6,"cl_GLenum","","",null,null],[3,"Char","","",null,null],[3,"Char2","","",null,null],[3,"Char3","","",null,null],[3,"Char4","","",null,null],[3,"Char8","","",null,null],[3,"Char16","","",null,null],[3,"Uchar","","",null,null],[3,"Uchar2","","",null,null],[3,"Uchar3","","",null,null],[3,"Uchar4","","",null,null],[3,"Uchar8","","",null,null],[3,"Uchar16","","",null,null],[3,"Short","","",null,null],[3,"Short2","","",null,null],[3,"Short3","","",null,null],[3,"Short4","","",null,null],[3,"Short8","","",null,null],[3,"Short16","","",null,null],[3,"Ushort","","",null,null],[3,"Ushort2","","",null,null],[3,"Ushort3","","",null,null],[3,"Ushort4","","",null,null],[3,"Ushort8","","",null,null],[3,"Ushort16","","",null,null],[3,"Int","","",null,null],[3,"Int2","","",null,null],[3,"Int3","","",null,null],[3,"Int4","","",null,null],[3,"Int8","","",null,null],[3,"Int16","","",null,null],[3,"Uint","","",null,null],[3,"Uint2","","",null,null],[3,"Uint3","","",null,null],[3,"Uint4","","",null,null],[3,"Uint8","","",null,null],[3,"Uint16","","",null,null],[3,"Long","","",null,null],[3,"Long2","","",null,null],[3,"Long3","","",null,null],[3,"Long4","","",null,null],[3,"Long8","","",null,null],[3,"Long16","","",null,null],[3,"Ulong","","",null,null],[3,"Ulong2","","",null,null],[3,"Ulong3","","",null,null],[3,"Ulong4","","",null,null],[3,"Ulong8","","",null,null],[3,"Ulong16","","",null,null],[3,"Float","","",null,null],[3,"Float2","","",null,null],[3,"Float3","","",null,null],[3,"Float4","","",null,null],[3,"Float8","","",null,null],[3,"Float16","","",null,null],[3,"Double","","",null,null],[3,"Double2","","",null,null],[3,"Double3","","",null,null],[3,"Double4","","",null,null],[3,"Double8","","",null,null],[3,"Double16","","",null,null],[0,"traits","ocl","Commonly used traits.",null,null],[8,"OclPrm","ocl::traits","A primitive type usable within `OpenCL` kernels.",null,null],[8,"OclScl","","A scalar type usable within OpenCL kernels.",null,null],[8,"OclVec","","A vector type usable within `OpenCL` kernels.",null,null],[8,"WorkDims","","Types which have properties describing the amount of work to be done in multiple dimensions.",null,null],[10,"dim_count","","Returns the number of dimensions defined.",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"to_work_size","","Returns an array representing the amount of work to be done by a kernel.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_work_offset","","Returns an array representing the offset of a work item or memory location.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MemLen","","Types which have properties allowing them to be used to define the size of a volume of memory.",null,null],[10,"to_len","","Returns the exact number of elements of a volume of memory (equivalent to `Vec::len()`).",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"to_len_padded","","Returns the length of a volume of memory padded to the next multiple of `incr`.",33,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[10,"to_lens","","Returns the exact lengths of each dimension of a volume of memory.",33,null],[8,"IntoMarker","","Conversion to a 'marker' event.",null,null],[10,"into_marker","","",34,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"generics":["option"],"name":"oclresult"}}],[8,"IntoRawEventArray","","Conversion to a stack allocated array of `cl_event` pointers.",null,null],[10,"into_raw_array","","",35,{"inputs":[{"name":"self"}],"output":{"name":"raweventarray"}}],[0,"builders","ocl","Builders and associated settings-related types.",null,null],[3,"ImageFormat","ocl::builders","Image format properties used by `Image`.",null,null],[12,"channel_order","","",36,null],[12,"channel_data_type","","",36,null],[3,"ImageDescriptor","","An image descriptor use in the creation of `Image`.",null,null],[12,"image_type","","",37,null],[12,"image_width","","",37,null],[12,"image_height","","",37,null],[12,"image_depth","","",37,null],[12,"image_array_size","","",37,null],[12,"image_row_pitch","","",37,null],[12,"image_slice_pitch","","",37,null],[12,"buffer","","",37,null],[3,"ContextProperties","","Context properties list.",null,null],[3,"ContextBuilder","","A builder for `Context`.",null,null],[3,"ProgramBuilder","","A builder for `Program`.",null,null],[3,"ImageBuilder","","A builder for `Image`.",null,null],[3,"ProQueBuilder","","A builder for `ProQue`.",null,null],[3,"BufferCmd","","A buffer command builder used to enqueue reads, writes, fills, and copies.",null,null],[3,"BufferReadCmd","","A buffer command builder used to enqueue reads.",null,null],[3,"BufferWriteCmd","","A buffer command builder used to enqueue writes.",null,null],[3,"BufferMapCmd","","A command builder used to enqueue a map command.",null,null],[3,"ImageCmd","","An image command builder for enqueuing reads, writes, fills, and copies.",null,null],[3,"KernelCmd","","A kernel command builder used to enqueue a kernel with a mix of default and optionally specified arguments.",null,null],[3,"BufferBuilder","","A buffer builder.",null,null],[3,"KernelBuilder","","A kernel builder.",null,null],[4,"BuildOpt","","A build option used by ProgramBuilder.",null,null],[13,"CmplrDefine","","",38,null],[12,"ident","ocl::builders::BuildOpt","",38,null],[12,"val","","",38,null],[13,"CmplrInclDir","ocl::builders","",38,null],[12,"path","ocl::builders::BuildOpt","",38,null],[13,"CmplrOther","ocl::builders","",38,null],[13,"IncludeDefine","","",38,null],[12,"ident","ocl::builders::BuildOpt","",38,null],[12,"val","","",38,null],[13,"IncludeRaw","ocl::builders","",38,null],[13,"IncludeRawEof","","",38,null],[4,"DeviceSpecifier","","Specifies [what boils down to] a list of devices.",null,null],[13,"All","","",39,null],[13,"First","","",39,null],[13,"Single","","",39,null],[13,"List","","",39,null],[13,"Indices","","",39,null],[13,"WrappingIndices","","",39,null],[13,"TypeFlags","","",39,null],[4,"BufferCmdKind","","The type of operation to be performed by a command.",null,null],[13,"Unspecified","","",40,null],[13,"Read","","",40,null],[13,"Write","","",40,null],[13,"Map","","",40,null],[13,"Copy","","",40,null],[12,"dst_buffer","ocl::builders::BufferCmdKind","",40,null],[12,"dst_offset","","",40,null],[12,"len","","",40,null],[13,"Fill","ocl::builders","",40,null],[12,"pattern","ocl::builders::BufferCmdKind","",40,null],[12,"len","","",40,null],[13,"CopyToImage","ocl::builders","",40,null],[12,"image","ocl::builders::BufferCmdKind","",40,null],[12,"dst_origin","","",40,null],[12,"region","","",40,null],[13,"GLAcquire","ocl::builders","",40,null],[13,"GLRelease","","",40,null],[4,"BufferCmdDataShape","","The 'shape' of the data to be processed, whether one or multi-dimensional.",null,null],[13,"Lin","","",41,null],[12,"offset","ocl::builders::BufferCmdDataShape","",41,null],[13,"Rect","ocl::builders","",41,null],[12,"src_origin","ocl::builders::BufferCmdDataShape","",41,null],[12,"dst_origin","","",41,null],[12,"region","","",41,null],[12,"src_row_pitch_bytes","","",41,null],[12,"src_slc_pitch_bytes","","",41,null],[12,"dst_row_pitch_bytes","","",41,null],[12,"dst_slc_pitch_bytes","","",41,null],[4,"ImageCmdKind","ocl::builders","The type of operation to be performed by a command.",null,null],[13,"Unspecified","","",42,null],[13,"Read","","",42,null],[12,"data","ocl::builders::ImageCmdKind","",42,null],[13,"Write","ocl::builders","",42,null],[12,"data","ocl::builders::ImageCmdKind","",42,null],[13,"Map","ocl::builders","",42,null],[13,"Fill","","",42,null],[12,"color","ocl::builders::ImageCmdKind","",42,null],[13,"Copy","ocl::builders","",42,null],[12,"dst_image","ocl::builders::ImageCmdKind","",42,null],[12,"dst_origin","","",42,null],[13,"CopyToBuffer","ocl::builders","",42,null],[12,"buffer","ocl::builders::ImageCmdKind","",42,null],[12,"dst_origin","","",42,null],[13,"GLAcquire","ocl::builders","",42,null],[13,"GLRelease","","",42,null],[4,"ClNullEventPtrEnum","","",null,null],[13,"Null","","",43,null],[13,"Event","","",43,null],[13,"EventList","","",43,null],[4,"ClWaitListPtrEnum","","An enum which can represent several different ways of representing a event wait list.",null,null],[13,"Null","","",44,null],[13,"RawEventArray","","",44,null],[13,"EventCoreOwned","","",44,null],[13,"EventOwned","","",44,null],[13,"EventCore","","",44,null],[13,"Event","","",44,null],[13,"EventList","","",44,null],[13,"EventSlice","","",44,null],[13,"EventPtrSlice","","",44,null],[13,"RefEventList","","",44,null],[13,"RefTraitObj","","",44,null],[13,"BoxTraitObj","","",44,null],[0,"flags","ocl","Bitflags for various parameter types.",null,null],[3,"DeviceType","ocl::flags","cl_device_type - bitfield",null,null],[17,"DEVICE_TYPE_DEFAULT","","",null,null],[17,"DEVICE_TYPE_CPU","","",null,null],[17,"DEVICE_TYPE_GPU","","",null,null],[17,"DEVICE_TYPE_ACCELERATOR","","",null,null],[17,"DEVICE_TYPE_CUSTOM","","",null,null],[17,"DEVICE_TYPE_ALL","","",null,null],[3,"DeviceFpConfig","","cl_device_fp_config - bitfield",null,null],[17,"FP_DENORM","","",null,null],[17,"FP_INF_NAN","","",null,null],[17,"FP_ROUND_TO_NEAREST","","",null,null],[17,"FP_ROUND_TO_ZERO","","",null,null],[17,"FP_ROUND_TO_INF","","",null,null],[17,"FP_FMA","","",null,null],[17,"FP_SOFT_FLOAT","","",null,null],[17,"FP_CORRECTLY_ROUNDED_DIVIDE_SQRT","","",null,null],[3,"DeviceExecCapabilities","","cl_device_exec_capabilities - bitfield",null,null],[17,"EXEC_KERNEL","","",null,null],[17,"EXEC_NATIVE_KERNEL","","",null,null],[3,"CommandQueueProperties","","cl_command_queue_properties - bitfield",null,null],[17,"QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE","","",null,null],[17,"QUEUE_PROFILING_ENABLE","","",null,null],[3,"DeviceAffinityDomain","","cl_device_affinity_domain",null,null],[17,"DEVICE_AFFINITY_DOMAIN_NUMA","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L4_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L3_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L2_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L1_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_NEXT_PARTITIONABLE","","",null,null],[3,"MemFlags","","cl_mem_flags - bitfield",null,null],[17,"MEM_READ_WRITE","","",null,null],[17,"MEM_WRITE_ONLY","","",null,null],[17,"MEM_READ_ONLY","","",null,null],[17,"MEM_USE_HOST_PTR","","",null,null],[17,"MEM_ALLOC_HOST_PTR","","",null,null],[17,"MEM_COPY_HOST_PTR","","",null,null],[17,"MEM_HOST_WRITE_ONLY","","",null,null],[17,"MEM_HOST_READ_ONLY","","",null,null],[17,"MEM_HOST_NO_ACCESS","","",null,null],[3,"MemMigrationFlags","","cl_mem_migration_flags - bitfield",null,null],[17,"MIGRATE_MEM_OBJECT_HOST","","",null,null],[17,"MIGRATE_MEM_OBJECT_CONTENT_UNDEFINED","","",null,null],[3,"MapFlags","","cl_map_flags - bitfield",null,null],[17,"MAP_READ","","",null,null],[17,"MAP_WRITE","","",null,null],[17,"MAP_WRITE_INVALIDATE_REGION","","",null,null],[3,"ProgramBinaryType","","cl_program_binary_type",null,null],[17,"PROGRAM_BINARY_TYPE_NONE","","",null,null],[17,"PROGRAM_BINARY_TYPE_COMPILED_OBJECT","","",null,null],[17,"PROGRAM_BINARY_TYPE_LIBRARY","","",null,null],[17,"PROGRAM_BINARY_TYPE_EXECUTABLE","","",null,null],[3,"KernelArgTypeQualifier","","cl_kernel_arg_type_qualifer",null,null],[17,"KERNEL_ARG_TYPE_NONE","","",null,null],[17,"KERNEL_ARG_TYPE_CONST","","",null,null],[17,"KERNEL_ARG_TYPE_RESTRICT","","",null,null],[17,"KERNEL_ARG_TYPE_VOLATILE","","",null,null],[0,"enums","ocl","Enumerators for settings and information requests.",null,null],[4,"ImageChannelOrder","ocl::enums","Specifies the number of channels and the channel layout i.e. the memory layout in which channels are stored in the image. Valid values are described in the table below. (from SDK)",null,null],[13,"R","","",45,null],[13,"A","","",45,null],[13,"Rg","","",45,null],[13,"Ra","","",45,null],[13,"Rgb","","",45,null],[13,"Rgba","","",45,null],[13,"Bgra","","",45,null],[13,"Argb","","",45,null],[13,"Intensity","","",45,null],[13,"Luminance","","",45,null],[13,"Rx","","",45,null],[13,"Rgx","","",45,null],[13,"Rgbx","","",45,null],[13,"Depth","","",45,null],[13,"DepthStencil","","",45,null],[4,"ImageChannelDataType","","Describes the size of the channel data type. The number of bits per element determined by the image_channel_data_type and image_channel_order must be a power of two. The list of supported values is described in the table below. (from SDK)",null,null],[13,"SnormInt8","","",46,null],[13,"SnormInt16","","",46,null],[13,"UnormInt8","","",46,null],[13,"UnormInt16","","",46,null],[13,"UnormShort565","","",46,null],[13,"UnormShort555","","",46,null],[13,"UnormInt101010","","",46,null],[13,"SignedInt8","","",46,null],[13,"SignedInt16","","",46,null],[13,"SignedInt32","","",46,null],[13,"UnsignedInt8","","",46,null],[13,"UnsignedInt16","","",46,null],[13,"UnsignedInt32","","",46,null],[13,"HalfFloat","","",46,null],[13,"Float","","",46,null],[13,"UnormInt24","","",46,null],[4,"Cbool","","cl_bool",null,null],[13,"False","","",47,null],[13,"True","","",47,null],[4,"Polling","","cl_bool: Polling",null,null],[13,"Blocking","","",48,null],[13,"NonBlocking","","",48,null],[4,"PlatformInfo","","cl_platform_info",null,null],[13,"Profile","","",49,null],[13,"Version","","",49,null],[13,"Name","","",49,null],[13,"Vendor","","",49,null],[13,"Extensions","","",49,null],[4,"DeviceInfo","","cl_device_info",null,null],[13,"Type","","",50,null],[13,"VendorId","","",50,null],[13,"MaxComputeUnits","","",50,null],[13,"MaxWorkItemDimensions","","",50,null],[13,"MaxWorkGroupSize","","",50,null],[13,"MaxWorkItemSizes","","",50,null],[13,"PreferredVectorWidthChar","","",50,null],[13,"PreferredVectorWidthShort","","",50,null],[13,"PreferredVectorWidthInt","","",50,null],[13,"PreferredVectorWidthLong","","",50,null],[13,"PreferredVectorWidthFloat","","",50,null],[13,"PreferredVectorWidthDouble","","",50,null],[13,"MaxClockFrequency","","",50,null],[13,"AddressBits","","",50,null],[13,"MaxReadImageArgs","","",50,null],[13,"MaxWriteImageArgs","","",50,null],[13,"MaxMemAllocSize","","",50,null],[13,"Image2dMaxWidth","","",50,null],[13,"Image2dMaxHeight","","",50,null],[13,"Image3dMaxWidth","","",50,null],[13,"Image3dMaxHeight","","",50,null],[13,"Image3dMaxDepth","","",50,null],[13,"ImageSupport","","",50,null],[13,"MaxParameterSize","","",50,null],[13,"MaxSamplers","","",50,null],[13,"MemBaseAddrAlign","","",50,null],[13,"MinDataTypeAlignSize","","",50,null],[13,"SingleFpConfig","","",50,null],[13,"GlobalMemCacheType","","",50,null],[13,"GlobalMemCachelineSize","","",50,null],[13,"GlobalMemCacheSize","","",50,null],[13,"GlobalMemSize","","",50,null],[13,"MaxConstantBufferSize","","",50,null],[13,"MaxConstantArgs","","",50,null],[13,"LocalMemType","","",50,null],[13,"LocalMemSize","","",50,null],[13,"ErrorCorrectionSupport","","",50,null],[13,"ProfilingTimerResolution","","",50,null],[13,"EndianLittle","","",50,null],[13,"Available","","",50,null],[13,"CompilerAvailable","","",50,null],[13,"ExecutionCapabilities","","",50,null],[13,"QueueProperties","","",50,null],[13,"Name","","",50,null],[13,"Vendor","","",50,null],[13,"DriverVersion","","",50,null],[13,"Profile","","",50,null],[13,"Version","","",50,null],[13,"Extensions","","",50,null],[13,"Platform","","",50,null],[13,"DoubleFpConfig","","",50,null],[13,"HalfFpConfig","","",50,null],[13,"PreferredVectorWidthHalf","","",50,null],[13,"HostUnifiedMemory","","",50,null],[13,"NativeVectorWidthChar","","",50,null],[13,"NativeVectorWidthShort","","",50,null],[13,"NativeVectorWidthInt","","",50,null],[13,"NativeVectorWidthLong","","",50,null],[13,"NativeVectorWidthFloat","","",50,null],[13,"NativeVectorWidthDouble","","",50,null],[13,"NativeVectorWidthHalf","","",50,null],[13,"OpenclCVersion","","",50,null],[13,"LinkerAvailable","","",50,null],[13,"BuiltInKernels","","",50,null],[13,"ImageMaxBufferSize","","",50,null],[13,"ImageMaxArraySize","","",50,null],[13,"ParentDevice","","",50,null],[13,"PartitionMaxSubDevices","","",50,null],[13,"PartitionProperties","","",50,null],[13,"PartitionAffinityDomain","","",50,null],[13,"PartitionType","","",50,null],[13,"ReferenceCount","","",50,null],[13,"PreferredInteropUserSync","","",50,null],[13,"PrintfBufferSize","","",50,null],[13,"ImagePitchAlignment","","",50,null],[13,"ImageBaseAddressAlignment","","",50,null],[4,"DeviceMemCacheType","","cl_mem_cache_type",null,null],[13,"None","","",51,null],[13,"ReadOnlyCache","","",51,null],[13,"ReadWriteCache","","",51,null],[4,"DeviceLocalMemType","","cl_device_local_mem_type",null,null],[13,"None","","",52,null],[13,"Local","","",52,null],[13,"Global","","",52,null],[4,"ContextInfo","","cl_context_info",null,null],[13,"ReferenceCount","","",53,null],[13,"Devices","","",53,null],[13,"Properties","","",53,null],[13,"NumDevices","","",53,null],[4,"ContextProperty","","cl_context_info + cl_context_properties",null,null],[13,"Platform","","",54,null],[13,"InteropUserSync","","",54,null],[13,"D3d10DeviceKhr","","",54,null],[13,"GlContextKhr","","",54,null],[13,"EglDisplayKhr","","",54,null],[13,"GlxDisplayKhr","","",54,null],[13,"CglSharegroupKhr","","",54,null],[13,"WglHdcKhr","","",54,null],[13,"AdapterD3d9Khr","","",54,null],[13,"AdapterD3d9exKhr","","",54,null],[13,"AdapterDxvaKhr","","",54,null],[13,"D3d11DeviceKhr","","",54,null],[4,"ContextInfoOrPropertiesPointerType","","cl_context_info + cl_context_properties",null,null],[13,"Platform","","",55,null],[13,"InteropUserSync","","",55,null],[4,"DevicePartitionProperty","","[INCOMPLETE] cl_device_partition_property",null,null],[13,"Equally","","",56,null],[13,"ByCounts","","",56,null],[13,"ByCountsListEnd","","",56,null],[13,"ByAffinityDomain","","",56,null],[4,"CommandQueueInfo","","cl_command_queue_info",null,null],[13,"Context","","",57,null],[13,"Device","","",57,null],[13,"ReferenceCount","","",57,null],[13,"Properties","","",57,null],[4,"ChannelType","","cl_channel_type",null,null],[13,"SnormInt8","","",58,null],[13,"SnormInt16","","",58,null],[13,"UnormInt8","","",58,null],[13,"UnormInt16","","",58,null],[13,"UnormShort565","","",58,null],[13,"UnormShort555","","",58,null],[13,"UnormInt101010","","",58,null],[13,"SignedInt8","","",58,null],[13,"SignedInt16","","",58,null],[13,"SignedInt32","","",58,null],[13,"UnsignedInt8","","",58,null],[13,"UnsignedInt16","","",58,null],[13,"UnsignedInt32","","",58,null],[13,"HalfFloat","","",58,null],[13,"Float","","",58,null],[13,"UnormInt24","","",58,null],[4,"MemObjectType","","cl_mem_object_type",null,null],[13,"Buffer","","",59,null],[13,"Image2d","","",59,null],[13,"Image3d","","",59,null],[13,"Image2dArray","","",59,null],[13,"Image1d","","",59,null],[13,"Image1dArray","","",59,null],[13,"Image1dBuffer","","",59,null],[4,"MemInfo","","cl_mem_info",null,null],[13,"Type","","",60,null],[13,"Flags","","",60,null],[13,"Size","","",60,null],[13,"HostPtr","","",60,null],[13,"MapCount","","",60,null],[13,"ReferenceCount","","",60,null],[13,"Context","","",60,null],[13,"AssociatedMemobject","","",60,null],[13,"Offset","","",60,null],[4,"ImageInfo","","cl_image_info",null,null],[13,"Format","","",61,null],[13,"ElementSize","","",61,null],[13,"RowPitch","","",61,null],[13,"SlicePitch","","",61,null],[13,"Width","","",61,null],[13,"Height","","",61,null],[13,"Depth","","",61,null],[13,"ArraySize","","",61,null],[13,"Buffer","","",61,null],[13,"NumMipLevels","","",61,null],[13,"NumSamples","","",61,null],[4,"AddressingMode","","cl_addressing_mode",null,null],[13,"None","","",62,null],[13,"ClampToEdge","","",62,null],[13,"Clamp","","",62,null],[13,"Repeat","","",62,null],[13,"MirroredRepeat","","",62,null],[4,"FilterMode","","cl_filter_mode",null,null],[13,"Nearest","","",63,null],[13,"Linear","","",63,null],[4,"SamplerInfo","","cl_sampler_info",null,null],[13,"ReferenceCount","","",64,null],[13,"Context","","",64,null],[13,"NormalizedCoords","","",64,null],[13,"AddressingMode","","",64,null],[13,"FilterMode","","",64,null],[4,"ProgramInfo","","cl_program_info",null,null],[13,"ReferenceCount","","",65,null],[13,"Context","","",65,null],[13,"NumDevices","","",65,null],[13,"Devices","","",65,null],[13,"Source","","",65,null],[13,"BinarySizes","","",65,null],[13,"Binaries","","",65,null],[13,"NumKernels","","",65,null],[13,"KernelNames","","",65,null],[4,"ProgramBuildInfo","","cl_program_build_info",null,null],[13,"BuildStatus","","",66,null],[13,"BuildOptions","","",66,null],[13,"BuildLog","","",66,null],[13,"BinaryType","","",66,null],[4,"ProgramBuildStatus","","cl_build_status",null,null],[13,"Success","","",67,null],[13,"None","","",67,null],[13,"Error","","",67,null],[13,"InProgress","","",67,null],[4,"KernelInfo","","cl_kernel_info",null,null],[13,"FunctionName","","",68,null],[13,"NumArgs","","",68,null],[13,"ReferenceCount","","",68,null],[13,"Context","","",68,null],[13,"Program","","",68,null],[13,"Attributes","","",68,null],[4,"KernelArgInfo","","cl_kernel_arg_info",null,null],[13,"AddressQualifier","","",69,null],[13,"AccessQualifier","","",69,null],[13,"TypeName","","",69,null],[13,"TypeQualifier","","",69,null],[13,"Name","","",69,null],[4,"KernelArgAddressQualifier","","cl_kernel_arg_address_qualifier",null,null],[13,"Global","","",70,null],[13,"Local","","",70,null],[13,"Constant","","",70,null],[13,"Private","","",70,null],[4,"KernelArgAccessQualifier","","cl_kernel_arg_access_qualifier",null,null],[13,"ReadOnly","","",71,null],[13,"WriteOnly","","",71,null],[13,"ReadWrite","","",71,null],[13,"None","","",71,null],[4,"KernelWorkGroupInfo","","cl_kernel_work_group_info",null,null],[13,"WorkGroupSize","","",72,null],[13,"CompileWorkGroupSize","","",72,null],[13,"LocalMemSize","","",72,null],[13,"PreferredWorkGroupSizeMultiple","","",72,null],[13,"PrivateMemSize","","",72,null],[13,"GlobalWorkSize","","",72,null],[4,"EventInfo","","cl_event_info",null,null],[13,"CommandQueue","","",73,null],[13,"CommandType","","",73,null],[13,"ReferenceCount","","",73,null],[13,"CommandExecutionStatus","","",73,null],[13,"Context","","",73,null],[4,"CommandType","","cl_command_type",null,null],[13,"NdrangeKernel","","",74,null],[13,"Task","","",74,null],[13,"NativeKernel","","",74,null],[13,"ReadBuffer","","",74,null],[13,"WriteBuffer","","",74,null],[13,"CopyBuffer","","",74,null],[13,"ReadImage","","",74,null],[13,"WriteImage","","",74,null],[13,"CopyImage","","",74,null],[13,"CopyImageToBuffer","","",74,null],[13,"CopyBufferToImage","","",74,null],[13,"MapBuffer","","",74,null],[13,"MapImage","","",74,null],[13,"UnmapMemObject","","",74,null],[13,"Marker","","",74,null],[13,"AcquireGlObjects","","",74,null],[13,"ReleaseGlObjects","","",74,null],[13,"ReadBufferRect","","",74,null],[13,"WriteBufferRect","","",74,null],[13,"CopyBufferRect","","",74,null],[13,"User","","",74,null],[13,"Barrier","","",74,null],[13,"MigrateMemObjects","","",74,null],[13,"FillBuffer","","",74,null],[13,"FillImage","","",74,null],[4,"CommandExecutionStatus","","command execution status",null,null],[13,"Complete","","",75,null],[13,"Running","","",75,null],[13,"Submitted","","",75,null],[13,"Queued","","",75,null],[4,"BufferCreateType","","cl_buffer_create_type",null,null],[13,"Region","","",76,null],[13,"__DUMMY","","",76,null],[4,"ProfilingInfo","","cl_profiling_info",null,null],[13,"Queued","","",77,null],[13,"Submit","","",77,null],[13,"Start","","",77,null],[13,"End","","",77,null],[3,"ArgVal","","A reference to a kernel argument value.",null,null],[4,"ContextPropertyValue","","",null,null],[13,"Platform","","",78,null],[13,"InteropUserSync","","",78,null],[13,"D3d10DeviceKhr","","",78,null],[13,"GlContextKhr","","",78,null],[13,"EglDisplayKhr","","",78,null],[13,"GlxDisplayKhr","","",78,null],[13,"CglSharegroupKhr","","",78,null],[13,"WglHdcKhr","","",78,null],[13,"AdapterD3d9Khr","","",78,null],[13,"AdapterD3d9exKhr","","",78,null],[13,"AdapterDxvaKhr","","",78,null],[13,"D3d11DeviceKhr","","",78,null],[4,"PlatformInfoResult","","Platform info result.",null,null],[13,"Profile","","",79,null],[13,"Version","","",79,null],[13,"Name","","",79,null],[13,"Vendor","","",79,null],[13,"Extensions","","",79,null],[4,"DeviceInfoResult","","A device info result.",null,null],[13,"Type","","",80,null],[13,"VendorId","","",80,null],[13,"MaxComputeUnits","","",80,null],[13,"MaxWorkItemDimensions","","",80,null],[13,"MaxWorkGroupSize","","",80,null],[13,"MaxWorkItemSizes","","",80,null],[13,"PreferredVectorWidthChar","","",80,null],[13,"PreferredVectorWidthShort","","",80,null],[13,"PreferredVectorWidthInt","","",80,null],[13,"PreferredVectorWidthLong","","",80,null],[13,"PreferredVectorWidthFloat","","",80,null],[13,"PreferredVectorWidthDouble","","",80,null],[13,"MaxClockFrequency","","",80,null],[13,"AddressBits","","",80,null],[13,"MaxReadImageArgs","","",80,null],[13,"MaxWriteImageArgs","","",80,null],[13,"MaxMemAllocSize","","",80,null],[13,"Image2dMaxWidth","","",80,null],[13,"Image2dMaxHeight","","",80,null],[13,"Image3dMaxWidth","","",80,null],[13,"Image3dMaxHeight","","",80,null],[13,"Image3dMaxDepth","","",80,null],[13,"ImageSupport","","",80,null],[13,"MaxParameterSize","","",80,null],[13,"MaxSamplers","","",80,null],[13,"MemBaseAddrAlign","","",80,null],[13,"MinDataTypeAlignSize","","",80,null],[13,"SingleFpConfig","","",80,null],[13,"GlobalMemCacheType","","",80,null],[13,"GlobalMemCachelineSize","","",80,null],[13,"GlobalMemCacheSize","","",80,null],[13,"GlobalMemSize","","",80,null],[13,"MaxConstantBufferSize","","",80,null],[13,"MaxConstantArgs","","",80,null],[13,"LocalMemType","","",80,null],[13,"LocalMemSize","","",80,null],[13,"ErrorCorrectionSupport","","",80,null],[13,"ProfilingTimerResolution","","",80,null],[13,"EndianLittle","","",80,null],[13,"Available","","",80,null],[13,"CompilerAvailable","","",80,null],[13,"ExecutionCapabilities","","",80,null],[13,"QueueProperties","","",80,null],[13,"Name","","",80,null],[13,"Vendor","","",80,null],[13,"DriverVersion","","",80,null],[13,"Profile","","",80,null],[13,"Version","","",80,null],[13,"Extensions","","",80,null],[13,"Platform","","",80,null],[13,"DoubleFpConfig","","",80,null],[13,"HalfFpConfig","","",80,null],[13,"PreferredVectorWidthHalf","","",80,null],[13,"HostUnifiedMemory","","",80,null],[13,"NativeVectorWidthChar","","",80,null],[13,"NativeVectorWidthShort","","",80,null],[13,"NativeVectorWidthInt","","",80,null],[13,"NativeVectorWidthLong","","",80,null],[13,"NativeVectorWidthFloat","","",80,null],[13,"NativeVectorWidthDouble","","",80,null],[13,"NativeVectorWidthHalf","","",80,null],[13,"OpenclCVersion","","",80,null],[13,"LinkerAvailable","","",80,null],[13,"BuiltInKernels","","",80,null],[13,"ImageMaxBufferSize","","",80,null],[13,"ImageMaxArraySize","","",80,null],[13,"ParentDevice","","",80,null],[13,"PartitionMaxSubDevices","","",80,null],[13,"PartitionProperties","","",80,null],[13,"PartitionAffinityDomain","","",80,null],[13,"PartitionType","","",80,null],[13,"ReferenceCount","","",80,null],[13,"PreferredInteropUserSync","","",80,null],[13,"PrintfBufferSize","","",80,null],[13,"ImagePitchAlignment","","",80,null],[13,"ImageBaseAddressAlignment","","",80,null],[4,"ContextInfoResult","","A context info result.",null,null],[13,"ReferenceCount","","",81,null],[13,"Devices","","",81,null],[13,"Properties","","",81,null],[13,"NumDevices","","",81,null],[4,"CommandQueueInfoResult","","A command queue info result.",null,null],[13,"Context","","",82,null],[13,"Device","","",82,null],[13,"ReferenceCount","","",82,null],[13,"Properties","","",82,null],[4,"MemInfoResult","","A mem info result.",null,null],[13,"Type","","",83,null],[13,"Flags","","",83,null],[13,"Size","","",83,null],[13,"HostPtr","","",83,null],[13,"MapCount","","",83,null],[13,"ReferenceCount","","",83,null],[13,"Context","","",83,null],[13,"AssociatedMemobject","","",83,null],[13,"Offset","","",83,null],[4,"ImageInfoResult","","An image info result.",null,null],[13,"Format","","",84,null],[13,"ElementSize","","",84,null],[13,"RowPitch","","",84,null],[13,"SlicePitch","","",84,null],[13,"Width","","",84,null],[13,"Height","","",84,null],[13,"Depth","","",84,null],[13,"ArraySize","","",84,null],[13,"Buffer","","",84,null],[13,"NumMipLevels","","",84,null],[13,"NumSamples","","",84,null],[4,"SamplerInfoResult","","A sampler info result.",null,null],[13,"ReferenceCount","","",85,null],[13,"Context","","",85,null],[13,"NormalizedCoords","","",85,null],[13,"AddressingMode","","",85,null],[13,"FilterMode","","",85,null],[4,"ProgramInfoResult","","A program info result.",null,null],[13,"ReferenceCount","","",86,null],[13,"Context","","",86,null],[13,"NumDevices","","",86,null],[13,"Devices","","Contains a `Vec` containing the `DeviceId` associated with each device.",86,null],[13,"Source","","",86,null],[13,"BinarySizes","","Contains a `Vec` containing the size of the binary associated with each device.",86,null],[13,"Binaries","","Contains a `Vec` containing the bytes of the binary associated with each device.",86,null],[13,"NumKernels","","",86,null],[13,"KernelNames","","",86,null],[4,"ProgramBuildInfoResult","","A program build info result.",null,null],[13,"BuildStatus","","",87,null],[13,"BuildOptions","","",87,null],[13,"BuildLog","","",87,null],[13,"BinaryType","","",87,null],[4,"KernelInfoResult","","A kernel info result.",null,null],[13,"FunctionName","","",88,null],[13,"NumArgs","","",88,null],[13,"ReferenceCount","","",88,null],[13,"Context","","",88,null],[13,"Program","","",88,null],[13,"Attributes","","",88,null],[4,"KernelArgInfoResult","","A kernel arg info result.",null,null],[13,"AddressQualifier","","",89,null],[13,"AccessQualifier","","",89,null],[13,"TypeName","","",89,null],[13,"TypeQualifier","","",89,null],[13,"Name","","",89,null],[4,"KernelWorkGroupInfoResult","","A kernel work group info result.",null,null],[13,"WorkGroupSize","","",90,null],[13,"CompileWorkGroupSize","","",90,null],[13,"LocalMemSize","","",90,null],[13,"PreferredWorkGroupSizeMultiple","","",90,null],[13,"PrivateMemSize","","",90,null],[13,"GlobalWorkSize","","",90,null],[13,"Empty","","",90,null],[13,"Unavailable","","",90,null],[13,"CustomBuiltinOnly","","",90,null],[4,"EventInfoResult","","An event info result.",null,null],[13,"CommandQueue","","",91,null],[13,"CommandType","","",91,null],[13,"ReferenceCount","","",91,null],[13,"CommandExecutionStatus","","",91,null],[13,"Context","","",91,null],[4,"ProfilingInfoResult","","A profiling info result.",null,null],[13,"Queued","","",92,null],[13,"Submit","","",92,null],[13,"Start","","",92,null],[13,"End","","",92,null],[4,"Status","","The status of an OpenCL API call. Used for returning success/error codes.",null,null],[13,"CL_SUCCESS","","",93,null],[13,"CL_DEVICE_NOT_FOUND","","",93,null],[13,"CL_DEVICE_NOT_AVAILABLE","","",93,null],[13,"CL_COMPILER_NOT_AVAILABLE","","",93,null],[13,"CL_MEM_OBJECT_ALLOCATION_FAILURE","","",93,null],[13,"CL_OUT_OF_RESOURCES","","",93,null],[13,"CL_OUT_OF_HOST_MEMORY","","",93,null],[13,"CL_PROFILING_INFO_NOT_AVAILABLE","","",93,null],[13,"CL_MEM_COPY_OVERLAP","","",93,null],[13,"CL_IMAGE_FORMAT_MISMATCH","","",93,null],[13,"CL_IMAGE_FORMAT_NOT_SUPPORTED","","",93,null],[13,"CL_BUILD_PROGRAM_FAILURE","","",93,null],[13,"CL_MAP_FAILURE","","",93,null],[13,"CL_MISALIGNED_SUB_BUFFER_OFFSET","","",93,null],[13,"CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST","","",93,null],[13,"CL_COMPILE_PROGRAM_FAILURE","","",93,null],[13,"CL_LINKER_NOT_AVAILABLE","","",93,null],[13,"CL_LINK_PROGRAM_FAILURE","","",93,null],[13,"CL_DEVICE_PARTITION_FAILED","","",93,null],[13,"CL_KERNEL_ARG_INFO_NOT_AVAILABLE","","",93,null],[13,"CL_INVALID_VALUE","","",93,null],[13,"CL_INVALID_DEVICE_TYPE","","",93,null],[13,"CL_INVALID_PLATFORM","","",93,null],[13,"CL_INVALID_DEVICE","","",93,null],[13,"CL_INVALID_CONTEXT","","",93,null],[13,"CL_INVALID_QUEUE_PROPERTIES","","",93,null],[13,"CL_INVALID_COMMAND_QUEUE","","",93,null],[13,"CL_INVALID_HOST_PTR","","",93,null],[13,"CL_INVALID_MEM_OBJECT","","",93,null],[13,"CL_INVALID_IMAGE_FORMAT_DESCRIPTOR","","",93,null],[13,"CL_INVALID_IMAGE_SIZE","","",93,null],[13,"CL_INVALID_SAMPLER","","",93,null],[13,"CL_INVALID_BINARY","","",93,null],[13,"CL_INVALID_BUILD_OPTIONS","","",93,null],[13,"CL_INVALID_PROGRAM","","",93,null],[13,"CL_INVALID_PROGRAM_EXECUTABLE","","",93,null],[13,"CL_INVALID_KERNEL_NAME","","",93,null],[13,"CL_INVALID_KERNEL_DEFINITION","","",93,null],[13,"CL_INVALID_KERNEL","","",93,null],[13,"CL_INVALID_ARG_INDEX","","",93,null],[13,"CL_INVALID_ARG_VALUE","","",93,null],[13,"CL_INVALID_ARG_SIZE","","",93,null],[13,"CL_INVALID_KERNEL_ARGS","","",93,null],[13,"CL_INVALID_WORK_DIMENSION","","",93,null],[13,"CL_INVALID_WORK_GROUP_SIZE","","",93,null],[13,"CL_INVALID_WORK_ITEM_SIZE","","",93,null],[13,"CL_INVALID_GLOBAL_OFFSET","","",93,null],[13,"CL_INVALID_EVENT_WAIT_LIST","","",93,null],[13,"CL_INVALID_EVENT","","",93,null],[13,"CL_INVALID_OPERATION","","",93,null],[13,"CL_INVALID_GL_OBJECT","","",93,null],[13,"CL_INVALID_BUFFER_SIZE","","",93,null],[13,"CL_INVALID_MIP_LEVEL","","",93,null],[13,"CL_INVALID_GLOBAL_WORK_SIZE","","",93,null],[13,"CL_INVALID_PROPERTY","","",93,null],[13,"CL_INVALID_IMAGE_DESCRIPTOR","","",93,null],[13,"CL_INVALID_COMPILER_OPTIONS","","",93,null],[13,"CL_INVALID_LINKER_OPTIONS","","",93,null],[13,"CL_INVALID_DEVICE_PARTITION_COUNT","","",93,null],[13,"CL_INVALID_PIPE_SIZE","","",93,null],[13,"CL_INVALID_DEVICE_QUEUE","","",93,null],[13,"CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR","","",93,null],[13,"CL_PLATFORM_NOT_FOUND_KHR","","",93,null],[13,"CL_NV_INVALID_MEM_ACCESS","","",93,null],[4,"DeviceSpecifier","","Specifies [what boils down to] a list of devices.",null,null],[13,"All","","",39,null],[13,"First","","",39,null],[13,"Single","","",39,null],[13,"List","","",39,null],[13,"Indices","","",39,null],[13,"WrappingIndices","","",39,null],[13,"TypeFlags","","",39,null],[4,"BufferCmdKind","","The type of operation to be performed by a command.",null,null],[13,"Unspecified","","",40,null],[13,"Read","","",40,null],[13,"Write","","",40,null],[13,"Map","","",40,null],[13,"Copy","","",40,null],[12,"dst_buffer","ocl::enums::BufferCmdKind","",40,null],[12,"dst_offset","","",40,null],[12,"len","","",40,null],[13,"Fill","ocl::enums","",40,null],[12,"pattern","ocl::enums::BufferCmdKind","",40,null],[12,"len","","",40,null],[13,"CopyToImage","ocl::enums","",40,null],[12,"image","ocl::enums::BufferCmdKind","",40,null],[12,"dst_origin","","",40,null],[12,"region","","",40,null],[13,"GLAcquire","ocl::enums","",40,null],[13,"GLRelease","","",40,null],[4,"BufferCmdDataShape","","The 'shape' of the data to be processed, whether one or multi-dimensional.",null,null],[13,"Lin","","",41,null],[12,"offset","ocl::enums::BufferCmdDataShape","",41,null],[13,"Rect","ocl::enums","",41,null],[12,"src_origin","ocl::enums::BufferCmdDataShape","",41,null],[12,"dst_origin","","",41,null],[12,"region","","",41,null],[12,"src_row_pitch_bytes","","",41,null],[12,"src_slc_pitch_bytes","","",41,null],[12,"dst_row_pitch_bytes","","",41,null],[12,"dst_slc_pitch_bytes","","",41,null],[6,"FutureReadGuard","ocl","",null,null],[6,"FutureWriteGuard","","",null,null],[11,"partial_cmp","ocl::flags","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"bitxor_assign","","Toggles the set of flags.",97,null],[11,"bitxor_assign","","Toggles the set of flags.",94,null],[11,"bitxor_assign","","Toggles the set of flags.",100,null],[11,"bitxor_assign","","Toggles the set of flags.",102,null],[11,"bitxor_assign","","Toggles the set of flags.",98,null],[11,"bitxor_assign","","Toggles the set of flags.",95,null],[11,"bitxor_assign","","Toggles the set of flags.",96,null],[11,"bitxor_assign","","Toggles the set of flags.",101,null],[11,"bitxor_assign","","Toggles the set of flags.",103,null],[11,"bitxor_assign","","Toggles the set of flags.",99,null],[11,"bitor_assign","","Adds the set of flags.",94,null],[11,"bitor_assign","","Adds the set of flags.",100,null],[11,"bitor_assign","","Adds the set of flags.",96,null],[11,"bitor_assign","","Adds the set of flags.",97,null],[11,"bitor_assign","","Adds the set of flags.",102,null],[11,"bitor_assign","","Adds the set of flags.",101,null],[11,"bitor_assign","","Adds the set of flags.",95,null],[11,"bitor_assign","","Adds the set of flags.",98,null],[11,"bitor_assign","","Adds the set of flags.",99,null],[11,"bitor_assign","","Adds the set of flags.",103,null],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"extend","","",102,null],[11,"extend","","",103,null],[11,"extend","","",95,null],[11,"extend","","",94,null],[11,"extend","","",97,null],[11,"extend","","",98,null],[11,"extend","","",99,null],[11,"extend","","",101,null],[11,"extend","","",96,null],[11,"extend","","",100,null],[11,"eq","ocl::enums","",69,{"inputs":[{"name":"self"},{"name":"kernelarginfo"}],"output":{"name":"bool"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"devicepartitionproperty"}],"output":{"name":"bool"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"memobjecttype"}],"output":{"name":"bool"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"kernelworkgroupinfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",53,{"inputs":[{"name":"self"},{"name":"contextinfo"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"polling"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",68,{"inputs":[{"name":"self"},{"name":"kernelinfo"}],"output":{"name":"bool"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"commandqueueinfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",63,{"inputs":[{"name":"self"},{"name":"filtermode"}],"output":{"name":"bool"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"deviceinfo"}],"output":{"name":"bool"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"devicememcachetype"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",47,{"inputs":[{"name":"self"},{"name":"cbool"}],"output":{"name":"bool"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"imagechanneldatatype"}],"output":{"name":"bool"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"programbuildstatus"}],"output":{"name":"bool"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"imagechannelorder"}],"output":{"name":"bool"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"meminfo"}],"output":{"name":"bool"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"eventinfo"}],"output":{"name":"bool"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"programbuildinfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",93,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"kernelargaccessqualifier"}],"output":{"name":"bool"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"profilinginfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",58,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",76,{"inputs":[{"name":"self"},{"name":"buffercreatetype"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"devicelocalmemtype"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",49,{"inputs":[{"name":"self"},{"name":"platforminfo"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"commandexecutionstatus"}],"output":{"name":"bool"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"addressingmode"}],"output":{"name":"bool"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"contextproperty"}],"output":{"name":"bool"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"eq","ocl::flags","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"eq","ocl::enums","",55,{"inputs":[{"name":"self"},{"name":"contextinfoorpropertiespointertype"}],"output":{"name":"bool"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"commandtype"}],"output":{"name":"bool"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"kernelargaddressqualifier"}],"output":{"name":"bool"}}],[11,"fmt","ocl::flags","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",102,null],[11,"bitand_assign","","Disables all flags disabled in the set.",99,null],[11,"bitand_assign","","Disables all flags disabled in the set.",96,null],[11,"bitand_assign","","Disables all flags disabled in the set.",98,null],[11,"bitand_assign","","Disables all flags disabled in the set.",95,null],[11,"bitand_assign","","Disables all flags disabled in the set.",100,null],[11,"bitand_assign","","Disables all flags disabled in the set.",101,null],[11,"bitand_assign","","Disables all flags disabled in the set.",94,null],[11,"bitand_assign","","Disables all flags disabled in the set.",97,null],[11,"bitand_assign","","Disables all flags disabled in the set.",103,null],[11,"bitor","","Returns the union of the two sets of flags.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitor","","Returns the union of the two sets of flags.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitor","","Returns the union of the two sets of flags.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitor","","Returns the union of the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitor","","Returns the union of the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"bitor","","Returns the union of the two sets of flags.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitor","","Returns the union of the two sets of flags.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"fmt","ocl::enums","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::builders","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::builders","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::flags","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::builders","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::enums","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"bitxor","ocl::flags","Returns the left flags, but with all the right flags toggled.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"not","","Returns the complement of this set of flags.",94,{"inputs":[{"name":"self"}],"output":{"name":"deviceaffinitydomain"}}],[11,"not","","Returns the complement of this set of flags.",103,{"inputs":[{"name":"self"}],"output":{"name":"deviceexeccapabilities"}}],[11,"not","","Returns the complement of this set of flags.",98,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"not","","Returns the complement of this set of flags.",97,{"inputs":[{"name":"self"}],"output":{"name":"memmigrationflags"}}],[11,"not","","Returns the complement of this set of flags.",99,{"inputs":[{"name":"self"}],"output":{"name":"devicefpconfig"}}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"not","","Returns the complement of this set of flags.",95,{"inputs":[{"name":"self"}],"output":{"name":"programbinarytype"}}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"self"}],"output":{"name":"kernelargtypequalifier"}}],[11,"not","","Returns the complement of this set of flags.",100,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"from_iter","","",96,{"inputs":[{"name":"t"}],"output":{"name":"devicetype"}}],[11,"from_iter","","",103,{"inputs":[{"name":"t"}],"output":{"name":"deviceexeccapabilities"}}],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"deviceaffinitydomain"}}],[11,"from_iter","","",95,{"inputs":[{"name":"t"}],"output":{"name":"programbinarytype"}}],[11,"from_iter","","",98,{"inputs":[{"name":"t"}],"output":{"name":"mapflags"}}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"memflags"}}],[11,"from_iter","","",102,{"inputs":[{"name":"t"}],"output":{"name":"kernelargtypequalifier"}}],[11,"from_iter","","",97,{"inputs":[{"name":"t"}],"output":{"name":"memmigrationflags"}}],[11,"from_iter","","",99,{"inputs":[{"name":"t"}],"output":{"name":"devicefpconfig"}}],[11,"from_iter","","",100,{"inputs":[{"name":"t"}],"output":{"name":"commandqueueproperties"}}],[11,"default","","",98,{"inputs":[],"output":{"name":"mapflags"}}],[11,"default","","",96,{"inputs":[],"output":{"name":"devicetype"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"memflags"}}],[11,"default","","",100,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"sub","","Returns the set difference of the two sets of flags.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"sub","","Returns the set difference of the two sets of flags.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"sub","","Returns the set difference of the two sets of flags.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"sub","","Returns the set difference of the two sets of flags.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"sub","","Returns the set difference of the two sets of flags.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"clone","ocl::builders","",105,{"inputs":[{"name":"self"}],"output":{"name":"contextproperties"}}],[11,"clone","ocl::enums","",72,{"inputs":[{"name":"self"}],"output":{"name":"kernelworkgroupinfo"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"commandexecutionstatus"}}],[11,"clone","ocl::flags","",98,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"clone","ocl::enums","",70,{"inputs":[{"name":"self"}],"output":{"name":"kernelargaddressqualifier"}}],[11,"clone","ocl::builders","",37,{"inputs":[{"name":"self"}],"output":{"name":"imagedescriptor"}}],[11,"clone","ocl::enums","",48,{"inputs":[{"name":"self"}],"output":{"name":"polling"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"contextinfoorpropertiespointertype"}}],[11,"clone","ocl::flags","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"clone","ocl::enums","",51,{"inputs":[{"name":"self"}],"output":{"name":"devicememcachetype"}}],[11,"clone","ocl::flags","",100,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"memmigrationflags"}}],[11,"clone","ocl::enums","",104,{"inputs":[{"name":"self"}],"output":{"name":"argval"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"commandtype"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"eventinfo"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"devicelocalmemtype"}}],[11,"clone","ocl::builders","",36,{"inputs":[{"name":"self"}],"output":{"name":"imageformat"}}],[11,"clone","ocl::enums","",63,{"inputs":[{"name":"self"}],"output":{"name":"filtermode"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"addressingmode"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"deviceinfo"}}],[11,"clone","ocl::flags","",94,{"inputs":[{"name":"self"}],"output":{"name":"deviceaffinitydomain"}}],[11,"clone","ocl::enums","",49,{"inputs":[{"name":"self"}],"output":{"name":"platforminfo"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueinfo"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"imagechannelorder"}}],[11,"clone","ocl::flags","",102,{"inputs":[{"name":"self"}],"output":{"name":"kernelargtypequalifier"}}],[11,"clone","ocl::enums","",67,{"inputs":[{"name":"self"}],"output":{"name":"programbuildstatus"}}],[11,"clone","ocl::flags","",99,{"inputs":[{"name":"self"}],"output":{"name":"devicefpconfig"}}],[11,"clone","ocl::enums","",61,{"inputs":[{"name":"self"}],"output":{"name":"imageinfo"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"devicepartitionproperty"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"meminfo"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"contextpropertyvalue"}}],[11,"clone","ocl::flags","",103,{"inputs":[{"name":"self"}],"output":{"name":"deviceexeccapabilities"}}],[11,"clone","ocl::enums","",71,{"inputs":[{"name":"self"}],"output":{"name":"kernelargaccessqualifier"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"kernelinfo"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"channeltype"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"contextproperty"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"kernelarginfo"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"contextinfo"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"buffercreatetype"}}],[11,"clone","ocl::flags","",95,{"inputs":[{"name":"self"}],"output":{"name":"programbinarytype"}}],[11,"clone","ocl::enums","",77,{"inputs":[{"name":"self"}],"output":{"name":"profilinginfo"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"memobjecttype"}}],[11,"clone","ocl::flags","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"clone","ocl::enums","",46,{"inputs":[{"name":"self"}],"output":{"name":"imagechanneldatatype"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"programbuildinfo"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"cbool"}}],[11,"cmp","ocl::flags","",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"ordering"}}],[11,"cmp","","",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"ordering"}}],[11,"cmp","","",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"ordering"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"ordering"}}],[11,"cmp","","",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"ordering"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"ordering"}}],[11,"cmp","","",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"ordering"}}],[11,"cmp","","",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"ordering"}}],[11,"cmp","","",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"ordering"}}],[11,"cmp","","",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"ordering"}}],[11,"fmt","ocl::enums","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from_i64","","",59,{"inputs":[{"name":"i64"}],"output":{"generics":["memobjecttype"],"name":"option"}}],[11,"from_u64","","",59,{"inputs":[{"name":"u64"}],"output":{"generics":["memobjecttype"],"name":"option"}}],[11,"from_i64","","",45,{"inputs":[{"name":"i64"}],"output":{"generics":["imagechannelorder"],"name":"option"}}],[11,"from_u64","","",45,{"inputs":[{"name":"u64"}],"output":{"generics":["imagechannelorder"],"name":"option"}}],[11,"from_i64","","",62,{"inputs":[{"name":"i64"}],"output":{"generics":["addressingmode"],"name":"option"}}],[11,"from_u64","","",62,{"inputs":[{"name":"u64"}],"output":{"generics":["addressingmode"],"name":"option"}}],[11,"from_i64","","",93,{"inputs":[{"name":"i64"}],"output":{"generics":["status"],"name":"option"}}],[11,"from_u64","","",93,{"inputs":[{"name":"u64"}],"output":{"generics":["status"],"name":"option"}}],[11,"from_i64","","",53,{"inputs":[{"name":"i64"}],"output":{"generics":["contextinfo"],"name":"option"}}],[11,"from_u64","","",53,{"inputs":[{"name":"u64"}],"output":{"generics":["contextinfo"],"name":"option"}}],[11,"from_i64","","",73,{"inputs":[{"name":"i64"}],"output":{"generics":["eventinfo"],"name":"option"}}],[11,"from_u64","","",73,{"inputs":[{"name":"u64"}],"output":{"generics":["eventinfo"],"name":"option"}}],[11,"from_i64","","",60,{"inputs":[{"name":"i64"}],"output":{"generics":["meminfo"],"name":"option"}}],[11,"from_u64","","",60,{"inputs":[{"name":"u64"}],"output":{"generics":["meminfo"],"name":"option"}}],[11,"from_i64","","",63,{"inputs":[{"name":"i64"}],"output":{"generics":["filtermode"],"name":"option"}}],[11,"from_u64","","",63,{"inputs":[{"name":"u64"}],"output":{"generics":["filtermode"],"name":"option"}}],[11,"from_i64","","",64,{"inputs":[{"name":"i64"}],"output":{"generics":["samplerinfo"],"name":"option"}}],[11,"from_u64","","",64,{"inputs":[{"name":"u64"}],"output":{"generics":["samplerinfo"],"name":"option"}}],[11,"from_i64","","",61,{"inputs":[{"name":"i64"}],"output":{"generics":["imageinfo"],"name":"option"}}],[11,"from_u64","","",61,{"inputs":[{"name":"u64"}],"output":{"generics":["imageinfo"],"name":"option"}}],[11,"from_i64","","",47,{"inputs":[{"name":"i64"}],"output":{"generics":["cbool"],"name":"option"}}],[11,"from_u64","","",47,{"inputs":[{"name":"u64"}],"output":{"generics":["cbool"],"name":"option"}}],[11,"from_i64","","",51,{"inputs":[{"name":"i64"}],"output":{"generics":["devicememcachetype"],"name":"option"}}],[11,"from_u64","","",51,{"inputs":[{"name":"u64"}],"output":{"generics":["devicememcachetype"],"name":"option"}}],[11,"from_i64","","",46,{"inputs":[{"name":"i64"}],"output":{"generics":["imagechanneldatatype"],"name":"option"}}],[11,"from_u64","","",46,{"inputs":[{"name":"u64"}],"output":{"generics":["imagechanneldatatype"],"name":"option"}}],[11,"from_i64","","",48,{"inputs":[{"name":"i64"}],"output":{"generics":["polling"],"name":"option"}}],[11,"from_u64","","",48,{"inputs":[{"name":"u64"}],"output":{"generics":["polling"],"name":"option"}}],[11,"from_i64","","",58,{"inputs":[{"name":"i64"}],"output":{"generics":["channeltype"],"name":"option"}}],[11,"from_u64","","",58,{"inputs":[{"name":"u64"}],"output":{"generics":["channeltype"],"name":"option"}}],[11,"from_i64","","",75,{"inputs":[{"name":"i64"}],"output":{"generics":["commandexecutionstatus"],"name":"option"}}],[11,"from_u64","","",75,{"inputs":[{"name":"u64"}],"output":{"generics":["commandexecutionstatus"],"name":"option"}}],[11,"from_i64","","",49,{"inputs":[{"name":"i64"}],"output":{"generics":["platforminfo"],"name":"option"}}],[11,"from_u64","","",49,{"inputs":[{"name":"u64"}],"output":{"generics":["platforminfo"],"name":"option"}}],[11,"from_i64","","",76,{"inputs":[{"name":"i64"}],"output":{"generics":["buffercreatetype"],"name":"option"}}],[11,"from_u64","","",76,{"inputs":[{"name":"u64"}],"output":{"generics":["buffercreatetype"],"name":"option"}}],[11,"from_i64","","",56,{"inputs":[{"name":"i64"}],"output":{"generics":["devicepartitionproperty"],"name":"option"}}],[11,"from_u64","","",56,{"inputs":[{"name":"u64"}],"output":{"generics":["devicepartitionproperty"],"name":"option"}}],[11,"from_i64","","",72,{"inputs":[{"name":"i64"}],"output":{"generics":["kernelworkgroupinfo"],"name":"option"}}],[11,"from_u64","","",72,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelworkgroupinfo"],"name":"option"}}],[11,"from_i64","","",68,{"inputs":[{"name":"i64"}],"output":{"generics":["kernelinfo"],"name":"option"}}],[11,"from_u64","","",68,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelinfo"],"name":"option"}}],[11,"from_i64","","",52,{"inputs":[{"name":"i64"}],"output":{"generics":["devicelocalmemtype"],"name":"option"}}],[11,"from_u64","","",52,{"inputs":[{"name":"u64"}],"output":{"generics":["devicelocalmemtype"],"name":"option"}}],[11,"from_i64","","",55,{"inputs":[{"name":"i64"}],"output":{"generics":["contextinfoorpropertiespointertype"],"name":"option"}}],[11,"from_u64","","",55,{"inputs":[{"name":"u64"}],"output":{"generics":["contextinfoorpropertiespointertype"],"name":"option"}}],[11,"from_i64","","",74,{"inputs":[{"name":"i64"}],"output":{"generics":["commandtype"],"name":"option"}}],[11,"from_u64","","",74,{"inputs":[{"name":"u64"}],"output":{"generics":["commandtype"],"name":"option"}}],[11,"from_i64","","",57,{"inputs":[{"name":"i64"}],"output":{"generics":["commandqueueinfo"],"name":"option"}}],[11,"from_u64","","",57,{"inputs":[{"name":"u64"}],"output":{"generics":["commandqueueinfo"],"name":"option"}}],[11,"from_i64","","",66,{"inputs":[{"name":"i64"}],"output":{"generics":["programbuildinfo"],"name":"option"}}],[11,"from_u64","","",66,{"inputs":[{"name":"u64"}],"output":{"generics":["programbuildinfo"],"name":"option"}}],[11,"from_i64","","",50,{"inputs":[{"name":"i64"}],"output":{"generics":["deviceinfo"],"name":"option"}}],[11,"from_u64","","",50,{"inputs":[{"name":"u64"}],"output":{"generics":["deviceinfo"],"name":"option"}}],[11,"from_i64","","",70,{"inputs":[{"name":"i64"}],"output":{"generics":["kernelargaddressqualifier"],"name":"option"}}],[11,"from_u64","","",70,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelargaddressqualifier"],"name":"option"}}],[11,"from_i64","","",71,{"inputs":[{"name":"i64"}],"output":{"generics":["kernelargaccessqualifier"],"name":"option"}}],[11,"from_u64","","",71,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelargaccessqualifier"],"name":"option"}}],[11,"from_i64","","",67,{"inputs":[{"name":"i64"}],"output":{"generics":["programbuildstatus"],"name":"option"}}],[11,"from_u64","","",67,{"inputs":[{"name":"u64"}],"output":{"generics":["programbuildstatus"],"name":"option"}}],[11,"from_i64","","",77,{"inputs":[{"name":"i64"}],"output":{"generics":["profilinginfo"],"name":"option"}}],[11,"from_u64","","",77,{"inputs":[{"name":"u64"}],"output":{"generics":["profilinginfo"],"name":"option"}}],[11,"from_i64","","",54,{"inputs":[{"name":"i64"}],"output":{"generics":["contextproperty"],"name":"option"}}],[11,"from_u64","","",54,{"inputs":[{"name":"u64"}],"output":{"generics":["contextproperty"],"name":"option"}}],[11,"from_i64","","",69,{"inputs":[{"name":"i64"}],"output":{"generics":["kernelarginfo"],"name":"option"}}],[11,"from_u64","","",69,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelarginfo"],"name":"option"}}],[11,"from_i64","","",65,{"inputs":[{"name":"i64"}],"output":{"generics":["programinfo"],"name":"option"}}],[11,"from_u64","","",65,{"inputs":[{"name":"u64"}],"output":{"generics":["programinfo"],"name":"option"}}],[11,"sub_assign","ocl::flags","Disables all flags enabled in the set.",97,null],[11,"sub_assign","","Disables all flags enabled in the set.",94,null],[11,"sub_assign","","Disables all flags enabled in the set.",99,null],[11,"sub_assign","","Disables all flags enabled in the set.",95,null],[11,"sub_assign","","Disables all flags enabled in the set.",103,null],[11,"sub_assign","","Disables all flags enabled in the set.",102,null],[11,"sub_assign","","Disables all flags enabled in the set.",98,null],[11,"sub_assign","","Disables all flags enabled in the set.",96,null],[11,"sub_assign","","Disables all flags enabled in the set.",101,null],[11,"sub_assign","","Disables all flags enabled in the set.",100,null],[11,"hash","","",94,null],[11,"hash","ocl::enums","",45,null],[11,"hash","","",51,null],[11,"hash","","",58,null],[11,"hash","ocl::flags","",97,null],[11,"hash","ocl::enums","",54,null],[11,"hash","","",61,null],[11,"hash","","",72,null],[11,"hash","","",49,null],[11,"hash","","",57,null],[11,"hash","","",52,null],[11,"hash","","",75,null],[11,"hash","","",71,null],[11,"hash","","",55,null],[11,"hash","ocl::flags","",103,null],[11,"hash","ocl::enums","",53,null],[11,"hash","","",64,null],[11,"hash","","",59,null],[11,"hash","ocl::flags","",102,null],[11,"hash","","",100,null],[11,"hash","ocl::enums","",67,null],[11,"hash","","",50,null],[11,"hash","ocl::flags","",98,null],[11,"hash","ocl::enums","",93,null],[11,"hash","","",60,null],[11,"hash","","",65,null],[11,"hash","","",74,null],[11,"hash","","",66,null],[11,"hash","ocl::flags","",95,null],[11,"hash","ocl::enums","",76,null],[11,"hash","","",62,null],[11,"hash","","",70,null],[11,"hash","","",68,null],[11,"hash","","",56,null],[11,"hash","","",48,null],[11,"hash","ocl::flags","",99,null],[11,"hash","ocl::enums","",73,null],[11,"hash","ocl::flags","",96,null],[11,"hash","","",101,null],[11,"hash","ocl::enums","",46,null],[11,"hash","","",69,null],[11,"hash","","",77,null],[11,"hash","","",47,null],[11,"hash","","",63,null],[11,"deref","ocl::prm","",106,null],[11,"deref","","",107,null],[11,"deref","","",108,null],[11,"deref","","",109,null],[11,"deref","","",110,null],[11,"deref","","",111,null],[11,"deref","","",112,null],[11,"deref","","",113,null],[11,"deref","","",114,null],[11,"deref","","",115,null],[11,"deref","","",116,null],[11,"deref","","",117,null],[11,"deref","","",118,null],[11,"deref","","",119,null],[11,"deref","","",120,null],[11,"deref","","",121,null],[11,"deref","","",122,null],[11,"deref","","",123,null],[11,"deref","","",124,null],[11,"deref","","",125,null],[11,"deref","","",126,null],[11,"deref","","",127,null],[11,"deref","","",128,null],[11,"deref","","",129,null],[11,"deref","","",130,null],[11,"deref","","",131,null],[11,"deref","","",132,null],[11,"deref","","",133,null],[11,"deref","","",134,null],[11,"deref","","",135,null],[11,"deref","","",136,null],[11,"deref","","",137,null],[11,"deref","","",138,null],[11,"deref","","",139,null],[11,"deref","","",140,null],[11,"deref","","",141,null],[11,"deref","","",142,null],[11,"deref","","",143,null],[11,"deref","","",144,null],[11,"deref","","",145,null],[11,"deref","","",146,null],[11,"deref","","",147,null],[11,"deref","","",148,null],[11,"deref","","",149,null],[11,"deref","","",150,null],[11,"deref","","",151,null],[11,"deref","","",152,null],[11,"deref","","",153,null],[11,"deref","","",154,null],[11,"deref","","",155,null],[11,"deref","","",156,null],[11,"deref","","",157,null],[11,"deref","","",158,null],[11,"deref","","",159,null],[11,"deref","","",160,null],[11,"deref","","",161,null],[11,"deref","","",162,null],[11,"deref","","",163,null],[11,"deref","","",164,null],[11,"deref","","",165,null],[11,"bitxor","","",157,null],[11,"bitxor","","",108,null],[11,"bitxor","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitxor","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitxor","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitxor","","",142,null],[11,"bitxor","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitxor","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitxor","","",163,null],[11,"bitxor","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitxor","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitxor","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitxor","","",121,null],[11,"bitxor","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitxor","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitxor","","",118,null],[11,"bitxor","","",146,null],[11,"bitxor","","",155,null],[11,"bitxor","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitxor","","",141,null],[11,"bitxor","","",131,null],[11,"bitxor","","",116,null],[11,"bitxor","","",154,null],[11,"bitxor","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitxor","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitxor","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitxor","","",147,null],[11,"bitxor","","",111,null],[11,"bitxor","","",107,null],[11,"bitxor","","",123,null],[11,"bitxor","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitxor","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitxor","","",109,null],[11,"bitxor","","",127,null],[11,"bitxor","","",162,null],[11,"bitxor","","",136,null],[11,"bitxor","","",110,null],[11,"bitxor","","",158,null],[11,"bitxor","","",122,null],[11,"bitxor","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitxor","","",149,null],[11,"bitxor","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitxor","","",135,null],[11,"bitxor","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitxor","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitxor","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitxor","","",119,null],[11,"bitxor","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitxor","","",137,null],[11,"bitxor","","",140,null],[11,"bitxor","","",160,null],[11,"bitxor","","",112,null],[11,"bitxor","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitxor","","",129,null],[11,"bitxor","","",124,null],[11,"bitxor","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitxor","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitxor","","",130,null],[11,"bitxor","","",132,null],[11,"bitxor","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitxor","","",114,null],[11,"bitxor","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitxor","","",125,null],[11,"bitxor","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitxor","","",161,null],[11,"bitxor","","",144,null],[11,"bitxor","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitxor","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitxor","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitxor","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitxor","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitxor","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitxor","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitxor","","",138,null],[11,"bitxor","","",113,null],[11,"bitxor","","",148,null],[11,"bitxor","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitxor","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitxor","","",165,null],[11,"bitxor","","",133,null],[11,"bitxor","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitxor","","",106,null],[11,"bitxor","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitxor","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitxor","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitxor","","",145,null],[11,"bitxor","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitxor","","",115,null],[11,"bitxor","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitxor","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitxor","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitxor","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitxor","","",143,null],[11,"bitxor","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitxor","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitxor","","",151,null],[11,"sum","","",145,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"sum","","",123,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"sum","","",164,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"sum","","",147,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"sum","","",127,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"sum","","",156,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"sum","","",107,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"sum","","",162,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"sum","","",116,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"sum","","",145,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"sum","","",149,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"sum","","",121,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"sum","","",106,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"sum","","",140,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"sum","","",124,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"sum","","",126,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"sum","","",151,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"sum","","",148,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"sum","","",131,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"sum","","",135,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"sum","","",136,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"sum","","",163,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"sum","","",132,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"sum","","",119,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"sum","","",127,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"sum","","",128,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"sum","","",118,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"sum","","",116,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"sum","","",147,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"sum","","",134,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"sum","","",160,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"sum","","",110,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"sum","","",141,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"sum","","",131,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"sum","","",165,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"sum","","",130,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"sum","","",154,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"sum","","",112,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"sum","","",110,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"sum","","",106,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"sum","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"sum","","",155,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"sum","","",150,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"sum","","",121,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"sum","","",128,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"sum","","",112,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"sum","","",140,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"sum","","",141,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"sum","","",125,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"sum","","",153,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"sum","","",139,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"sum","","",161,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"sum","","",124,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"sum","","",139,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"sum","","",160,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"sum","","",158,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"sum","","",133,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"sum","","",138,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"sum","","",163,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"sum","","",151,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"sum","","",120,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"sum","","",157,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"sum","","",164,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"sum","","",159,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"sum","","",108,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"sum","","",109,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"sum","","",114,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"sum","","",134,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"sum","","",130,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"sum","","",144,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"sum","","",114,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"sum","","",161,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"sum","","",144,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"sum","","",158,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"sum","","",129,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"sum","","",126,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"sum","","",107,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"sum","","",155,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"sum","","",113,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"sum","","",115,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"sum","","",146,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"sum","","",132,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"sum","","",111,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"sum","","",152,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"sum","","",159,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"sum","","",115,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"sum","","",122,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"sum","","",153,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"sum","","",157,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"sum","","",165,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"sum","","",137,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"sum","","",133,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"sum","","",113,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"sum","","",135,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"sum","","",129,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"sum","","",162,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"sum","","",108,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"sum","","",148,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"sum","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"sum","","",122,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"sum","","",111,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"sum","","",138,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"sum","","",156,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"sum","","",119,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"sum","","",137,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"sum","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"sum","","",118,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"sum","","",109,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"sum","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"sum","","",149,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"sum","","",120,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"sum","","",125,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"sum","","",123,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"sum","","",146,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"sum","","",142,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"sum","","",142,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"sum","","",150,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"sum","","",152,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"sum","","",136,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"sum","","",154,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"div_assign","","",139,null],[11,"div_assign","","",155,null],[11,"div_assign","","",111,null],[11,"div_assign","","",134,null],[11,"div_assign","","",127,null],[11,"div_assign","","",126,null],[11,"div_assign","","",116,null],[11,"div_assign","","",153,null],[11,"div_assign","","",135,null],[11,"div_assign","","",159,null],[11,"div_assign","","",138,null],[11,"div_assign","","",165,null],[11,"div_assign","","",115,null],[11,"div_assign","","",121,null],[11,"div_assign","","",152,null],[11,"div_assign","","",151,null],[11,"div_assign","","",129,null],[11,"div_assign","","",106,null],[11,"div_assign","","",147,null],[11,"div_assign","","",161,null],[11,"div_assign","","",124,null],[11,"div_assign","","",113,null],[11,"div_assign","","",136,null],[11,"div_assign","","",117,null],[11,"div_assign","","",150,null],[11,"div_assign","","",128,null],[11,"div_assign","","",137,null],[11,"div_assign","","",145,null],[11,"div_assign","","",144,null],[11,"div_assign","","",112,null],[11,"div_assign","","",149,null],[11,"div_assign","","",114,null],[11,"div_assign","","",160,null],[11,"div_assign","","",148,null],[11,"div_assign","","",132,null],[11,"div_assign","","",141,null],[11,"div_assign","","",107,null],[11,"div_assign","","",123,null],[11,"div_assign","","",146,null],[11,"div_assign","","",118,null],[11,"div_assign","","",163,null],[11,"div_assign","","",110,null],[11,"div_assign","","",158,null],[11,"div_assign","","",125,null],[11,"div_assign","","",130,null],[11,"div_assign","","",109,null],[11,"div_assign","","",164,null],[11,"div_assign","","",162,null],[11,"div_assign","","",154,null],[11,"div_assign","","",143,null],[11,"div_assign","","",157,null],[11,"div_assign","","",142,null],[11,"div_assign","","",131,null],[11,"div_assign","","",140,null],[11,"div_assign","","",156,null],[11,"div_assign","","",133,null],[11,"div_assign","","",119,null],[11,"div_assign","","",122,null],[11,"div_assign","","",120,null],[11,"div_assign","","",108,null],[11,"partial_cmp","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"le","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"gt","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"ge","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"le","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"gt","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"ge","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"le","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"gt","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"ge","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"le","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"gt","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"ge","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"le","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"gt","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"ge","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"le","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"gt","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"ge","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"le","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"gt","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"ge","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"le","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"gt","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"ge","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"le","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"gt","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"ge","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"le","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"gt","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"ge","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"le","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"gt","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"ge","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"le","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"gt","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"ge","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"le","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"gt","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"ge","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"le","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"gt","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"ge","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"le","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"gt","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"ge","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"le","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"gt","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"ge","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"le","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"gt","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"ge","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"le","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"gt","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"ge","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"le","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"gt","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"ge","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"le","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"gt","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"ge","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"le","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"gt","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"ge","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"le","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"gt","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"ge","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"le","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"gt","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"ge","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"le","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"gt","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"ge","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"le","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"gt","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"ge","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"le","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"gt","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"ge","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"le","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"gt","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"ge","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"le","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"gt","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"ge","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"le","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"gt","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"ge","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"le","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"gt","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"ge","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"le","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"gt","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"ge","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"le","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"gt","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"ge","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"le","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"gt","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"ge","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"le","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"gt","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"ge","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"le","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"gt","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"ge","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"le","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"gt","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"ge","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"le","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"gt","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"ge","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"le","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"gt","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"ge","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"not","","",142,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"not","","",151,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"not","","",119,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"not","","",161,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"not","","",146,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"not","","",125,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"not","","",132,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"not","","",127,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"not","","",145,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"not","","",107,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"not","","",154,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"not","","",155,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"not","","",147,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"not","","",163,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"not","","",111,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"not","","",144,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"not","","",129,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"not","","",108,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"not","","",149,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"not","","",133,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"not","","",109,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"not","","",124,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"not","","",137,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"not","","",165,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"not","","",113,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"not","","",112,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"not","","",110,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"not","","",135,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"not","","",138,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"not","","",115,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"not","","",136,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"not","","",148,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"not","","",162,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"not","","",131,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"not","","",158,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"not","","",130,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"not","","",121,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"not","","",116,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"not","","",140,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"not","","",157,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"not","","",114,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"not","","",106,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"not","","",160,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"not","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"not","","",141,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"not","","",122,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"not","","",123,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"not","","",118,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"bitxor_assign","","",135,null],[11,"bitxor_assign","","",144,null],[11,"bitxor_assign","","",154,null],[11,"bitxor_assign","","",162,null],[11,"bitxor_assign","","",107,null],[11,"bitxor_assign","","",160,null],[11,"bitxor_assign","","",163,null],[11,"bitxor_assign","","",161,null],[11,"bitxor_assign","","",165,null],[11,"bitxor_assign","","",129,null],[11,"bitxor_assign","","",123,null],[11,"bitxor_assign","","",136,null],[11,"bitxor_assign","","",145,null],[11,"bitxor_assign","","",138,null],[11,"bitxor_assign","","",131,null],[11,"bitxor_assign","","",155,null],[11,"bitxor_assign","","",116,null],[11,"bitxor_assign","","",125,null],[11,"bitxor_assign","","",133,null],[11,"bitxor_assign","","",137,null],[11,"bitxor_assign","","",151,null],[11,"bitxor_assign","","",124,null],[11,"bitxor_assign","","",109,null],[11,"bitxor_assign","","",130,null],[11,"bitxor_assign","","",158,null],[11,"bitxor_assign","","",122,null],[11,"bitxor_assign","","",127,null],[11,"bitxor_assign","","",146,null],[11,"bitxor_assign","","",108,null],[11,"bitxor_assign","","",157,null],[11,"bitxor_assign","","",132,null],[11,"bitxor_assign","","",113,null],[11,"bitxor_assign","","",119,null],[11,"bitxor_assign","","",121,null],[11,"bitxor_assign","","",115,null],[11,"bitxor_assign","","",148,null],[11,"bitxor_assign","","",147,null],[11,"bitxor_assign","","",111,null],[11,"bitxor_assign","","",106,null],[11,"bitxor_assign","","",142,null],[11,"bitxor_assign","","",118,null],[11,"bitxor_assign","","",112,null],[11,"bitxor_assign","","",140,null],[11,"bitxor_assign","","",114,null],[11,"bitxor_assign","","",110,null],[11,"bitxor_assign","","",141,null],[11,"bitxor_assign","","",143,null],[11,"bitxor_assign","","",149,null],[11,"div","","",107,null],[11,"div","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"div","","",142,null],[11,"div","","",115,null],[11,"div","","",155,null],[11,"div","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"div","","",137,null],[11,"div","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"div","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"div","","",128,null],[11,"div","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"div","","",147,null],[11,"div","","",114,null],[11,"div","","",109,null],[11,"div","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"div","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"div","","",143,null],[11,"div","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"div","","",113,null],[11,"div","","",161,null],[11,"div","","",124,null],[11,"div","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"div","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"div","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"div","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"div","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"div","","",126,null],[11,"div","","",118,null],[11,"div","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"div","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"div","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"div","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"div","","",165,null],[11,"div","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"div","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"div","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"div","","",158,null],[11,"div","","",164,null],[11,"div","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"div","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"div","","",160,null],[11,"div","","",133,null],[11,"div","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"div","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"div","","",148,null],[11,"div","","",112,null],[11,"div","","",152,null],[11,"div","","",131,null],[11,"div","","",116,null],[11,"div","","",111,null],[11,"div","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"div","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"div","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"div","","",141,null],[11,"div","","",121,null],[11,"div","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"div","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"div","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"div","","",151,null],[11,"div","","",123,null],[11,"div","","",136,null],[11,"div","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"div","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"div","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"div","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"div","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"div","","",140,null],[11,"div","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"div","","",122,null],[11,"div","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"div","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"div","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"div","","",144,null],[11,"div","","",153,null],[11,"div","","",120,null],[11,"div","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"div","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"div","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"div","","",157,null],[11,"div","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"div","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"div","","",117,null],[11,"div","","",129,null],[11,"div","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"div","","",146,null],[11,"div","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"div","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"div","","",110,null],[11,"div","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"div","","",149,null],[11,"div","","",162,null],[11,"div","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"div","","",127,null],[11,"div","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"div","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"div","","",134,null],[11,"div","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"div","","",150,null],[11,"div","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"div","","",154,null],[11,"div","","",119,null],[11,"div","","",138,null],[11,"div","","",156,null],[11,"div","","",145,null],[11,"div","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"div","","",132,null],[11,"div","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"div","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"div","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"div","","",139,null],[11,"div","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"div","","",159,null],[11,"div","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"div","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"div","","",135,null],[11,"div","","",125,null],[11,"div","","",108,null],[11,"div","","",130,null],[11,"div","","",163,null],[11,"div","","",106,null],[11,"bitor_assign","","",138,null],[11,"bitor_assign","","",163,null],[11,"bitor_assign","","",130,null],[11,"bitor_assign","","",125,null],[11,"bitor_assign","","",129,null],[11,"bitor_assign","","",112,null],[11,"bitor_assign","","",158,null],[11,"bitor_assign","","",149,null],[11,"bitor_assign","","",142,null],[11,"bitor_assign","","",144,null],[11,"bitor_assign","","",111,null],[11,"bitor_assign","","",113,null],[11,"bitor_assign","","",161,null],[11,"bitor_assign","","",119,null],[11,"bitor_assign","","",146,null],[11,"bitor_assign","","",143,null],[11,"bitor_assign","","",106,null],[11,"bitor_assign","","",165,null],[11,"bitor_assign","","",132,null],[11,"bitor_assign","","",147,null],[11,"bitor_assign","","",116,null],[11,"bitor_assign","","",114,null],[11,"bitor_assign","","",121,null],[11,"bitor_assign","","",122,null],[11,"bitor_assign","","",136,null],[11,"bitor_assign","","",115,null],[11,"bitor_assign","","",160,null],[11,"bitor_assign","","",141,null],[11,"bitor_assign","","",108,null],[11,"bitor_assign","","",151,null],[11,"bitor_assign","","",133,null],[11,"bitor_assign","","",157,null],[11,"bitor_assign","","",109,null],[11,"bitor_assign","","",162,null],[11,"bitor_assign","","",127,null],[11,"bitor_assign","","",140,null],[11,"bitor_assign","","",107,null],[11,"bitor_assign","","",155,null],[11,"bitor_assign","","",148,null],[11,"bitor_assign","","",124,null],[11,"bitor_assign","","",131,null],[11,"bitor_assign","","",154,null],[11,"bitor_assign","","",135,null],[11,"bitor_assign","","",118,null],[11,"bitor_assign","","",137,null],[11,"bitor_assign","","",110,null],[11,"bitor_assign","","",145,null],[11,"bitor_assign","","",123,null],[11,"default","","",147,{"inputs":[],"output":{"name":"uchar2"}}],[11,"default","","",137,{"inputs":[],"output":{"name":"uint3"}}],[11,"default","","",155,{"inputs":[],"output":{"name":"uchar16"}}],[11,"default","","",154,{"inputs":[],"output":{"name":"short"}}],[11,"default","","",123,{"inputs":[],"output":{"name":"ushort16"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"int"}}],[11,"default","","",129,{"inputs":[],"output":{"name":"uint4"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"long4"}}],[11,"default","","",138,{"inputs":[],"output":{"name":"ushort8"}}],[11,"default","","",148,{"inputs":[],"output":{"name":"short4"}}],[11,"default","","",132,{"inputs":[],"output":{"name":"char4"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"uint2"}}],[11,"default","","",165,{"inputs":[],"output":{"name":"ulong16"}}],[11,"default","","",119,{"inputs":[],"output":{"name":"char16"}}],[11,"default","","",134,{"inputs":[],"output":{"name":"double16"}}],[11,"default","","",127,{"inputs":[],"output":{"name":"uchar8"}}],[11,"default","","",153,{"inputs":[],"output":{"name":"float"}}],[11,"default","","",117,{"inputs":[],"output":{"name":"double2"}}],[11,"default","","",145,{"inputs":[],"output":{"name":"short3"}}],[11,"default","","",151,{"inputs":[],"output":{"name":"ushort4"}}],[11,"default","","",156,{"inputs":[],"output":{"name":"float8"}}],[11,"default","","",157,{"inputs":[],"output":{"name":"char3"}}],[11,"default","","",136,{"inputs":[],"output":{"name":"long2"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"int16"}}],[11,"default","","",115,{"inputs":[],"output":{"name":"ulong2"}}],[11,"default","","",125,{"inputs":[],"output":{"name":"ushort"}}],[11,"default","","",159,{"inputs":[],"output":{"name":"float4"}}],[11,"default","","",124,{"inputs":[],"output":{"name":"char2"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"float2"}}],[11,"default","","",133,{"inputs":[],"output":{"name":"uchar3"}}],[11,"default","","",108,{"inputs":[],"output":{"name":"long3"}}],[11,"default","","",140,{"inputs":[],"output":{"name":"ulong8"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"long8"}}],[11,"default","","",114,{"inputs":[],"output":{"name":"uchar4"}}],[11,"default","","",139,{"inputs":[],"output":{"name":"float16"}}],[11,"default","","",135,{"inputs":[],"output":{"name":"int4"}}],[11,"default","","",110,{"inputs":[],"output":{"name":"short2"}}],[11,"default","","",121,{"inputs":[],"output":{"name":"uint16"}}],[11,"default","","",109,{"inputs":[],"output":{"name":"ulong3"}}],[11,"default","","",116,{"inputs":[],"output":{"name":"ushort3"}}],[11,"default","","",130,{"inputs":[],"output":{"name":"ushort2"}}],[11,"default","","",144,{"inputs":[],"output":{"name":"short8"}}],[11,"default","","",111,{"inputs":[],"output":{"name":"uchar"}}],[11,"default","","",161,{"inputs":[],"output":{"name":"int2"}}],[11,"default","","",164,{"inputs":[],"output":{"name":"double"}}],[11,"default","","",141,{"inputs":[],"output":{"name":"char"}}],[11,"default","","",152,{"inputs":[],"output":{"name":"float3"}}],[11,"default","","",131,{"inputs":[],"output":{"name":"long16"}}],[11,"default","","",113,{"inputs":[],"output":{"name":"ulong"}}],[11,"default","","",128,{"inputs":[],"output":{"name":"double4"}}],[11,"default","","",122,{"inputs":[],"output":{"name":"long"}}],[11,"default","","",143,{"inputs":[],"output":{"name":"uint"}}],[11,"default","","",142,{"inputs":[],"output":{"name":"int8"}}],[11,"default","","",162,{"inputs":[],"output":{"name":"char8"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"short16"}}],[11,"default","","",120,{"inputs":[],"output":{"name":"double3"}}],[11,"default","","",146,{"inputs":[],"output":{"name":"ulong4"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"double8"}}],[11,"default","","",158,{"inputs":[],"output":{"name":"uint8"}}],[11,"default","","",160,{"inputs":[],"output":{"name":"int3"}}],[11,"shl_assign","","",125,null],[11,"shl_assign","","",155,null],[11,"shl_assign","","",113,null],[11,"shl_assign","","",160,null],[11,"shl_assign","","",111,null],[11,"shl_assign","","",127,null],[11,"shl_assign","","",106,null],[11,"shl_assign","","",123,null],[11,"shl_assign","","",110,null],[11,"shl_assign","","",162,null],[11,"shl_assign","","",151,null],[11,"shl_assign","","",149,null],[11,"shl_assign","","",136,null],[11,"shl_assign","","",146,null],[11,"shl_assign","","",138,null],[11,"shl_assign","","",112,null],[11,"shl_assign","","",132,null],[11,"shl_assign","","",131,null],[11,"shl_assign","","",163,null],[11,"shl_assign","","",140,null],[11,"shl_assign","","",158,null],[11,"shl_assign","","",130,null],[11,"shl_assign","","",129,null],[11,"shl_assign","","",147,null],[11,"shl_assign","","",165,null],[11,"shl_assign","","",145,null],[11,"shl_assign","","",124,null],[11,"shl_assign","","",161,null],[11,"shl_assign","","",121,null],[11,"shl_assign","","",115,null],[11,"shl_assign","","",137,null],[11,"shl_assign","","",114,null],[11,"shl_assign","","",109,null],[11,"shl_assign","","",144,null],[11,"shl_assign","","",119,null],[11,"shl_assign","","",122,null],[11,"shl_assign","","",118,null],[11,"shl_assign","","",143,null],[11,"shl_assign","","",133,null],[11,"shl_assign","","",142,null],[11,"shl_assign","","",116,null],[11,"shl_assign","","",135,null],[11,"shl_assign","","",148,null],[11,"shl_assign","","",154,null],[11,"shl_assign","","",157,null],[11,"shl_assign","","",107,null],[11,"shl_assign","","",141,null],[11,"shl_assign","","",108,null],[11,"bitand","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitand","","",114,null],[11,"bitand","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitand","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitand","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitand","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitand","","",112,null],[11,"bitand","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitand","","",149,null],[11,"bitand","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitand","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitand","","",135,null],[11,"bitand","","",136,null],[11,"bitand","","",148,null],[11,"bitand","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitand","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitand","","",140,null],[11,"bitand","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitand","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitand","","",107,null],[11,"bitand","","",142,null],[11,"bitand","","",147,null],[11,"bitand","","",116,null],[11,"bitand","","",155,null],[11,"bitand","","",137,null],[11,"bitand","","",143,null],[11,"bitand","","",157,null],[11,"bitand","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitand","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitand","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitand","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitand","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitand","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitand","","",122,null],[11,"bitand","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitand","","",131,null],[11,"bitand","","",119,null],[11,"bitand","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitand","","",129,null],[11,"bitand","","",160,null],[11,"bitand","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitand","","",108,null],[11,"bitand","","",141,null],[11,"bitand","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitand","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitand","","",132,null],[11,"bitand","","",144,null],[11,"bitand","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitand","","",151,null],[11,"bitand","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitand","","",163,null],[11,"bitand","","",161,null],[11,"bitand","","",121,null],[11,"bitand","","",130,null],[11,"bitand","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitand","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitand","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitand","","",110,null],[11,"bitand","","",123,null],[11,"bitand","","",162,null],[11,"bitand","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitand","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitand","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitand","","",154,null],[11,"bitand","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitand","","",125,null],[11,"bitand","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitand","","",133,null],[11,"bitand","","",165,null],[11,"bitand","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitand","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitand","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitand","","",158,null],[11,"bitand","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitand","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitand","","",106,null],[11,"bitand","","",115,null],[11,"bitand","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitand","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitand","","",118,null],[11,"bitand","","",113,null],[11,"bitand","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitand","","",109,null],[11,"bitand","","",111,null],[11,"bitand","","",146,null],[11,"bitand","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitand","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitand","","",145,null],[11,"bitand","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitand","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitand","","",124,null],[11,"bitand","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitand","","",127,null],[11,"bitand","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitand","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitand","","",138,null],[11,"neg","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"neg","","",131,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"neg","","",140,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"neg","","",111,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"neg","","",130,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"neg","","",160,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"neg","","",132,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"neg","","",120,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"neg","","",157,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"neg","","",134,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}],[11,"neg","","",149,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"neg","","",153,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"neg","","",117,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"neg","","",108,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"neg","","",107,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"neg","","",151,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"neg","","",115,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"neg","","",109,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"neg","","",139,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"neg","","",154,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"neg","","",156,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"neg","","",161,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"neg","","",138,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"neg","","",129,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"neg","","",114,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"neg","","",123,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"neg","","",128,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"neg","","",135,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"neg","","",119,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"neg","","",158,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"neg","","",113,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"neg","","",146,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"neg","","",133,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"neg","","",148,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"neg","","",137,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"neg","","",152,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"neg","","",144,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"neg","","",124,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"neg","","",125,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"neg","","",159,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"neg","","",155,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"neg","","",127,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"neg","","",118,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"neg","","",116,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"neg","","",145,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"neg","","",106,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"neg","","",121,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"neg","","",142,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"neg","","",112,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"neg","","",122,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"neg","","",150,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"neg","","",162,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"neg","","",136,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"neg","","",126,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"neg","","",163,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"neg","","",147,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"neg","","",141,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"neg","","",164,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"neg","","",165,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"neg","","",110,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"sub","","",151,null],[11,"sub","","",106,null],[11,"sub","","",163,null],[11,"sub","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"sub","","",135,null],[11,"sub","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"sub","","",139,null],[11,"sub","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"sub","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"sub","","",162,null],[11,"sub","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"sub","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"sub","","",165,null],[11,"sub","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"sub","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"sub","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"sub","","",140,null],[11,"sub","","",123,null],[11,"sub","","",154,null],[11,"sub","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"sub","","",149,null],[11,"sub","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"sub","","",111,null],[11,"sub","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"sub","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"sub","","",116,null],[11,"sub","","",127,null],[11,"sub","","",108,null],[11,"sub","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"sub","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"sub","","",114,null],[11,"sub","","",112,null],[11,"sub","","",146,null],[11,"sub","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"sub","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"sub","","",107,null],[11,"sub","","",124,null],[11,"sub","","",160,null],[11,"sub","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"sub","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"sub","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"sub","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"sub","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"sub","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"sub","","",144,null],[11,"sub","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"sub","","",155,null],[11,"sub","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"sub","","",130,null],[11,"sub","","",119,null],[11,"sub","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"sub","","",115,null],[11,"sub","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"sub","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"sub","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"sub","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"sub","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"sub","","",129,null],[11,"sub","","",110,null],[11,"sub","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"sub","","",126,null],[11,"sub","","",156,null],[11,"sub","","",150,null],[11,"sub","","",157,null],[11,"sub","","",131,null],[11,"sub","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"sub","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"sub","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"sub","","",153,null],[11,"sub","","",143,null],[11,"sub","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"sub","","",120,null],[11,"sub","","",138,null],[11,"sub","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"sub","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"sub","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"sub","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"sub","","",141,null],[11,"sub","","",132,null],[11,"sub","","",147,null],[11,"sub","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"sub","","",136,null],[11,"sub","","",158,null],[11,"sub","","",121,null],[11,"sub","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"sub","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"sub","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"sub","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"sub","","",152,null],[11,"sub","","",133,null],[11,"sub","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"sub","","",164,null],[11,"sub","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"sub","","",145,null],[11,"sub","","",122,null],[11,"sub","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"sub","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"sub","","",159,null],[11,"sub","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"sub","","",161,null],[11,"sub","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"sub","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"sub","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"sub","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"sub","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"sub","","",118,null],[11,"sub","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"sub","","",137,null],[11,"sub","","",142,null],[11,"sub","","",125,null],[11,"sub","","",134,null],[11,"sub","","",148,null],[11,"sub","","",128,null],[11,"sub","","",109,null],[11,"sub","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"sub","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"sub","","",113,null],[11,"sub","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"sub","","",117,null],[11,"sub","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"deref_mut","","",154,null],[11,"deref_mut","","",108,null],[11,"deref_mut","","",110,null],[11,"deref_mut","","",137,null],[11,"deref_mut","","",158,null],[11,"deref_mut","","",132,null],[11,"deref_mut","","",123,null],[11,"deref_mut","","",164,null],[11,"deref_mut","","",162,null],[11,"deref_mut","","",129,null],[11,"deref_mut","","",111,null],[11,"deref_mut","","",134,null],[11,"deref_mut","","",150,null],[11,"deref_mut","","",107,null],[11,"deref_mut","","",106,null],[11,"deref_mut","","",118,null],[11,"deref_mut","","",144,null],[11,"deref_mut","","",151,null],[11,"deref_mut","","",125,null],[11,"deref_mut","","",133,null],[11,"deref_mut","","",131,null],[11,"deref_mut","","",138,null],[11,"deref_mut","","",140,null],[11,"deref_mut","","",155,null],[11,"deref_mut","","",114,null],[11,"deref_mut","","",148,null],[11,"deref_mut","","",112,null],[11,"deref_mut","","",160,null],[11,"deref_mut","","",119,null],[11,"deref_mut","","",128,null],[11,"deref_mut","","",122,null],[11,"deref_mut","","",127,null],[11,"deref_mut","","",163,null],[11,"deref_mut","","",153,null],[11,"deref_mut","","",115,null],[11,"deref_mut","","",165,null],[11,"deref_mut","","",130,null],[11,"deref_mut","","",142,null],[11,"deref_mut","","",147,null],[11,"deref_mut","","",116,null],[11,"deref_mut","","",120,null],[11,"deref_mut","","",161,null],[11,"deref_mut","","",146,null],[11,"deref_mut","","",143,null],[11,"deref_mut","","",117,null],[11,"deref_mut","","",139,null],[11,"deref_mut","","",141,null],[11,"deref_mut","","",145,null],[11,"deref_mut","","",159,null],[11,"deref_mut","","",121,null],[11,"deref_mut","","",126,null],[11,"deref_mut","","",135,null],[11,"deref_mut","","",152,null],[11,"deref_mut","","",149,null],[11,"deref_mut","","",124,null],[11,"deref_mut","","",113,null],[11,"deref_mut","","",156,null],[11,"deref_mut","","",157,null],[11,"deref_mut","","",109,null],[11,"deref_mut","","",136,null],[11,"shr","","",113,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shr","","",165,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shr","","",157,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shr","","",154,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shr","","",119,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shr","","",131,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shr","","",135,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shr","","",127,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shr","","",148,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shr","","",149,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shr","","",107,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shr","","",115,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"shr","","",137,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shr","","",114,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shr","","",145,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shr","","",118,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shr","","",138,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shr","","",160,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shr","","",132,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shr","","",129,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shr","","",136,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shr","","",158,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shr","","",142,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shr","","",112,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shr","","",130,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shr","","",140,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shr","","",146,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shr","","",124,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shr","","",163,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shr","","",108,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shr","","",162,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shr","","",109,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shr","","",111,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shr","","",151,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shr","","",116,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shr","","",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shr","","",147,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shr","","",144,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shr","","",122,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shr","","",161,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shr","","",141,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shr","","",110,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shr","","",143,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shr","","",125,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shr","","",133,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shr","","",155,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shr","","",123,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shr","","",106,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"product","","",162,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",136,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",114,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",129,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",109,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",158,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",157,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",132,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",132,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",111,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",159,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",126,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",137,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",142,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",112,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",109,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",157,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",110,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",163,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"product","","",135,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",126,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",150,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",133,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",165,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",156,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",145,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",115,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",150,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",164,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",129,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",125,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",131,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",110,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",161,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",152,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",154,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",119,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",159,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",144,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",160,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",138,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",116,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",128,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",107,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",128,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",141,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",140,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",153,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",134,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",139,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",155,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",148,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",121,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",108,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",114,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",124,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",125,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",106,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",140,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",131,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",115,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",148,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",111,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",119,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",134,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",124,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",149,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",153,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",155,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",151,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",107,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",122,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",144,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",112,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",164,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",158,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",133,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",147,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",135,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",139,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",127,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",118,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",108,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",116,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",141,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",137,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",146,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",156,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",160,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",118,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",161,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",142,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",151,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",147,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",113,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",136,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",130,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",162,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",138,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",146,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",123,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",113,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",127,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",130,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",121,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",122,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",152,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",106,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",165,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",154,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",149,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",145,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",120,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",120,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",123,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",163,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"mul","","",107,null],[11,"mul","","",161,null],[11,"mul","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"mul","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"mul","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"mul","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"mul","","",140,null],[11,"mul","","",123,null],[11,"mul","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"mul","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"mul","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"mul","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"mul","","",130,null],[11,"mul","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"mul","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"mul","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"mul","","",149,null],[11,"mul","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"mul","","",121,null],[11,"mul","","",124,null],[11,"mul","","",122,null],[11,"mul","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"mul","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"mul","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"mul","","",119,null],[11,"mul","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"mul","","",128,null],[11,"mul","","",125,null],[11,"mul","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"mul","","",110,null],[11,"mul","","",120,null],[11,"mul","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"mul","","",111,null],[11,"mul","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"mul","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"mul","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"mul","","",134,null],[11,"mul","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"mul","","",114,null],[11,"mul","","",127,null],[11,"mul","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"mul","","",155,null],[11,"mul","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"mul","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"mul","","",118,null],[11,"mul","","",159,null],[11,"mul","","",136,null],[11,"mul","","",126,null],[11,"mul","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"mul","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"mul","","",141,null],[11,"mul","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"mul","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"mul","","",135,null],[11,"mul","","",160,null],[11,"mul","","",137,null],[11,"mul","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"mul","","",162,null],[11,"mul","","",148,null],[11,"mul","","",154,null],[11,"mul","","",139,null],[11,"mul","","",150,null],[11,"mul","","",144,null],[11,"mul","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"mul","","",146,null],[11,"mul","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"mul","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"mul","","",129,null],[11,"mul","","",131,null],[11,"mul","","",151,null],[11,"mul","","",133,null],[11,"mul","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"mul","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"mul","","",163,null],[11,"mul","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"mul","","",117,null],[11,"mul","","",164,null],[11,"mul","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"mul","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"mul","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"mul","","",108,null],[11,"mul","","",109,null],[11,"mul","","",165,null],[11,"mul","","",112,null],[11,"mul","","",115,null],[11,"mul","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"mul","","",147,null],[11,"mul","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"mul","","",152,null],[11,"mul","","",142,null],[11,"mul","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"mul","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"mul","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"mul","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"mul","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"mul","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"mul","","",157,null],[11,"mul","","",113,null],[11,"mul","","",145,null],[11,"mul","","",106,null],[11,"mul","","",116,null],[11,"mul","","",153,null],[11,"mul","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"mul","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"mul","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"mul","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"mul","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"mul","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"mul","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"mul","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"mul","","",156,null],[11,"mul","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"mul","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"mul","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"mul","","",158,null],[11,"mul","","",143,null],[11,"mul","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"mul","","",132,null],[11,"mul","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"mul","","",138,null],[11,"rem_assign","","",153,null],[11,"rem_assign","","",142,null],[11,"rem_assign","","",109,null],[11,"rem_assign","","",116,null],[11,"rem_assign","","",133,null],[11,"rem_assign","","",163,null],[11,"rem_assign","","",149,null],[11,"rem_assign","","",134,null],[11,"rem_assign","","",128,null],[11,"rem_assign","","",150,null],[11,"rem_assign","","",160,null],[11,"rem_assign","","",143,null],[11,"rem_assign","","",117,null],[11,"rem_assign","","",120,null],[11,"rem_assign","","",146,null],[11,"rem_assign","","",137,null],[11,"rem_assign","","",139,null],[11,"rem_assign","","",164,null],[11,"rem_assign","","",127,null],[11,"rem_assign","","",135,null],[11,"rem_assign","","",124,null],[11,"rem_assign","","",130,null],[11,"rem_assign","","",136,null],[11,"rem_assign","","",126,null],[11,"rem_assign","","",144,null],[11,"rem_assign","","",125,null],[11,"rem_assign","","",113,null],[11,"rem_assign","","",122,null],[11,"rem_assign","","",110,null],[11,"rem_assign","","",147,null],[11,"rem_assign","","",107,null],[11,"rem_assign","","",145,null],[11,"rem_assign","","",131,null],[11,"rem_assign","","",158,null],[11,"rem_assign","","",118,null],[11,"rem_assign","","",161,null],[11,"rem_assign","","",138,null],[11,"rem_assign","","",148,null],[11,"rem_assign","","",112,null],[11,"rem_assign","","",154,null],[11,"rem_assign","","",114,null],[11,"rem_assign","","",108,null],[11,"rem_assign","","",129,null],[11,"rem_assign","","",111,null],[11,"rem_assign","","",159,null],[11,"rem_assign","","",115,null],[11,"rem_assign","","",151,null],[11,"rem_assign","","",157,null],[11,"rem_assign","","",123,null],[11,"rem_assign","","",156,null],[11,"rem_assign","","",152,null],[11,"rem_assign","","",106,null],[11,"rem_assign","","",119,null],[11,"rem_assign","","",165,null],[11,"rem_assign","","",121,null],[11,"rem_assign","","",141,null],[11,"rem_assign","","",162,null],[11,"rem_assign","","",155,null],[11,"rem_assign","","",132,null],[11,"rem_assign","","",140,null],[11,"cmp","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"ordering"}}],[11,"cmp","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"ordering"}}],[11,"cmp","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"ordering"}}],[11,"cmp","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"ordering"}}],[11,"cmp","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"ordering"}}],[11,"cmp","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"ordering"}}],[11,"cmp","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"ordering"}}],[11,"cmp","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"ordering"}}],[11,"cmp","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ordering"}}],[11,"cmp","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"ordering"}}],[11,"cmp","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ordering"}}],[11,"cmp","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ordering"}}],[11,"cmp","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"cmp","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"ordering"}}],[11,"cmp","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"ordering"}}],[11,"cmp","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"ordering"}}],[11,"cmp","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"ordering"}}],[11,"cmp","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"ordering"}}],[11,"cmp","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"ordering"}}],[11,"cmp","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"ordering"}}],[11,"cmp","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ordering"}}],[11,"cmp","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"ordering"}}],[11,"cmp","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"ordering"}}],[11,"cmp","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ordering"}}],[11,"cmp","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"ordering"}}],[11,"cmp","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"ordering"}}],[11,"cmp","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"ordering"}}],[11,"cmp","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"ordering"}}],[11,"cmp","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ordering"}}],[11,"cmp","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"ordering"}}],[11,"cmp","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"ordering"}}],[11,"cmp","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"ordering"}}],[11,"cmp","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"ordering"}}],[11,"cmp","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ordering"}}],[11,"cmp","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"ordering"}}],[11,"cmp","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"ordering"}}],[11,"cmp","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"ordering"}}],[11,"cmp","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ordering"}}],[11,"cmp","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"ordering"}}],[11,"cmp","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ordering"}}],[11,"cmp","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"cmp","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"ordering"}}],[11,"cmp","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ordering"}}],[11,"cmp","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"ordering"}}],[11,"cmp","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ordering"}}],[11,"cmp","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"ordering"}}],[11,"cmp","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"ordering"}}],[11,"cmp","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ordering"}}],[11,"add_assign","","",118,null],[11,"add_assign","","",108,null],[11,"add_assign","","",139,null],[11,"add_assign","","",161,null],[11,"add_assign","","",156,null],[11,"add_assign","","",165,null],[11,"add_assign","","",129,null],[11,"add_assign","","",152,null],[11,"add_assign","","",109,null],[11,"add_assign","","",141,null],[11,"add_assign","","",124,null],[11,"add_assign","","",126,null],[11,"add_assign","","",136,null],[11,"add_assign","","",143,null],[11,"add_assign","","",138,null],[11,"add_assign","","",146,null],[11,"add_assign","","",114,null],[11,"add_assign","","",107,null],[11,"add_assign","","",123,null],[11,"add_assign","","",130,null],[11,"add_assign","","",151,null],[11,"add_assign","","",147,null],[11,"add_assign","","",160,null],[11,"add_assign","","",144,null],[11,"add_assign","","",135,null],[11,"add_assign","","",110,null],[11,"add_assign","","",106,null],[11,"add_assign","","",119,null],[11,"add_assign","","",128,null],[11,"add_assign","","",154,null],[11,"add_assign","","",112,null],[11,"add_assign","","",121,null],[11,"add_assign","","",122,null],[11,"add_assign","","",158,null],[11,"add_assign","","",137,null],[11,"add_assign","","",149,null],[11,"add_assign","","",163,null],[11,"add_assign","","",131,null],[11,"add_assign","","",125,null],[11,"add_assign","","",148,null],[11,"add_assign","","",164,null],[11,"add_assign","","",113,null],[11,"add_assign","","",157,null],[11,"add_assign","","",145,null],[11,"add_assign","","",140,null],[11,"add_assign","","",115,null],[11,"add_assign","","",159,null],[11,"add_assign","","",155,null],[11,"add_assign","","",127,null],[11,"add_assign","","",153,null],[11,"add_assign","","",116,null],[11,"add_assign","","",117,null],[11,"add_assign","","",162,null],[11,"add_assign","","",111,null],[11,"add_assign","","",142,null],[11,"add_assign","","",120,null],[11,"add_assign","","",134,null],[11,"add_assign","","",132,null],[11,"add_assign","","",133,null],[11,"add_assign","","",150,null],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",125,null],[11,"from","","",160,null],[11,"from","","",137,null],[11,"from","","",118,null],[11,"from","","",141,null],[11,"from","","",131,null],[11,"from","","",119,null],[11,"from","","",123,null],[11,"from","","",116,null],[11,"from","","",108,null],[11,"from","","",128,null],[11,"from","","",132,null],[11,"from","","",141,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"from","","",114,null],[11,"from","","",161,null],[11,"from","","",111,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"from","","",152,null],[11,"from","","",126,null],[11,"from","","",139,null],[11,"from","","",112,null],[11,"from","","",130,null],[11,"from","","",158,null],[11,"from","","",107,null],[11,"from","","",120,null],[11,"from","","",121,null],[11,"from","","",106,null],[11,"from","","",150,null],[11,"from","","",156,null],[11,"from","","",157,null],[11,"from","","",106,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"from","","",133,null],[11,"from","","",109,null],[11,"from","","",110,null],[11,"from","","",143,null],[11,"from","","",122,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"from","","",159,null],[11,"from","","",162,null],[11,"from","","",122,null],[11,"from","","",138,null],[11,"from","","",134,null],[11,"from","","",129,null],[11,"from","","",117,null],[11,"from","","",143,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"from","","",115,null],[11,"from","","",149,null],[11,"from","","",155,null],[11,"from","","",113,null],[11,"from","","",164,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"from","","",148,null],[11,"from","","",145,null],[11,"from","","",146,null],[11,"from","","",124,null],[11,"from","","",113,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"from","","",147,null],[11,"from","","",163,null],[11,"from","","",154,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"from","","",140,null],[11,"from","","",144,null],[11,"from","","",125,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"from","","",153,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"from","","",127,null],[11,"from","","",165,null],[11,"from","","",164,null],[11,"from","","",135,null],[11,"from","","",154,null],[11,"from","","",153,null],[11,"from","","",142,null],[11,"from","","",151,null],[11,"from","","",136,null],[11,"from","","",111,null],[11,"shl","","",129,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shl","","",142,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shl","","",161,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shl","","",147,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shl","","",119,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shl","","",133,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shl","","",144,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shl","","",106,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"shl","","",110,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shl","","",132,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shl","","",160,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shl","","",146,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shl","","",111,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shl","","",141,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shl","","",135,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shl","","",118,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shl","","",131,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shl","","",145,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shl","","",138,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shl","","",143,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shl","","",162,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shl","","",123,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shl","","",136,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shl","","",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shl","","",109,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shl","","",149,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shl","","",124,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shl","","",114,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shl","","",112,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shl","","",107,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shl","","",127,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shl","","",158,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shl","","",148,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shl","","",113,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shl","","",116,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shl","","",163,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shl","","",140,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shl","","",125,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shl","","",122,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shl","","",130,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shl","","",154,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shl","","",137,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shl","","",155,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shl","","",151,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shl","","",108,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shl","","",157,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shl","","",165,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shl","","",115,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"mul_assign","","",161,null],[11,"mul_assign","","",123,null],[11,"mul_assign","","",144,null],[11,"mul_assign","","",155,null],[11,"mul_assign","","",128,null],[11,"mul_assign","","",118,null],[11,"mul_assign","","",117,null],[11,"mul_assign","","",142,null],[11,"mul_assign","","",154,null],[11,"mul_assign","","",164,null],[11,"mul_assign","","",125,null],[11,"mul_assign","","",113,null],[11,"mul_assign","","",146,null],[11,"mul_assign","","",158,null],[11,"mul_assign","","",156,null],[11,"mul_assign","","",137,null],[11,"mul_assign","","",160,null],[11,"mul_assign","","",148,null],[11,"mul_assign","","",119,null],[11,"mul_assign","","",130,null],[11,"mul_assign","","",151,null],[11,"mul_assign","","",133,null],[11,"mul_assign","","",135,null],[11,"mul_assign","","",141,null],[11,"mul_assign","","",131,null],[11,"mul_assign","","",111,null],[11,"mul_assign","","",136,null],[11,"mul_assign","","",120,null],[11,"mul_assign","","",106,null],[11,"mul_assign","","",121,null],[11,"mul_assign","","",134,null],[11,"mul_assign","","",157,null],[11,"mul_assign","","",112,null],[11,"mul_assign","","",163,null],[11,"mul_assign","","",122,null],[11,"mul_assign","","",165,null],[11,"mul_assign","","",149,null],[11,"mul_assign","","",127,null],[11,"mul_assign","","",132,null],[11,"mul_assign","","",107,null],[11,"mul_assign","","",126,null],[11,"mul_assign","","",109,null],[11,"mul_assign","","",116,null],[11,"mul_assign","","",115,null],[11,"mul_assign","","",145,null],[11,"mul_assign","","",150,null],[11,"mul_assign","","",140,null],[11,"mul_assign","","",124,null],[11,"mul_assign","","",139,null],[11,"mul_assign","","",110,null],[11,"mul_assign","","",129,null],[11,"mul_assign","","",108,null],[11,"mul_assign","","",138,null],[11,"mul_assign","","",143,null],[11,"mul_assign","","",114,null],[11,"mul_assign","","",153,null],[11,"mul_assign","","",159,null],[11,"mul_assign","","",152,null],[11,"mul_assign","","",147,null],[11,"mul_assign","","",162,null],[11,"zero","","",149,{"inputs":[],"output":{"name":"long4"}}],[11,"is_zero","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",141,{"inputs":[],"output":{"name":"char"}}],[11,"is_zero","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",118,{"inputs":[],"output":{"name":"int16"}}],[11,"is_zero","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",134,{"inputs":[],"output":{"name":"double16"}}],[11,"is_zero","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",152,{"inputs":[],"output":{"name":"float3"}}],[11,"is_zero","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",120,{"inputs":[],"output":{"name":"double3"}}],[11,"is_zero","","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",133,{"inputs":[],"output":{"name":"uchar3"}}],[11,"is_zero","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",143,{"inputs":[],"output":{"name":"uint"}}],[11,"is_zero","","",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",142,{"inputs":[],"output":{"name":"int8"}}],[11,"is_zero","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",140,{"inputs":[],"output":{"name":"ulong8"}}],[11,"is_zero","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",144,{"inputs":[],"output":{"name":"short8"}}],[11,"is_zero","","",144,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",128,{"inputs":[],"output":{"name":"double4"}}],[11,"is_zero","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",147,{"inputs":[],"output":{"name":"uchar2"}}],[11,"is_zero","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",146,{"inputs":[],"output":{"name":"ulong4"}}],[11,"is_zero","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",119,{"inputs":[],"output":{"name":"char16"}}],[11,"is_zero","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",109,{"inputs":[],"output":{"name":"ulong3"}}],[11,"is_zero","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",148,{"inputs":[],"output":{"name":"short4"}}],[11,"is_zero","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",106,{"inputs":[],"output":{"name":"int"}}],[11,"is_zero","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",117,{"inputs":[],"output":{"name":"double2"}}],[11,"is_zero","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",107,{"inputs":[],"output":{"name":"short16"}}],[11,"is_zero","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",115,{"inputs":[],"output":{"name":"ulong2"}}],[11,"is_zero","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",127,{"inputs":[],"output":{"name":"uchar8"}}],[11,"is_zero","","",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",126,{"inputs":[],"output":{"name":"float2"}}],[11,"is_zero","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",160,{"inputs":[],"output":{"name":"int3"}}],[11,"is_zero","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",113,{"inputs":[],"output":{"name":"ulong"}}],[11,"is_zero","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",154,{"inputs":[],"output":{"name":"short"}}],[11,"is_zero","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",159,{"inputs":[],"output":{"name":"float4"}}],[11,"is_zero","","",159,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",139,{"inputs":[],"output":{"name":"float16"}}],[11,"is_zero","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",116,{"inputs":[],"output":{"name":"ushort3"}}],[11,"is_zero","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",111,{"inputs":[],"output":{"name":"uchar"}}],[11,"is_zero","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",162,{"inputs":[],"output":{"name":"char8"}}],[11,"is_zero","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",124,{"inputs":[],"output":{"name":"char2"}}],[11,"is_zero","","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",156,{"inputs":[],"output":{"name":"float8"}}],[11,"is_zero","","",156,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",150,{"inputs":[],"output":{"name":"double8"}}],[11,"is_zero","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",155,{"inputs":[],"output":{"name":"uchar16"}}],[11,"is_zero","","",155,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",157,{"inputs":[],"output":{"name":"char3"}}],[11,"is_zero","","",157,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",145,{"inputs":[],"output":{"name":"short3"}}],[11,"is_zero","","",145,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",114,{"inputs":[],"output":{"name":"uchar4"}}],[11,"is_zero","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",121,{"inputs":[],"output":{"name":"uint16"}}],[11,"is_zero","","",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",108,{"inputs":[],"output":{"name":"long3"}}],[11,"is_zero","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",135,{"inputs":[],"output":{"name":"int4"}}],[11,"is_zero","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",137,{"inputs":[],"output":{"name":"uint3"}}],[11,"is_zero","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",138,{"inputs":[],"output":{"name":"ushort8"}}],[11,"is_zero","","",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",161,{"inputs":[],"output":{"name":"int2"}}],[11,"is_zero","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",130,{"inputs":[],"output":{"name":"ushort2"}}],[11,"is_zero","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",112,{"inputs":[],"output":{"name":"long8"}}],[11,"is_zero","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",151,{"inputs":[],"output":{"name":"ushort4"}}],[11,"is_zero","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",110,{"inputs":[],"output":{"name":"short2"}}],[11,"is_zero","","",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",122,{"inputs":[],"output":{"name":"long"}}],[11,"is_zero","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",131,{"inputs":[],"output":{"name":"long16"}}],[11,"is_zero","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",132,{"inputs":[],"output":{"name":"char4"}}],[11,"is_zero","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",136,{"inputs":[],"output":{"name":"long2"}}],[11,"is_zero","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",163,{"inputs":[],"output":{"name":"uint2"}}],[11,"is_zero","","",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",123,{"inputs":[],"output":{"name":"ushort16"}}],[11,"is_zero","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",164,{"inputs":[],"output":{"name":"double"}}],[11,"is_zero","","",164,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",129,{"inputs":[],"output":{"name":"uint4"}}],[11,"is_zero","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",125,{"inputs":[],"output":{"name":"ushort"}}],[11,"is_zero","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",165,{"inputs":[],"output":{"name":"ulong16"}}],[11,"is_zero","","",165,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",153,{"inputs":[],"output":{"name":"float"}}],[11,"is_zero","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",158,{"inputs":[],"output":{"name":"uint8"}}],[11,"is_zero","","",158,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sub_assign","","",131,null],[11,"sub_assign","","",159,null],[11,"sub_assign","","",152,null],[11,"sub_assign","","",123,null],[11,"sub_assign","","",142,null],[11,"sub_assign","","",109,null],[11,"sub_assign","","",141,null],[11,"sub_assign","","",147,null],[11,"sub_assign","","",132,null],[11,"sub_assign","","",117,null],[11,"sub_assign","","",118,null],[11,"sub_assign","","",107,null],[11,"sub_assign","","",149,null],[11,"sub_assign","","",124,null],[11,"sub_assign","","",121,null],[11,"sub_assign","","",154,null],[11,"sub_assign","","",115,null],[11,"sub_assign","","",122,null],[11,"sub_assign","","",125,null],[11,"sub_assign","","",130,null],[11,"sub_assign","","",153,null],[11,"sub_assign","","",136,null],[11,"sub_assign","","",129,null],[11,"sub_assign","","",161,null],[11,"sub_assign","","",138,null],[11,"sub_assign","","",113,null],[11,"sub_assign","","",157,null],[11,"sub_assign","","",120,null],[11,"sub_assign","","",111,null],[11,"sub_assign","","",112,null],[11,"sub_assign","","",134,null],[11,"sub_assign","","",163,null],[11,"sub_assign","","",137,null],[11,"sub_assign","","",139,null],[11,"sub_assign","","",150,null],[11,"sub_assign","","",133,null],[11,"sub_assign","","",116,null],[11,"sub_assign","","",155,null],[11,"sub_assign","","",146,null],[11,"sub_assign","","",127,null],[11,"sub_assign","","",145,null],[11,"sub_assign","","",135,null],[11,"sub_assign","","",143,null],[11,"sub_assign","","",144,null],[11,"sub_assign","","",126,null],[11,"sub_assign","","",128,null],[11,"sub_assign","","",114,null],[11,"sub_assign","","",158,null],[11,"sub_assign","","",165,null],[11,"sub_assign","","",162,null],[11,"sub_assign","","",164,null],[11,"sub_assign","","",106,null],[11,"sub_assign","","",151,null],[11,"sub_assign","","",148,null],[11,"sub_assign","","",110,null],[11,"sub_assign","","",160,null],[11,"sub_assign","","",119,null],[11,"sub_assign","","",108,null],[11,"sub_assign","","",140,null],[11,"sub_assign","","",156,null],[11,"add","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"add","","",155,null],[11,"add","","",132,null],[11,"add","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"add","","",116,null],[11,"add","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"add","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"add","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"add","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"add","","",148,null],[11,"add","","",159,null],[11,"add","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"add","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"add","","",163,null],[11,"add","","",131,null],[11,"add","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"add","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"add","","",109,null],[11,"add","","",106,null],[11,"add","","",137,null],[11,"add","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"add","","",115,null],[11,"add","","",152,null],[11,"add","","",123,null],[11,"add","","",140,null],[11,"add","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"add","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"add","","",143,null],[11,"add","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"add","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"add","","",122,null],[11,"add","","",128,null],[11,"add","","",149,null],[11,"add","","",164,null],[11,"add","","",114,null],[11,"add","","",157,null],[11,"add","","",126,null],[11,"add","","",154,null],[11,"add","","",125,null],[11,"add","","",160,null],[11,"add","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"add","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"add","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"add","","",153,null],[11,"add","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"add","","",142,null],[11,"add","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"add","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"add","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"add","","",161,null],[11,"add","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"add","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"add","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"add","","",135,null],[11,"add","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"add","","",121,null],[11,"add","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"add","","",119,null],[11,"add","","",144,null],[11,"add","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"add","","",113,null],[11,"add","","",145,null],[11,"add","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"add","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"add","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"add","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"add","","",120,null],[11,"add","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"add","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"add","","",130,null],[11,"add","","",117,null],[11,"add","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"add","","",141,null],[11,"add","","",133,null],[11,"add","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"add","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"add","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"add","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"add","","",139,null],[11,"add","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"add","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"add","","",147,null],[11,"add","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"add","","",156,null],[11,"add","","",158,null],[11,"add","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"add","","",107,null],[11,"add","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"add","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"add","","",118,null],[11,"add","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"add","","",112,null],[11,"add","","",138,null],[11,"add","","",108,null],[11,"add","","",136,null],[11,"add","","",127,null],[11,"add","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"add","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"add","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"add","","",162,null],[11,"add","","",134,null],[11,"add","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"add","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"add","","",124,null],[11,"add","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"add","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"add","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"add","","",129,null],[11,"add","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"add","","",146,null],[11,"add","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"add","","",111,null],[11,"add","","",151,null],[11,"add","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"add","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"add","","",165,null],[11,"add","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"add","","",110,null],[11,"add","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"add","","",150,null],[11,"one","","",137,{"inputs":[],"output":{"name":"uint3"}}],[11,"one","","",142,{"inputs":[],"output":{"name":"int8"}}],[11,"one","","",118,{"inputs":[],"output":{"name":"int16"}}],[11,"one","","",157,{"inputs":[],"output":{"name":"char3"}}],[11,"one","","",148,{"inputs":[],"output":{"name":"short4"}}],[11,"one","","",123,{"inputs":[],"output":{"name":"ushort16"}}],[11,"one","","",151,{"inputs":[],"output":{"name":"ushort4"}}],[11,"one","","",150,{"inputs":[],"output":{"name":"double8"}}],[11,"one","","",119,{"inputs":[],"output":{"name":"char16"}}],[11,"one","","",140,{"inputs":[],"output":{"name":"ulong8"}}],[11,"one","","",146,{"inputs":[],"output":{"name":"ulong4"}}],[11,"one","","",124,{"inputs":[],"output":{"name":"char2"}}],[11,"one","","",128,{"inputs":[],"output":{"name":"double4"}}],[11,"one","","",127,{"inputs":[],"output":{"name":"uchar8"}}],[11,"one","","",129,{"inputs":[],"output":{"name":"uint4"}}],[11,"one","","",113,{"inputs":[],"output":{"name":"ulong"}}],[11,"one","","",115,{"inputs":[],"output":{"name":"ulong2"}}],[11,"one","","",130,{"inputs":[],"output":{"name":"ushort2"}}],[11,"one","","",165,{"inputs":[],"output":{"name":"ulong16"}}],[11,"one","","",155,{"inputs":[],"output":{"name":"uchar16"}}],[11,"one","","",163,{"inputs":[],"output":{"name":"uint2"}}],[11,"one","","",147,{"inputs":[],"output":{"name":"uchar2"}}],[11,"one","","",112,{"inputs":[],"output":{"name":"long8"}}],[11,"one","","",152,{"inputs":[],"output":{"name":"float3"}}],[11,"one","","",138,{"inputs":[],"output":{"name":"ushort8"}}],[11,"one","","",110,{"inputs":[],"output":{"name":"short2"}}],[11,"one","","",117,{"inputs":[],"output":{"name":"double2"}}],[11,"one","","",145,{"inputs":[],"output":{"name":"short3"}}],[11,"one","","",125,{"inputs":[],"output":{"name":"ushort"}}],[11,"one","","",136,{"inputs":[],"output":{"name":"long2"}}],[11,"one","","",107,{"inputs":[],"output":{"name":"short16"}}],[11,"one","","",132,{"inputs":[],"output":{"name":"char4"}}],[11,"one","","",159,{"inputs":[],"output":{"name":"float4"}}],[11,"one","","",122,{"inputs":[],"output":{"name":"long"}}],[11,"one","","",106,{"inputs":[],"output":{"name":"int"}}],[11,"one","","",120,{"inputs":[],"output":{"name":"double3"}}],[11,"one","","",126,{"inputs":[],"output":{"name":"float2"}}],[11,"one","","",162,{"inputs":[],"output":{"name":"char8"}}],[11,"one","","",114,{"inputs":[],"output":{"name":"uchar4"}}],[11,"one","","",144,{"inputs":[],"output":{"name":"short8"}}],[11,"one","","",164,{"inputs":[],"output":{"name":"double"}}],[11,"one","","",134,{"inputs":[],"output":{"name":"double16"}}],[11,"one","","",108,{"inputs":[],"output":{"name":"long3"}}],[11,"one","","",109,{"inputs":[],"output":{"name":"ulong3"}}],[11,"one","","",135,{"inputs":[],"output":{"name":"int4"}}],[11,"one","","",154,{"inputs":[],"output":{"name":"short"}}],[11,"one","","",160,{"inputs":[],"output":{"name":"int3"}}],[11,"one","","",121,{"inputs":[],"output":{"name":"uint16"}}],[11,"one","","",139,{"inputs":[],"output":{"name":"float16"}}],[11,"one","","",156,{"inputs":[],"output":{"name":"float8"}}],[11,"one","","",131,{"inputs":[],"output":{"name":"long16"}}],[11,"one","","",133,{"inputs":[],"output":{"name":"uchar3"}}],[11,"one","","",141,{"inputs":[],"output":{"name":"char"}}],[11,"one","","",143,{"inputs":[],"output":{"name":"uint"}}],[11,"one","","",116,{"inputs":[],"output":{"name":"ushort3"}}],[11,"one","","",111,{"inputs":[],"output":{"name":"uchar"}}],[11,"one","","",153,{"inputs":[],"output":{"name":"float"}}],[11,"one","","",161,{"inputs":[],"output":{"name":"int2"}}],[11,"one","","",158,{"inputs":[],"output":{"name":"uint8"}}],[11,"one","","",149,{"inputs":[],"output":{"name":"long4"}}],[11,"hash","","",113,null],[11,"hash","","",112,null],[11,"hash","","",132,null],[11,"hash","","",129,null],[11,"hash","","",144,null],[11,"hash","","",138,null],[11,"hash","","",163,null],[11,"hash","","",124,null],[11,"hash","","",145,null],[11,"hash","","",154,null],[11,"hash","","",136,null],[11,"hash","","",143,null],[11,"hash","","",146,null],[11,"hash","","",137,null],[11,"hash","","",108,null],[11,"hash","","",135,null],[11,"hash","","",114,null],[11,"hash","","",161,null],[11,"hash","","",149,null],[11,"hash","","",157,null],[11,"hash","","",119,null],[11,"hash","","",123,null],[11,"hash","","",133,null],[11,"hash","","",155,null],[11,"hash","","",148,null],[11,"hash","","",121,null],[11,"hash","","",106,null],[11,"hash","","",107,null],[11,"hash","","",125,null],[11,"hash","","",158,null],[11,"hash","","",131,null],[11,"hash","","",165,null],[11,"hash","","",141,null],[11,"hash","","",111,null],[11,"hash","","",147,null],[11,"hash","","",160,null],[11,"hash","","",142,null],[11,"hash","","",122,null],[11,"hash","","",140,null],[11,"hash","","",127,null],[11,"hash","","",151,null],[11,"hash","","",162,null],[11,"hash","","",115,null],[11,"hash","","",118,null],[11,"hash","","",116,null],[11,"hash","","",109,null],[11,"hash","","",130,null],[11,"hash","","",110,null],[11,"bitand_assign","","",135,null],[11,"bitand_assign","","",143,null],[11,"bitand_assign","","",118,null],[11,"bitand_assign","","",114,null],[11,"bitand_assign","","",106,null],[11,"bitand_assign","","",109,null],[11,"bitand_assign","","",162,null],[11,"bitand_assign","","",163,null],[11,"bitand_assign","","",110,null],[11,"bitand_assign","","",125,null],[11,"bitand_assign","","",108,null],[11,"bitand_assign","","",140,null],[11,"bitand_assign","","",160,null],[11,"bitand_assign","","",131,null],[11,"bitand_assign","","",122,null],[11,"bitand_assign","","",137,null],[11,"bitand_assign","","",147,null],[11,"bitand_assign","","",127,null],[11,"bitand_assign","","",154,null],[11,"bitand_assign","","",107,null],[11,"bitand_assign","","",130,null],[11,"bitand_assign","","",142,null],[11,"bitand_assign","","",148,null],[11,"bitand_assign","","",124,null],[11,"bitand_assign","","",116,null],[11,"bitand_assign","","",115,null],[11,"bitand_assign","","",138,null],[11,"bitand_assign","","",113,null],[11,"bitand_assign","","",129,null],[11,"bitand_assign","","",141,null],[11,"bitand_assign","","",145,null],[11,"bitand_assign","","",146,null],[11,"bitand_assign","","",151,null],[11,"bitand_assign","","",158,null],[11,"bitand_assign","","",149,null],[11,"bitand_assign","","",132,null],[11,"bitand_assign","","",112,null],[11,"bitand_assign","","",121,null],[11,"bitand_assign","","",123,null],[11,"bitand_assign","","",136,null],[11,"bitand_assign","","",161,null],[11,"bitand_assign","","",144,null],[11,"bitand_assign","","",165,null],[11,"bitand_assign","","",111,null],[11,"bitand_assign","","",155,null],[11,"bitand_assign","","",119,null],[11,"bitand_assign","","",157,null],[11,"bitand_assign","","",133,null],[11,"shr_assign","","",123,null],[11,"shr_assign","","",107,null],[11,"shr_assign","","",125,null],[11,"shr_assign","","",147,null],[11,"shr_assign","","",130,null],[11,"shr_assign","","",122,null],[11,"shr_assign","","",143,null],[11,"shr_assign","","",151,null],[11,"shr_assign","","",109,null],[11,"shr_assign","","",112,null],[11,"shr_assign","","",160,null],[11,"shr_assign","","",140,null],[11,"shr_assign","","",132,null],[11,"shr_assign","","",111,null],[11,"shr_assign","","",129,null],[11,"shr_assign","","",115,null],[11,"shr_assign","","",162,null],[11,"shr_assign","","",114,null],[11,"shr_assign","","",142,null],[11,"shr_assign","","",137,null],[11,"shr_assign","","",121,null],[11,"shr_assign","","",136,null],[11,"shr_assign","","",146,null],[11,"shr_assign","","",131,null],[11,"shr_assign","","",163,null],[11,"shr_assign","","",119,null],[11,"shr_assign","","",165,null],[11,"shr_assign","","",155,null],[11,"shr_assign","","",138,null],[11,"shr_assign","","",135,null],[11,"shr_assign","","",161,null],[11,"shr_assign","","",133,null],[11,"shr_assign","","",144,null],[11,"shr_assign","","",110,null],[11,"shr_assign","","",141,null],[11,"shr_assign","","",116,null],[11,"shr_assign","","",154,null],[11,"shr_assign","","",106,null],[11,"shr_assign","","",124,null],[11,"shr_assign","","",113,null],[11,"shr_assign","","",118,null],[11,"shr_assign","","",157,null],[11,"shr_assign","","",158,null],[11,"shr_assign","","",148,null],[11,"shr_assign","","",108,null],[11,"shr_assign","","",145,null],[11,"shr_assign","","",127,null],[11,"shr_assign","","",149,null],[11,"bitor","","",163,null],[11,"bitor","","",131,null],[11,"bitor","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitor","","",135,null],[11,"bitor","","",124,null],[11,"bitor","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitor","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitor","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitor","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitor","","",110,null],[11,"bitor","","",109,null],[11,"bitor","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitor","","",130,null],[11,"bitor","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitor","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitor","","",142,null],[11,"bitor","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitor","","",121,null],[11,"bitor","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitor","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitor","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitor","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitor","","",123,null],[11,"bitor","","",115,null],[11,"bitor","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitor","","",147,null],[11,"bitor","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitor","","",127,null],[11,"bitor","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitor","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitor","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitor","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitor","","",165,null],[11,"bitor","","",138,null],[11,"bitor","","",151,null],[11,"bitor","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitor","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitor","","",160,null],[11,"bitor","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitor","","",114,null],[11,"bitor","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitor","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitor","","",132,null],[11,"bitor","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitor","","",122,null],[11,"bitor","","",148,null],[11,"bitor","","",146,null],[11,"bitor","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitor","","",129,null],[11,"bitor","","",157,null],[11,"bitor","","",118,null],[11,"bitor","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitor","","",149,null],[11,"bitor","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitor","","",141,null],[11,"bitor","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitor","","",154,null],[11,"bitor","","",161,null],[11,"bitor","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitor","","",155,null],[11,"bitor","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitor","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitor","","",107,null],[11,"bitor","","",119,null],[11,"bitor","","",143,null],[11,"bitor","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitor","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitor","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitor","","",113,null],[11,"bitor","","",145,null],[11,"bitor","","",136,null],[11,"bitor","","",108,null],[11,"bitor","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitor","","",144,null],[11,"bitor","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitor","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitor","","",133,null],[11,"bitor","","",111,null],[11,"bitor","","",106,null],[11,"bitor","","",140,null],[11,"bitor","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitor","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitor","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitor","","",112,null],[11,"bitor","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitor","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitor","","",137,null],[11,"bitor","","",116,null],[11,"bitor","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitor","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitor","","",162,null],[11,"bitor","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitor","","",158,null],[11,"bitor","","",125,null],[11,"bitor","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitor","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"rem","","",163,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"rem","","",156,null],[11,"rem","","",148,null],[11,"rem","","",114,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"rem","","",126,null],[11,"rem","","",154,null],[11,"rem","","",140,null],[11,"rem","","",126,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"rem","","",128,null],[11,"rem","","",153,null],[11,"rem","","",142,null],[11,"rem","","",137,null],[11,"rem","","",149,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"rem","","",164,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"rem","","",119,null],[11,"rem","","",161,null],[11,"rem","","",134,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"rem","","",129,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"rem","","",137,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"rem","","",123,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"rem","","",147,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"rem","","",117,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"rem","","",107,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"rem","","",128,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"rem","","",159,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"rem","","",112,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"rem","","",136,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"rem","","",135,null],[11,"rem","","",136,null],[11,"rem","","",130,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"rem","","",165,null],[11,"rem","","",129,null],[11,"rem","","",124,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"rem","","",157,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"rem","","",107,null],[11,"rem","","",146,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"rem","","",122,null],[11,"rem","","",162,null],[11,"rem","","",145,null],[11,"rem","","",130,null],[11,"rem","","",155,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"rem","","",131,null],[11,"rem","","",113,null],[11,"rem","","",123,null],[11,"rem","","",115,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"rem","","",108,null],[11,"rem","","",132,null],[11,"rem","","",122,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"rem","","",116,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"rem","","",140,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"rem","","",144,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"rem","","",150,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"rem","","",118,null],[11,"rem","","",124,null],[11,"rem","","",158,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"rem","","",131,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"rem","","",117,null],[11,"rem","","",113,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"rem","","",115,null],[11,"rem","","",143,null],[11,"rem","","",127,null],[11,"rem","","",125,null],[11,"rem","","",132,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"rem","","",152,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"rem","","",111,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"rem","","",121,null],[11,"rem","","",110,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"rem","","",106,null],[11,"rem","","",120,null],[11,"rem","","",133,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"rem","","",144,null],[11,"rem","","",142,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"rem","","",162,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"rem","","",109,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"rem","","",110,null],[11,"rem","","",111,null],[11,"rem","","",155,null],[11,"rem","","",119,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"rem","","",165,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"rem","","",159,null],[11,"rem","","",164,null],[11,"rem","","",112,null],[11,"rem","","",163,null],[11,"rem","","",158,null],[11,"rem","","",133,null],[11,"rem","","",108,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"rem","","",148,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"rem","","",120,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"rem","","",143,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"rem","","",147,null],[11,"rem","","",139,null],[11,"rem","","",149,null],[11,"rem","","",109,null],[11,"rem","","",154,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"rem","","",138,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"rem","","",139,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"rem","","",127,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"rem","","",153,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"rem","","",161,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"rem","","",116,null],[11,"rem","","",145,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"rem","","",121,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"rem","","",125,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"rem","","",141,null],[11,"rem","","",160,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"rem","","",138,null],[11,"rem","","",135,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"rem","","",118,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"rem","","",150,null],[11,"rem","","",141,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"rem","","",114,null],[11,"rem","","",152,null],[11,"rem","","",151,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"rem","","",146,null],[11,"rem","","",160,null],[11,"rem","","",157,null],[11,"rem","","",106,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"rem","","",156,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"rem","","",134,null],[11,"rem","","",151,null],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","ocl::builders","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"devicespecifier"}}],[11,"all","","Returns a `DeviceSpecifier::All` variant which specifies all devices on a platform.",39,{"inputs":[{"name":"self"}],"output":{"name":"devicespecifier"}}],[11,"first","","Returns a `DeviceSpecifier::First` variant which specifies only the first device on a platform.",39,{"inputs":[{"name":"self"}],"output":{"name":"devicespecifier"}}],[11,"single","","Returns a `DeviceSpecifier::Single` variant which specifies a single device.",39,{"inputs":[{"name":"self"},{"name":"device"}],"output":{"name":"devicespecifier"}}],[11,"list","","Returns a `DeviceSpecifier::List` variant which specifies a list of devices.",39,{"inputs":[{"name":"self"},{"generics":["device"],"name":"vec"}],"output":{"name":"devicespecifier"}}],[11,"indices","","Returns a `DeviceSpecifier::Indices` variant which specifies a list of devices by index.",39,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"vec"}],"output":{"name":"devicespecifier"}}],[11,"wrapping_indices","","Returns a `DeviceSpecifier::WrappingIndices` variant, specifying a list of devices by indices which are wrapped around (simply using the modulo operator) so that every index is always valid.",39,{"inputs":[{"name":"self"},{"generics":["usize"],"name":"vec"}],"output":{"name":"devicespecifier"}}],[11,"type_flags","","Returns a `DeviceSpecifier::TypeFlags` variant which specifies a list of devices using a conventional bitfield.",39,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicespecifier"}}],[11,"to_device_list","","Returns the list of devices matching the parameters specified by this `DeviceSpecifier`",39,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"generics":["vec"],"name":"oclresult"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,null],[11,"from","","",39,{"inputs":[{"name":"vec"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,null],[11,"from","","",39,{"inputs":[{"name":"vec"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"device"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"device"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"deviceidcore"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"deviceidcore"}],"output":{"name":"devicespecifier"}}],[11,"from","","",39,{"inputs":[{"name":"devicetype"}],"output":{"name":"devicespecifier"}}],[11,"new","","Creates a new `ContextBuilder`",166,{"inputs":[],"output":{"name":"contextbuilder"}}],[11,"properties","","Specifies all context properties directly.",166,{"inputs":[{"name":"self"},{"name":"contextproperties"}],"output":{"name":"contextbuilder"}}],[11,"property","","Specifies a context property.",166,{"inputs":[{"name":"self"},{"name":"contextpropertyvalue"}],"output":{"name":"contextbuilder"}}],[11,"platform","","Specifies a platform.",166,{"inputs":[{"name":"self"},{"name":"platform"}],"output":{"name":"contextbuilder"}}],[11,"gl_context","","Specifies an OpenGL context to associate with.",166,null],[11,"glx_display","","Specifies a Display pointer for the GLX context.",166,null],[11,"devices","","Specifies a list of devices with which to associate the context.",166,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"contextbuilder"}}],[11,"build","","Returns a new `Context` with the parameters hitherinforthto specified (say what?).",166,{"inputs":[{"name":"self"}],"output":{"generics":["context"],"name":"oclresult"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"buildopt"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmplr_def","","Returns a `BuildOpt::CmplrDefine`.",38,{"inputs":[{"name":"s"},{"name":"i32"}],"output":{"name":"buildopt"}}],[11,"include_def","","Returns a `BuildOpt::IncludeDefine`.",38,{"inputs":[{"name":"s"},{"name":"string"}],"output":{"name":"buildopt"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"programbuilder"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new, empty, build configuration object.",167,{"inputs":[],"output":{"name":"programbuilder"}}],[11,"cmplr_def","","Adds a build option containing a compiler command line definition. Formatted as `-D {name}={val}`.",167,{"inputs":[{"name":"self"},{"name":"s"},{"name":"i32"}],"output":{"name":"programbuilder"}}],[11,"cmplr_opt","","Adds a build option containing a raw compiler command line parameter. Formatted as `{}` (exact text).",167,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"programbuilder"}}],[11,"bo","","Pushes pre-created build option to the list of options.",167,{"inputs":[{"name":"self"},{"name":"buildopt"}],"output":{"name":"programbuilder"}}],[11,"src_file","","Adds the contents of a file to the program.",167,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"programbuilder"}}],[11,"source_file","","Opens a file and adds its contents to the program source.",167,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"programbuilder"}}],[11,"src","","Adds raw text to the program source.",167,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"programbuilder"}}],[11,"source","","Adds raw text to the program source.",167,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"programbuilder"}}],[11,"binaries","","Adds a binary to be loaded.",167,null],[11,"devices","","Specifies a list of devices to build this program on. The devices must be associated with the context passed to `::build` later on.",167,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"programbuilder"}}],[11,"get_device_spec","","Returns the devices specified to be associated the program.",167,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_compiler_options","","Returns a concatenated string of command line options to be passed to the compiler when building this program.",167,{"inputs":[{"name":"self"}],"output":{"generics":["cstring"],"name":"oclresult"}}],[11,"get_src_strings","","Returns the final program source code as a list of strings.",167,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclresult"}}],[11,"build","","Returns a newly built Program.",167,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["program"],"name":"oclresult"}}],[11,"new","ocl::prm","",141,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"splat","","",141,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"zero","","",141,{"inputs":[],"output":{"name":"char"}}],[11,"is_zero","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",141,{"inputs":[],"output":{"name":"char"}}],[11,"new","","",124,{"inputs":[{"name":"i8"},{"name":"i8"}],"output":{"name":"char2"}}],[11,"splat","","",124,{"inputs":[{"name":"i8"}],"output":{"name":"char2"}}],[11,"zero","","",124,{"inputs":[],"output":{"name":"char2"}}],[11,"is_zero","","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",124,{"inputs":[],"output":{"name":"char2"}}],[11,"new","","",157,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char3"}}],[11,"splat","","",157,{"inputs":[{"name":"i8"}],"output":{"name":"char3"}}],[11,"zero","","",157,{"inputs":[],"output":{"name":"char3"}}],[11,"is_zero","","",157,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",157,{"inputs":[],"output":{"name":"char3"}}],[11,"new","","",132,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char4"}}],[11,"splat","","",132,{"inputs":[{"name":"i8"}],"output":{"name":"char4"}}],[11,"zero","","",132,{"inputs":[],"output":{"name":"char4"}}],[11,"is_zero","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",132,{"inputs":[],"output":{"name":"char4"}}],[11,"new","","",162,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char8"}}],[11,"splat","","",162,{"inputs":[{"name":"i8"}],"output":{"name":"char8"}}],[11,"zero","","",162,{"inputs":[],"output":{"name":"char8"}}],[11,"is_zero","","",162,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",162,{"inputs":[],"output":{"name":"char8"}}],[11,"new","","",119,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char16"}}],[11,"splat","","",119,{"inputs":[{"name":"i8"}],"output":{"name":"char16"}}],[11,"zero","","",119,{"inputs":[],"output":{"name":"char16"}}],[11,"is_zero","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",119,{"inputs":[],"output":{"name":"char16"}}],[11,"new","","",111,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"splat","","",111,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"zero","","",111,{"inputs":[],"output":{"name":"uchar"}}],[11,"is_zero","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",111,{"inputs":[],"output":{"name":"uchar"}}],[11,"new","","",147,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar2"}}],[11,"splat","","",147,{"inputs":[{"name":"u8"}],"output":{"name":"uchar2"}}],[11,"zero","","",147,{"inputs":[],"output":{"name":"uchar2"}}],[11,"is_zero","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",147,{"inputs":[],"output":{"name":"uchar2"}}],[11,"new","","",133,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar3"}}],[11,"splat","","",133,{"inputs":[{"name":"u8"}],"output":{"name":"uchar3"}}],[11,"zero","","",133,{"inputs":[],"output":{"name":"uchar3"}}],[11,"is_zero","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",133,{"inputs":[],"output":{"name":"uchar3"}}],[11,"new","","",114,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar4"}}],[11,"splat","","",114,{"inputs":[{"name":"u8"}],"output":{"name":"uchar4"}}],[11,"zero","","",114,{"inputs":[],"output":{"name":"uchar4"}}],[11,"is_zero","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",114,{"inputs":[],"output":{"name":"uchar4"}}],[11,"new","","",127,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar8"}}],[11,"splat","","",127,{"inputs":[{"name":"u8"}],"output":{"name":"uchar8"}}],[11,"zero","","",127,{"inputs":[],"output":{"name":"uchar8"}}],[11,"is_zero","","",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",127,{"inputs":[],"output":{"name":"uchar8"}}],[11,"new","","",155,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar16"}}],[11,"splat","","",155,{"inputs":[{"name":"u8"}],"output":{"name":"uchar16"}}],[11,"zero","","",155,{"inputs":[],"output":{"name":"uchar16"}}],[11,"is_zero","","",155,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",155,{"inputs":[],"output":{"name":"uchar16"}}],[11,"new","","",154,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"splat","","",154,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"zero","","",154,{"inputs":[],"output":{"name":"short"}}],[11,"is_zero","","",154,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",154,{"inputs":[],"output":{"name":"short"}}],[11,"new","","",110,{"inputs":[{"name":"i16"},{"name":"i16"}],"output":{"name":"short2"}}],[11,"splat","","",110,{"inputs":[{"name":"i16"}],"output":{"name":"short2"}}],[11,"zero","","",110,{"inputs":[],"output":{"name":"short2"}}],[11,"is_zero","","",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",110,{"inputs":[],"output":{"name":"short2"}}],[11,"new","","",145,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short3"}}],[11,"splat","","",145,{"inputs":[{"name":"i16"}],"output":{"name":"short3"}}],[11,"zero","","",145,{"inputs":[],"output":{"name":"short3"}}],[11,"is_zero","","",145,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",145,{"inputs":[],"output":{"name":"short3"}}],[11,"new","","",148,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short4"}}],[11,"splat","","",148,{"inputs":[{"name":"i16"}],"output":{"name":"short4"}}],[11,"zero","","",148,{"inputs":[],"output":{"name":"short4"}}],[11,"is_zero","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",148,{"inputs":[],"output":{"name":"short4"}}],[11,"new","","",144,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short8"}}],[11,"splat","","",144,{"inputs":[{"name":"i16"}],"output":{"name":"short8"}}],[11,"zero","","",144,{"inputs":[],"output":{"name":"short8"}}],[11,"is_zero","","",144,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",144,{"inputs":[],"output":{"name":"short8"}}],[11,"new","","",107,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short16"}}],[11,"splat","","",107,{"inputs":[{"name":"i16"}],"output":{"name":"short16"}}],[11,"zero","","",107,{"inputs":[],"output":{"name":"short16"}}],[11,"is_zero","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",107,{"inputs":[],"output":{"name":"short16"}}],[11,"new","","",125,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"splat","","",125,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"zero","","",125,{"inputs":[],"output":{"name":"ushort"}}],[11,"is_zero","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",125,{"inputs":[],"output":{"name":"ushort"}}],[11,"new","","",130,{"inputs":[{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort2"}}],[11,"splat","","",130,{"inputs":[{"name":"u16"}],"output":{"name":"ushort2"}}],[11,"zero","","",130,{"inputs":[],"output":{"name":"ushort2"}}],[11,"is_zero","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",130,{"inputs":[],"output":{"name":"ushort2"}}],[11,"new","","",116,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort3"}}],[11,"splat","","",116,{"inputs":[{"name":"u16"}],"output":{"name":"ushort3"}}],[11,"zero","","",116,{"inputs":[],"output":{"name":"ushort3"}}],[11,"is_zero","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",116,{"inputs":[],"output":{"name":"ushort3"}}],[11,"new","","",151,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort4"}}],[11,"splat","","",151,{"inputs":[{"name":"u16"}],"output":{"name":"ushort4"}}],[11,"zero","","",151,{"inputs":[],"output":{"name":"ushort4"}}],[11,"is_zero","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",151,{"inputs":[],"output":{"name":"ushort4"}}],[11,"new","","",138,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort8"}}],[11,"splat","","",138,{"inputs":[{"name":"u16"}],"output":{"name":"ushort8"}}],[11,"zero","","",138,{"inputs":[],"output":{"name":"ushort8"}}],[11,"is_zero","","",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",138,{"inputs":[],"output":{"name":"ushort8"}}],[11,"new","","",123,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort16"}}],[11,"splat","","",123,{"inputs":[{"name":"u16"}],"output":{"name":"ushort16"}}],[11,"zero","","",123,{"inputs":[],"output":{"name":"ushort16"}}],[11,"is_zero","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",123,{"inputs":[],"output":{"name":"ushort16"}}],[11,"new","","",106,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"splat","","",106,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"zero","","",106,{"inputs":[],"output":{"name":"int"}}],[11,"is_zero","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",106,{"inputs":[],"output":{"name":"int"}}],[11,"new","","",161,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"int2"}}],[11,"splat","","",161,{"inputs":[{"name":"i32"}],"output":{"name":"int2"}}],[11,"zero","","",161,{"inputs":[],"output":{"name":"int2"}}],[11,"is_zero","","",161,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",161,{"inputs":[],"output":{"name":"int2"}}],[11,"new","","",160,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int3"}}],[11,"splat","","",160,{"inputs":[{"name":"i32"}],"output":{"name":"int3"}}],[11,"zero","","",160,{"inputs":[],"output":{"name":"int3"}}],[11,"is_zero","","",160,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",160,{"inputs":[],"output":{"name":"int3"}}],[11,"new","","",135,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int4"}}],[11,"splat","","",135,{"inputs":[{"name":"i32"}],"output":{"name":"int4"}}],[11,"zero","","",135,{"inputs":[],"output":{"name":"int4"}}],[11,"is_zero","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",135,{"inputs":[],"output":{"name":"int4"}}],[11,"new","","",142,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int8"}}],[11,"splat","","",142,{"inputs":[{"name":"i32"}],"output":{"name":"int8"}}],[11,"zero","","",142,{"inputs":[],"output":{"name":"int8"}}],[11,"is_zero","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",142,{"inputs":[],"output":{"name":"int8"}}],[11,"new","","",118,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int16"}}],[11,"splat","","",118,{"inputs":[{"name":"i32"}],"output":{"name":"int16"}}],[11,"zero","","",118,{"inputs":[],"output":{"name":"int16"}}],[11,"is_zero","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",118,{"inputs":[],"output":{"name":"int16"}}],[11,"new","","",143,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"splat","","",143,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"zero","","",143,{"inputs":[],"output":{"name":"uint"}}],[11,"is_zero","","",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",143,{"inputs":[],"output":{"name":"uint"}}],[11,"new","","",163,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"uint2"}}],[11,"splat","","",163,{"inputs":[{"name":"u32"}],"output":{"name":"uint2"}}],[11,"zero","","",163,{"inputs":[],"output":{"name":"uint2"}}],[11,"is_zero","","",163,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",163,{"inputs":[],"output":{"name":"uint2"}}],[11,"new","","",137,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint3"}}],[11,"splat","","",137,{"inputs":[{"name":"u32"}],"output":{"name":"uint3"}}],[11,"zero","","",137,{"inputs":[],"output":{"name":"uint3"}}],[11,"is_zero","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",137,{"inputs":[],"output":{"name":"uint3"}}],[11,"new","","",129,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint4"}}],[11,"splat","","",129,{"inputs":[{"name":"u32"}],"output":{"name":"uint4"}}],[11,"zero","","",129,{"inputs":[],"output":{"name":"uint4"}}],[11,"is_zero","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",129,{"inputs":[],"output":{"name":"uint4"}}],[11,"new","","",158,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"uint8"}}],[11,"splat","","",158,{"inputs":[{"name":"i8"}],"output":{"name":"uint8"}}],[11,"zero","","",158,{"inputs":[],"output":{"name":"uint8"}}],[11,"is_zero","","",158,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",158,{"inputs":[],"output":{"name":"uint8"}}],[11,"new","","",121,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint16"}}],[11,"splat","","",121,{"inputs":[{"name":"u32"}],"output":{"name":"uint16"}}],[11,"zero","","",121,{"inputs":[],"output":{"name":"uint16"}}],[11,"is_zero","","",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",121,{"inputs":[],"output":{"name":"uint16"}}],[11,"new","","",122,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"splat","","",122,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"zero","","",122,{"inputs":[],"output":{"name":"long"}}],[11,"is_zero","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",122,{"inputs":[],"output":{"name":"long"}}],[11,"new","","",136,{"inputs":[{"name":"i64"},{"name":"i64"}],"output":{"name":"long2"}}],[11,"splat","","",136,{"inputs":[{"name":"i64"}],"output":{"name":"long2"}}],[11,"zero","","",136,{"inputs":[],"output":{"name":"long2"}}],[11,"is_zero","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",136,{"inputs":[],"output":{"name":"long2"}}],[11,"new","","",108,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long3"}}],[11,"splat","","",108,{"inputs":[{"name":"i64"}],"output":{"name":"long3"}}],[11,"zero","","",108,{"inputs":[],"output":{"name":"long3"}}],[11,"is_zero","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",108,{"inputs":[],"output":{"name":"long3"}}],[11,"new","","",149,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long4"}}],[11,"splat","","",149,{"inputs":[{"name":"i64"}],"output":{"name":"long4"}}],[11,"zero","","",149,{"inputs":[],"output":{"name":"long4"}}],[11,"is_zero","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",149,{"inputs":[],"output":{"name":"long4"}}],[11,"new","","",112,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long8"}}],[11,"splat","","",112,{"inputs":[{"name":"i64"}],"output":{"name":"long8"}}],[11,"zero","","",112,{"inputs":[],"output":{"name":"long8"}}],[11,"is_zero","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",112,{"inputs":[],"output":{"name":"long8"}}],[11,"new","","",131,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long16"}}],[11,"splat","","",131,{"inputs":[{"name":"i64"}],"output":{"name":"long16"}}],[11,"zero","","",131,{"inputs":[],"output":{"name":"long16"}}],[11,"is_zero","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",131,{"inputs":[],"output":{"name":"long16"}}],[11,"new","","",113,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"splat","","",113,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"zero","","",113,{"inputs":[],"output":{"name":"ulong"}}],[11,"is_zero","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",113,{"inputs":[],"output":{"name":"ulong"}}],[11,"new","","",115,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong2"}}],[11,"splat","","",115,{"inputs":[{"name":"u64"}],"output":{"name":"ulong2"}}],[11,"zero","","",115,{"inputs":[],"output":{"name":"ulong2"}}],[11,"is_zero","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",115,{"inputs":[],"output":{"name":"ulong2"}}],[11,"new","","",109,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong3"}}],[11,"splat","","",109,{"inputs":[{"name":"u64"}],"output":{"name":"ulong3"}}],[11,"zero","","",109,{"inputs":[],"output":{"name":"ulong3"}}],[11,"is_zero","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",109,{"inputs":[],"output":{"name":"ulong3"}}],[11,"new","","",146,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong4"}}],[11,"splat","","",146,{"inputs":[{"name":"u64"}],"output":{"name":"ulong4"}}],[11,"zero","","",146,{"inputs":[],"output":{"name":"ulong4"}}],[11,"is_zero","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",146,{"inputs":[],"output":{"name":"ulong4"}}],[11,"new","","",140,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong8"}}],[11,"splat","","",140,{"inputs":[{"name":"u64"}],"output":{"name":"ulong8"}}],[11,"zero","","",140,{"inputs":[],"output":{"name":"ulong8"}}],[11,"is_zero","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",140,{"inputs":[],"output":{"name":"ulong8"}}],[11,"new","","",165,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong16"}}],[11,"splat","","",165,{"inputs":[{"name":"u64"}],"output":{"name":"ulong16"}}],[11,"zero","","",165,{"inputs":[],"output":{"name":"ulong16"}}],[11,"is_zero","","",165,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",165,{"inputs":[],"output":{"name":"ulong16"}}],[11,"new","","",153,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"splat","","",153,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"zero","","",153,{"inputs":[],"output":{"name":"float"}}],[11,"is_zero","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",153,{"inputs":[],"output":{"name":"float"}}],[11,"new","","",126,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"float2"}}],[11,"splat","","",126,{"inputs":[{"name":"f32"}],"output":{"name":"float2"}}],[11,"zero","","",126,{"inputs":[],"output":{"name":"float2"}}],[11,"is_zero","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",126,{"inputs":[],"output":{"name":"float2"}}],[11,"new","","",152,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float3"}}],[11,"splat","","",152,{"inputs":[{"name":"f32"}],"output":{"name":"float3"}}],[11,"zero","","",152,{"inputs":[],"output":{"name":"float3"}}],[11,"is_zero","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",152,{"inputs":[],"output":{"name":"float3"}}],[11,"new","","",159,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float4"}}],[11,"splat","","",159,{"inputs":[{"name":"f32"}],"output":{"name":"float4"}}],[11,"zero","","",159,{"inputs":[],"output":{"name":"float4"}}],[11,"is_zero","","",159,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",159,{"inputs":[],"output":{"name":"float4"}}],[11,"new","","",156,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float8"}}],[11,"splat","","",156,{"inputs":[{"name":"f32"}],"output":{"name":"float8"}}],[11,"zero","","",156,{"inputs":[],"output":{"name":"float8"}}],[11,"is_zero","","",156,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",156,{"inputs":[],"output":{"name":"float8"}}],[11,"new","","",139,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float16"}}],[11,"splat","","",139,{"inputs":[{"name":"f32"}],"output":{"name":"float16"}}],[11,"zero","","",139,{"inputs":[],"output":{"name":"float16"}}],[11,"is_zero","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",139,{"inputs":[],"output":{"name":"float16"}}],[11,"new","","",164,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"splat","","",164,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"zero","","",164,{"inputs":[],"output":{"name":"double"}}],[11,"is_zero","","",164,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",164,{"inputs":[],"output":{"name":"double"}}],[11,"new","","",117,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"double2"}}],[11,"splat","","",117,{"inputs":[{"name":"f64"}],"output":{"name":"double2"}}],[11,"zero","","",117,{"inputs":[],"output":{"name":"double2"}}],[11,"is_zero","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",117,{"inputs":[],"output":{"name":"double2"}}],[11,"new","","",120,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double3"}}],[11,"splat","","",120,{"inputs":[{"name":"f64"}],"output":{"name":"double3"}}],[11,"zero","","",120,{"inputs":[],"output":{"name":"double3"}}],[11,"is_zero","","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",120,{"inputs":[],"output":{"name":"double3"}}],[11,"new","","",128,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double4"}}],[11,"splat","","",128,{"inputs":[{"name":"f64"}],"output":{"name":"double4"}}],[11,"zero","","",128,{"inputs":[],"output":{"name":"double4"}}],[11,"is_zero","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",128,{"inputs":[],"output":{"name":"double4"}}],[11,"new","","",150,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double8"}}],[11,"splat","","",150,{"inputs":[{"name":"f64"}],"output":{"name":"double8"}}],[11,"zero","","",150,{"inputs":[],"output":{"name":"double8"}}],[11,"is_zero","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",150,{"inputs":[],"output":{"name":"double8"}}],[11,"new","","",134,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double16"}}],[11,"splat","","",134,{"inputs":[{"name":"f64"}],"output":{"name":"double16"}}],[11,"zero","","",134,{"inputs":[],"output":{"name":"double16"}}],[11,"is_zero","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",134,{"inputs":[],"output":{"name":"double16"}}],[11,"queue","ocl::builders","Specifies a queue to use for this call only.",168,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"kernelcmd"}}],[11,"gwo","","Specifies a global work offset for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"gws","","Specifies a global work size for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"lws","","Specifies a local work size for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"global_work_offset","","Specifies a global work offset for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"global_work_size","","Specifies a global work size for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"local_work_size","","Specifies a local work size for this call only.",168,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelcmd"}}],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",168,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"kernelcmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",168,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"kernelcmd"}}],[11,"enq","","Enqueues this kernel command.",168,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new kernel builder.",169,{"inputs":[],"output":{"name":"kernelbuilder"}}],[11,"program","","Specifies a program object with a successfully built executable.",169,{"inputs":[{"name":"self"},{"name":"program"}],"output":{"name":"kernelbuilder"}}],[11,"name","","Specifies a function name in the program declared with the `__kernel` qualifier (e.g. `__kernel void add_values(...`).",169,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"kernelbuilder"}}],[11,"queue","","Sets the default queue to be used by all subsequent enqueue commands unless otherwise changed (with `::set_default_queue`) or overridden (by `::cmd().queue(...)...`).",169,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"kernelbuilder"}}],[11,"gwo","","Sets the default global work offset.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"gws","","Sets the default global work size.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"lws","","Sets the default local work size.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"global_work_offset","","Sets the default global work offset.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"global_work_size","","Sets the default global work size.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"local_work_size","","Sets the default local work size.",169,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"kernelbuilder"}}],[11,"arg","","Adds a new `Buffer`, `Image`, scalar, or vector argument to the kernel.",169,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"kernelbuilder"}}],[11,"arg_buf","","Adds a new argument to the kernel specifying the buffer object represented by 'buffer'.",169,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"kernelbuilder"}}],[11,"arg_img","","Adds a new argument to the kernel specifying the image object represented by 'image'.",169,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"kernelbuilder"}}],[11,"arg_smp","","Adds a new argument to the kernel specifying the sampler object represented by 'sampler'. Argument is added to the bottom of the argument order.",169,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"kernelbuilder"}}],[11,"arg_scl","","Adds a new argument specifying the value: `scalar`.",169,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"kernelbuilder"}}],[11,"arg_vec","","Adds a new argument specifying the value: `vector`.",169,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"kernelbuilder"}}],[11,"arg_loc","","Adds a new argument specifying the allocation of a local variable of size `length * sizeof(T)` bytes (builder_style).",169,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"kernelbuilder"}}],[11,"arg_sampler","","Adds a new argument to the kernel specifying the sampler object represented by 'sampler'. Argument is added to the bottom of the argument order.",169,{"inputs":[{"name":"self"},{"name":"sampler"}],"output":{"name":"kernelbuilder"}}],[11,"arg_local","","Adds a new argument specifying the allocation of a local variable of size `length * sizeof(T)` bytes (builder_style).",169,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"kernelbuilder"}}],[11,"arg_named","","Adds a new named `Buffer`, `Image`, scalar, or vector argument to the kernel.",169,{"inputs":[{"name":"self"},{"name":"str"},{"name":"a"}],"output":{"name":"kernelbuilder"}}],[11,"arg_buf_named","","Adds a new named argument specifying the buffer object represented by 'buffer'.",169,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"}],"output":{"name":"kernelbuilder"}}],[11,"arg_img_named","","Adds a new named argument specifying the image object represented by 'image'.",169,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"}],"output":{"name":"kernelbuilder"}}],[11,"arg_smp_named","","Adds a new named argument specifying the sampler object represented by 'sampler'.",169,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["sampler"],"name":"option"}],"output":{"name":"kernelbuilder"}}],[11,"arg_scl_named","","Adds a new named argument  specifying the value: `scalar`.",169,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"kernelbuilder"}}],[11,"arg_vec_named","","Adds a new named argument specifying the value: `vector`.",169,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"kernelbuilder"}}],[11,"arg_sampler_named","","Adds a new named argument specifying the sampler object represented by 'sampler'.",169,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["sampler"],"name":"option"}],"output":{"name":"kernelbuilder"}}],[11,"disable_mem_arg_retention","","Specifies whether or not to store a copy of memory objects (`Buffer` and `Image`).",169,{"inputs":[{"name":"self"}],"output":{"name":"kernelbuilder"}}],[11,"disable_arg_type_check","","Disables argument type checking when setting arguments.",169,{"inputs":[{"name":"self"}],"output":{"name":"kernelbuilder"}}],[11,"build","","Builds and returns a new `Kernel`",169,{"inputs":[{"name":"self"}],"output":{"generics":["kernel"],"name":"oclresult"}}],[11,"read","","Specifies that this command will be a read operation.",170,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bufferreadcmd"}}],[11,"write","","Specifies that this command will be a write operation.",170,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"bufferwritecmd"}}],[11,"map","","Specifies that this command will be a map operation.",170,{"inputs":[{"name":"self"}],"output":{"name":"buffermapcmd"}}],[11,"copy","","Specifies that this command will be a copy operation.",170,{"inputs":[{"name":"self"},{"name":"m"},{"generics":["usize"],"name":"option"},{"generics":["usize"],"name":"option"}],"output":{"name":"buffercmd"}}],[11,"copy_to_image","","Specifies that this command will be a copy to image operation.",170,null],[11,"gl_acquire","","Specifies that this command will acquire a GL buffer.",170,{"inputs":[{"name":"self"}],"output":{"name":"buffercmd"}}],[11,"gl_release","","Specifies that this command will release a GL buffer.",170,{"inputs":[{"name":"self"}],"output":{"name":"buffercmd"}}],[11,"fill","","Specifies that this command will be a fill operation.",170,{"inputs":[{"name":"self"},{"name":"t"},{"generics":["usize"],"name":"option"}],"output":{"name":"buffercmd"}}],[11,"queue","","Specifies a queue to use for this call only.",170,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"buffercmd"}}],[11,"block","","Specifies whether or not to block the current thread until completion.",170,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"buffercmd"}}],[11,"offset","","Sets the linear offset for an operation.",170,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffercmd"}}],[11,"rect","","Specifies that this will be a rectangularly shaped operation (the default being linear).",170,null],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",170,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"buffercmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",170,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"buffercmd"}}],[11,"enq","","Enqueues this command.",170,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"queue","","Specifies a queue to use for this call only.",171,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bufferreadcmd"}}],[11,"block","","Specifies whether or not to block the current thread until completion.",171,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bufferreadcmd"}}],[11,"offset","","Sets the linear offset for an operation.",171,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferreadcmd"}}],[11,"dst_offset","","Sets an offset into the destination data.",171,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferreadcmd"}}],[11,"len","","Sets the total length of data to read.",171,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferreadcmd"}}],[11,"rect","","Specifies that this will be a rectangularly shaped operation (the default being linear).",171,null],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",171,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"bufferreadcmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",171,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"bufferreadcmd"}}],[11,"enq","","Enqueues this command, blocking the current thread until it is complete.",171,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"enq_async","","Enqueues this command and returns a future representing its completion which resolves to a guard providing exclusive data access usable within subsequent futures.",171,{"inputs":[{"name":"self"}],"output":{"generics":["futurewriteguard"],"name":"oclresult"}}],[11,"queue","","Specifies a queue to use for this call only.",172,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bufferwritecmd"}}],[11,"block","","Specifies whether or not to block the current thread until completion.",172,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bufferwritecmd"}}],[11,"offset","","Sets the linear offset for an operation.",172,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferwritecmd"}}],[11,"src_offset","","Sets an offset into the source data.",172,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferwritecmd"}}],[11,"len","","Sets the total length of data to write.",172,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferwritecmd"}}],[11,"rect","","Specifies that this will be a rectangularly shaped operation (the default being linear).",172,null],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",172,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"bufferwritecmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",172,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"bufferwritecmd"}}],[11,"enq","","Enqueues this command, blocking the current thread until it is complete.",172,{"inputs":[{"name":"self"}],"output":{"name":"oclresult"}}],[11,"enq_async","","Enqueues this command and returns a future representing its completion which resolves to a read guard usable within subsequent futures.",172,{"inputs":[{"name":"self"}],"output":{"generics":["futurereadguard"],"name":"oclresult"}}],[11,"enq_async_then_write","","Enqueues this command and returns a future representing its completion.",172,{"inputs":[{"name":"self"}],"output":{"generics":["futurewriteguard"],"name":"oclresult"}}],[11,"flags","","Specifies the flags to be used for this map command.",173,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"buffermapcmd"}}],[11,"read","","Specifies that the memory object is being mapped for reading.",173,{"inputs":[{"name":"self"}],"output":{"name":"buffermapcmd"}}],[11,"write","","Specifies that the memory object is being mapped for writing.",173,{"inputs":[{"name":"self"}],"output":{"name":"buffermapcmd"}}],[11,"write_invalidate","","Specifies that the memory object is being mapped for writing and that the local (host) memory region may contain stale data that must be completely overwritten before unmapping.",173,{"inputs":[{"name":"self"}],"output":{"name":"buffermapcmd"}}],[11,"len","","Specifies the length of the region to map.",173,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffermapcmd"}}],[11,"queue","","Specifies a queue to use for this call only.",173,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"buffermapcmd"}}],[11,"offset","","Sets the linear offset for an operation.",173,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffermapcmd"}}],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",173,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"buffermapcmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",173,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"buffermapcmd"}}],[11,"enq","","Enqueues a map command, blocking the current thread until it completes and returns a reference to the mapped memory.",173,{"inputs":[{"name":"self"}],"output":{"generics":["memmap"],"name":"oclresult"}}],[11,"enq_async","","Enqueues a map command and returns a future representing the completion of that map command.",173,{"inputs":[{"name":"self"}],"output":{"generics":["futurememmap"],"name":"oclresult"}}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new buffer builder.",174,{"inputs":[],"output":{"name":"bufferbuilder"}}],[11,"context","","Sets the context with which to associate the buffer.",174,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"bufferbuilder"}}],[11,"queue","","Specifies the default queue used to be used by the buffer for all command enqueue operations (reads, writes, etc.).",174,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"bufferbuilder"}}],[11,"flags","","Sets the flags used when creating the buffer.",174,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bufferbuilder"}}],[11,"use_host_slice","","Specifies a region of host memory to use as storage for the buffer.",174,null],[11,"copy_host_slice","","Specifies a region of memory to copy into the buffer upon creation.",174,null],[11,"len","","Sets the length for this buffer.",174,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"bufferbuilder"}}],[11,"fill_val","","Allows the caller to automatically fill the buffer with a value (such as zero) immediately after creation.",174,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bufferbuilder"}}],[11,"fill_event","","Specifies the (empty) event to use for association with the completion of the fill command.",174,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"bufferbuilder"}}],[11,"build","","Creates a buffer and returns it.",174,{"inputs":[{"name":"self"}],"output":{"generics":["buffer"],"name":"oclresult"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","Specifies that this command will be a blocking read operation.",175,null],[11,"write","","Specifies that this command will be a write operation.",175,null],[11,"map","","Specifies that this command will be a map operation.",175,{"inputs":[{"name":"self"}],"output":{"name":"imagemapcmd"}}],[11,"copy","","Specifies that this command will be a copy operation.",175,null],[11,"copy_to_buffer","","Specifies that this command will be a copy to image.",175,{"inputs":[{"name":"self"},{"name":"memcore"},{"name":"usize"}],"output":{"name":"imagecmd"}}],[11,"gl_acquire","","Specifies that this command will acquire a GL buffer.",175,{"inputs":[{"name":"self"}],"output":{"name":"imagecmd"}}],[11,"gl_release","","Specifies that this command will release a GL buffer.",175,{"inputs":[{"name":"self"}],"output":{"name":"imagecmd"}}],[11,"fill","","Specifies that this command will be a fill.",175,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"imagecmd"}}],[11,"queue","","Specifies a queue to use for this call only.",175,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"imagecmd"}}],[11,"block","","Specifies whether or not to block the current thread until completion.",175,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"imagecmd"}}],[11,"origin","","Sets the three dimensional offset, the origin point, for an operation.",175,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"imagecmd"}}],[11,"region","","Sets the region size for an operation.",175,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"imagecmd"}}],[11,"pitch_bytes","","Sets the row and slice pitch for a read or write operation in bytes.",175,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"imagecmd"}}],[11,"ewait","","Specifies an event or list of events to wait on before the command will run.",175,{"inputs":[{"name":"self"},{"name":"ewl"}],"output":{"name":"imagecmd"}}],[11,"enew","","Specifies the destination to store a new, optionally created event associated with this command.",175,{"inputs":[{"name":"self"},{"name":"en"}],"output":{"name":"imagecmd"}}],[11,"enq","","Enqueues this command.",175,{"inputs":[{"name":"self"}],"output":{"name":"oclcoreresult"}}],[11,"new","","Returns a new `ImageBuilder` with very basic defaults.",176,{"inputs":[],"output":{"name":"imagebuilder"}}],[11,"context","","Sets the context with which to associate the buffer.",176,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"imagebuilder"}}],[11,"queue","","Sets the default queue.",176,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"name":"imagebuilder"}}],[11,"flags","","Sets the flags used when creating the image.",176,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"imagebuilder"}}],[11,"use_host_slice","","Specifies a region of host memory to use as storage for the image.",176,null],[11,"copy_host_slice","","Specifies a region of memory to copy into the image upon creation.",176,null],[11,"channel_order","","",176,{"inputs":[{"name":"self"},{"name":"imagechannelorder"}],"output":{"name":"imagebuilder"}}],[11,"channel_data_type","","",176,{"inputs":[{"name":"self"},{"name":"imagechanneldatatype"}],"output":{"name":"imagebuilder"}}],[11,"image_type","","Sets the type of image (technically the type of memory buffer).",176,{"inputs":[{"name":"self"},{"name":"memobjecttype"}],"output":{"name":"imagebuilder"}}],[11,"dims","","The width, height, and depth of an image or image array:",176,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"imagebuilder"}}],[11,"array_size","","Image array size.",176,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"imagebuilder"}}],[11,"row_pitch_bytes","","Image row pitch.",176,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"imagebuilder"}}],[11,"slc_pitch_bytes","","Image slice pitch.",176,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"imagebuilder"}}],[11,"buffer_sync","","Buffer synchronization.",176,{"inputs":[{"name":"self"},{"name":"memcore"}],"output":{"name":"imagebuilder"}}],[11,"image_format","","Specifies the image pixel format.",176,{"inputs":[{"name":"self"},{"name":"imageformat"}],"output":{"name":"imagebuilder"}}],[11,"image_desc","","Specifies the image descriptor containing a number of important settings.",176,{"inputs":[{"name":"self"},{"name":"imagedescriptor"}],"output":{"name":"imagebuilder"}}],[11,"build","","Builds with no host side image data memory specified and returns a new `Image`.",176,{"inputs":[{"name":"self"}],"output":{"generics":["image"],"name":"oclcoreresult"}}],[11,"new","","Returns a new `ProQueBuilder` with an empty / default configuration.",177,{"inputs":[],"output":{"name":"proquebuilder"}}],[11,"platform","","Sets the platform to be used and returns the builder.",177,{"inputs":[{"name":"self"},{"name":"platform"}],"output":{"name":"proquebuilder"}}],[11,"context","","Sets the context and returns the `ProQueBuilder`.",177,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"proquebuilder"}}],[11,"device","","Sets a device or devices to be used and returns a `ProQueBuilder` reference.",177,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"proquebuilder"}}],[11,"src","","Adds some source code to be compiled and returns the `ProQueBuilder`.",177,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"proquebuilder"}}],[11,"prog_bldr","","Adds a pre-configured `ProgramBuilder` and returns the `ProQueBuilder`.",177,{"inputs":[{"name":"self"},{"name":"programbuilder"}],"output":{"name":"proquebuilder"}}],[11,"dims","","Sets the built-in dimensions.",177,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"proquebuilder"}}],[11,"queue_properties","","Sets the command queue properties.",177,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"proquebuilder"}}],[11,"build","","Returns a new `ProQue`.",177,{"inputs":[{"name":"self"}],"output":{"generics":["proque"],"name":"oclresult"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_marker","","Converts this `ClWaitListPtrEnum` into a single marker event.",44,{"inputs":[{"name":"self"},{"name":"queue"}],"output":{"generics":["event"],"name":"oclresult"}}],[11,"to_list","","Returns an `EventList` containing owned copies of each element in this `ClWaitListPtrEnum`.",44,{"inputs":[{"name":"self"}],"output":{"name":"eventlist"}}],[11,"as_ptr_ptr","","",44,null],[11,"count","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from","","",44,{"inputs":[{"name":"eventcore"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"eventcore"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"eventcore"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"event"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"event"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"event"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"eventlist"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"eventlist"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,null],[11,"from","","",44,null],[11,"from","","",44,null],[11,"from","","",44,null],[11,"from","","",44,null],[11,"from","","",44,{"inputs":[{"generics":["eventlist"],"name":"ref"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"generics":["clwaitlistptr"],"name":"ref"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"generics":["clwaitlistptr"],"name":"box"}],"output":{"name":"clwaitlistptrenum"}}],[11,"from","","",44,{"inputs":[{"name":"option"}],"output":{"name":"clwaitlistptrenum"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"alloc_new","","",43,null],[11,"clone_from","","",43,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[11,"from","","",43,{"inputs":[{"name":"event"}],"output":{"name":"clnulleventptrenum"}}],[11,"from","","",43,{"inputs":[{"name":"eventlist"}],"output":{"name":"clnulleventptrenum"}}],[11,"from","","",43,null],[11,"from","","",43,{"inputs":[{"name":"option"}],"output":{"name":"clnulleventptrenum"}}],[11,"forget","ocl::async","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"new","ocl::builders","",36,{"inputs":[{"name":"imagechannelorder"},{"name":"imagechanneldatatype"}],"output":{"name":"imageformat"}}],[11,"new_rgba","","",36,{"inputs":[],"output":{"name":"imageformat"}}],[11,"from_raw","","",36,{"inputs":[{"name":"cl_image_format"}],"output":{"generics":["imageformat","imageformatparseerror"],"name":"result"}}],[11,"list_from_raw","","",36,{"inputs":[{"generics":["cl_image_format"],"name":"vec"}],"output":{"generics":["result"],"name":"vec"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"cl_image_format"}}],[11,"new_raw","","",36,{"inputs":[],"output":{"name":"cl_image_format"}}],[11,"pixel_bytes","","Returns the size in bytes of a pixel using the format specified by this `ImageFormat`.",36,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"new","","",37,{"inputs":[{"name":"memobjecttype"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"generics":["mem"],"name":"option"}],"output":{"name":"imagedescriptor"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"cl_image_desc"}}],[11,"new","","Returns an empty new list of context properties",105,{"inputs":[],"output":{"name":"contextproperties"}}],[11,"platform","","Specifies a platform (builder-style).",105,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"contextproperties"}}],[11,"interop_user_sync","","Specifies whether the user is responsible for synchronization between OpenCL and other APIs (builder-style).",105,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"contextproperties"}}],[11,"gl_context","","Specifies an OpenGL context handle (builder-style).",105,null],[11,"glx_display","","Specifies a Display pointer for the GLX context (builder-style).",105,null],[11,"wgl_hdc","","Specifies a Display pointer for the WGL HDC (builder-style).",105,null],[11,"cgl_sharegroup","","Specifies an OpenGL context CGL share group to associate the OpenCL context with (builder-style).",105,null],[11,"egl_display","","Specifies a pointer for the EGL display (builder-style).",105,null],[11,"property_value","","Pushes a `ContextPropertyValue` onto this list of properties (builder-style).",105,{"inputs":[{"name":"self"},{"name":"contextpropertyvalue"}],"output":{"name":"contextproperties"}}],[11,"set_platform","","Specifies a platform.",105,null],[11,"set_interop_user_sync","","Specifies whether the user is responsible for synchronization between OpenCL and other APIs.",105,null],[11,"set_gl_context","","Specifies an OpenGL context handle.",105,null],[11,"set_glx_display","","Specifies a Display pointer for the GLX context.",105,null],[11,"set_wgl_hdc","","Specifies a Display pointer for the WGL HDC.",105,null],[11,"set_cgl_sharegroup","","Specifies an OpenGL context CGL share group to associate the OpenCL context with.",105,null],[11,"set_egl_display","","Specifies a pointer for the EGL display.",105,null],[11,"set_property_value","","Pushes a `ContextPropertyValue` onto this list of properties.",105,null],[11,"get_platform","","Returns a platform id or none.",105,{"inputs":[{"name":"self"}],"output":{"generics":["platformid"],"name":"option"}}],[11,"contains_gl_context_or_sharegroup","","Returns true if this set of context properties specifies any OpenGL context or sharegroup to associate with.",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_raw","","Converts this list into a packed-word representation as specified here.",105,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"vec"}}],[11,"extract_property_from_raw","","Returns a single context property value.",105,null],[11,"from_raw","","Converts raw stuff into other stuff.",105,null],[11,"new","ocl::flags","",96,{"inputs":[],"output":{"name":"devicetype"}}],[11,"system_default","","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"cpu","","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"gpu","","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"accelerator","","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"custom","","",96,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[18,"DEFAULT","","",96,null],[18,"CPU","","",96,null],[18,"GPU","","",96,null],[18,"ACCELERATOR","","",96,null],[18,"CUSTOM","","",96,null],[18,"ALL","","",96,null],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[],"output":{"name":"devicetype"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[],"output":{"name":"devicetype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"u64"}],"output":{"generics":["devicetype"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",96,{"inputs":[{"name":"u64"}],"output":{"name":"devicetype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,null],[11,"remove","","Removes the specified flags in-place.",96,null],[11,"toggle","","Toggles the specified flags in-place.",96,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",96,null],[18,"DENORM","","",99,null],[18,"INF_NAN","","",99,null],[18,"ROUND_TO_NEAREST","","",99,null],[18,"ROUND_TO_ZERO","","",99,null],[18,"ROUND_TO_INF","","",99,null],[18,"FMA","","",99,null],[18,"SOFT_FLOAT","","",99,null],[18,"CORRECTLY_ROUNDED_DIVIDE_SQRT","","",99,null],[11,"empty","","Returns an empty set of flags.",99,{"inputs":[],"output":{"name":"devicefpconfig"}}],[11,"all","","Returns the set containing all flags.",99,{"inputs":[],"output":{"name":"devicefpconfig"}}],[11,"bits","","Returns the raw value of the flags currently stored.",99,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",99,{"inputs":[{"name":"u64"}],"output":{"generics":["devicefpconfig"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",99,{"inputs":[{"name":"u64"}],"output":{"name":"devicefpconfig"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",99,null],[11,"remove","","Removes the specified flags in-place.",99,null],[11,"toggle","","Toggles the specified flags in-place.",99,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",99,null],[18,"KERNEL","","",103,null],[18,"NATIVE_KERNEL","","",103,null],[11,"empty","","Returns an empty set of flags.",103,{"inputs":[],"output":{"name":"deviceexeccapabilities"}}],[11,"all","","Returns the set containing all flags.",103,{"inputs":[],"output":{"name":"deviceexeccapabilities"}}],[11,"bits","","Returns the raw value of the flags currently stored.",103,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",103,{"inputs":[{"name":"u64"}],"output":{"generics":["deviceexeccapabilities"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",103,{"inputs":[{"name":"u64"}],"output":{"name":"deviceexeccapabilities"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",103,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",103,null],[11,"remove","","Removes the specified flags in-place.",103,null],[11,"toggle","","Toggles the specified flags in-place.",103,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",103,null],[11,"new","","",100,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"out_of_order","","",100,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"profiling","","",100,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[18,"OUT_OF_ORDER_EXEC_MODE_ENABLE","","",100,null],[18,"PROFILING_ENABLE","","",100,null],[18,"ON_DEVICE","","",100,null],[18,"ON_DEVICE_DEFAULT","","",100,null],[11,"empty","","Returns an empty set of flags.",100,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"all","","Returns the set containing all flags.",100,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"bits","","Returns the raw value of the flags currently stored.",100,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",100,{"inputs":[{"name":"u64"}],"output":{"generics":["commandqueueproperties"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",100,{"inputs":[{"name":"u64"}],"output":{"name":"commandqueueproperties"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",100,null],[11,"remove","","Removes the specified flags in-place.",100,null],[11,"toggle","","Toggles the specified flags in-place.",100,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",100,null],[18,"NUMA","","",94,null],[18,"L4_CACHE","","",94,null],[18,"L3_CACHE","","",94,null],[18,"L2_CACHE","","",94,null],[18,"L1_CACHE","","",94,null],[18,"NEXT_PARTITIONABLE","","",94,null],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[],"output":{"name":"deviceaffinitydomain"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[],"output":{"name":"deviceaffinitydomain"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"u64"}],"output":{"generics":["deviceaffinitydomain"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",94,{"inputs":[{"name":"u64"}],"output":{"name":"deviceaffinitydomain"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",94,null],[11,"remove","","Removes the specified flags in-place.",94,null],[11,"toggle","","Toggles the specified flags in-place.",94,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",94,null],[11,"new","","",101,{"inputs":[],"output":{"name":"memflags"}}],[11,"read_write","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"write_only","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"read_only","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"use_host_ptr","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"alloc_host_ptr","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"copy_host_ptr","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_write_only","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_read_only","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_no_access","","",101,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[18,"READ_WRITE","","",101,null],[18,"WRITE_ONLY","","",101,null],[18,"READ_ONLY","","",101,null],[18,"USE_HOST_PTR","","",101,null],[18,"ALLOC_HOST_PTR","","",101,null],[18,"COPY_HOST_PTR","","",101,null],[18,"HOST_WRITE_ONLY","","",101,null],[18,"HOST_READ_ONLY","","",101,null],[18,"HOST_NO_ACCESS","","",101,null],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"memflags"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"memflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"u64"}],"output":{"generics":["memflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,{"inputs":[{"name":"u64"}],"output":{"name":"memflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,null],[11,"remove","","Removes the specified flags in-place.",101,null],[11,"toggle","","Toggles the specified flags in-place.",101,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",101,null],[18,"OBJECT_HOST","","",97,null],[18,"OBJECT_CONTENT_UNDEFINED","","",97,null],[11,"empty","","Returns an empty set of flags.",97,{"inputs":[],"output":{"name":"memmigrationflags"}}],[11,"all","","Returns the set containing all flags.",97,{"inputs":[],"output":{"name":"memmigrationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",97,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",97,{"inputs":[{"name":"u64"}],"output":{"generics":["memmigrationflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",97,{"inputs":[{"name":"u64"}],"output":{"name":"memmigrationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",97,null],[11,"remove","","Removes the specified flags in-place.",97,null],[11,"toggle","","Toggles the specified flags in-place.",97,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",97,null],[11,"new","","",98,{"inputs":[],"output":{"name":"mapflags"}}],[11,"read","","",98,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"write","","",98,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"write_invalidate_region","","",98,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[18,"READ","","",98,null],[18,"WRITE","","",98,null],[18,"WRITE_INVALIDATE_REGION","","",98,null],[11,"empty","","Returns an empty set of flags.",98,{"inputs":[],"output":{"name":"mapflags"}}],[11,"all","","Returns the set containing all flags.",98,{"inputs":[],"output":{"name":"mapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",98,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",98,{"inputs":[{"name":"u64"}],"output":{"generics":["mapflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",98,{"inputs":[{"name":"u64"}],"output":{"name":"mapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",98,null],[11,"remove","","Removes the specified flags in-place.",98,null],[11,"toggle","","Toggles the specified flags in-place.",98,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",98,null],[18,"NONE","","",95,null],[18,"COMPILED_OBJECT","","",95,null],[18,"LIBRARY","","",95,null],[18,"EXECUTABLE","","",95,null],[11,"empty","","Returns an empty set of flags.",95,{"inputs":[],"output":{"name":"programbinarytype"}}],[11,"all","","Returns the set containing all flags.",95,{"inputs":[],"output":{"name":"programbinarytype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",95,{"inputs":[{"name":"u32"}],"output":{"generics":["programbinarytype"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",95,{"inputs":[{"name":"u32"}],"output":{"name":"programbinarytype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",95,null],[11,"remove","","Removes the specified flags in-place.",95,null],[11,"toggle","","Toggles the specified flags in-place.",95,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",95,null],[18,"NONE","","",102,null],[18,"CONST","","",102,null],[18,"RESTRICT","","",102,null],[18,"VOLATILE","","",102,null],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[],"output":{"name":"kernelargtypequalifier"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[],"output":{"name":"kernelargtypequalifier"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelargtypequalifier"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",102,{"inputs":[{"name":"u64"}],"output":{"name":"kernelargtypequalifier"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,null],[11,"remove","","Removes the specified flags in-place.",102,null],[11,"toggle","","Toggles the specified flags in-place.",102,null],[11,"set","","Inserts or removes the specified flags depending on the passed value.",102,null],[11,"mem","ocl::enums","Returns a new `ArgVal` referring to a `Mem` object.",104,{"inputs":[{"name":"mem"}],"output":{"name":"argval"}}],[11,"mem_null","","Returns a new `ArgVal` corresponding to a null `Mem` object.",104,{"inputs":[],"output":{"name":"argval"}}],[11,"sampler","","Returns a new `ArgVal` referring to a `Sampler` object.",104,{"inputs":[{"name":"sampler"}],"output":{"name":"argval"}}],[11,"sampler_null","","Returns a new `ArgVal` referring to a null `Sampler` object.",104,{"inputs":[],"output":{"name":"argval"}}],[11,"primitive","","Returns a new `ArgVal` referring to a scalar or vector primitive.",104,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"scalar","","Returns a new `ArgVal` referring to a scalar primitive.",104,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"vector","","Returns a new `ArgVal` referring to a vector primitive.",104,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"local","","Returns a new `ArgVal` corresponding to a `__local` argument.",104,{"inputs":[{"name":"usize"}],"output":{"name":"argval"}}],[11,"from_raw","","Returns a new `ArgVal` containing the size in bytes and a raw pointer to the argument value.",104,null],[11,"as_raw","","Returns the size (in bytes) and raw pointer to the contained kernel argument value.",104,null],[11,"is_null","","Returns `true` if this `ArgVal` represents a null `Mem` or `Sampler` object.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_bytes","","",79,{"inputs":[{"name":"platforminfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["platforminforesult","error"],"name":"result"}}],[11,"as_opencl_version","","Parse the `Version` string and get a numeric result as `OpenclVersion`.",79,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion","error"],"name":"result"}}],[11,"from_bytes_max_work_item_sizes","","Returns a new `DeviceInfoResult::MaxWorkItemSizes` variant.",80,{"inputs":[{"name":"deviceinfo"},{"generics":["u8"],"name":"vec"},{"name":"u32"}],"output":{"generics":["deviceinforesult","error"],"name":"result"}}],[11,"from_bytes","","Returns a new `DeviceInfoResult` for all variants except `MaxWorkItemSizes`.",80,{"inputs":[{"name":"deviceinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["deviceinforesult","error"],"name":"result"}}],[11,"as_opencl_version","","Parse the `Version` string and get a numeric result as `OpenclVersion`.",80,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion","error"],"name":"result"}}],[11,"from_bytes","","",81,{"inputs":[{"name":"contextinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["contextinforesult","error"],"name":"result"}}],[11,"platform","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["platformid"],"name":"option"}}],[11,"from_bytes","","",82,{"inputs":[{"name":"commandqueueinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["commandqueueinforesult","error"],"name":"result"}}],[11,"from_bytes","","",83,{"inputs":[{"name":"meminfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["meminforesult","error"],"name":"result"}}],[11,"from_bytes","","",84,{"inputs":[{"name":"imageinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["imageinforesult","error"],"name":"result"}}],[11,"from_bytes","","",85,{"inputs":[{"name":"samplerinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["samplerinforesult","error"],"name":"result"}}],[11,"from_bytes","","",86,{"inputs":[{"name":"programinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["programinforesult","error"],"name":"result"}}],[11,"from_bytes","","",87,{"inputs":[{"name":"programbuildinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["programbuildinforesult","error"],"name":"result"}}],[11,"from_bytes","","",88,{"inputs":[{"name":"kernelinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelinforesult","error"],"name":"result"}}],[11,"from_bytes","","",89,{"inputs":[{"name":"kernelarginfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelarginforesult","error"],"name":"result"}}],[11,"from_bytes","","",90,{"inputs":[{"name":"kernelworkgroupinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelworkgroupinforesult","error"],"name":"result"}}],[11,"from_bytes","","",91,{"inputs":[{"name":"eventinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["eventinforesult","error"],"name":"result"}}],[11,"from_bytes","","",92,{"inputs":[{"name":"profilinginfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["profilinginforesult","error"],"name":"result"}}],[11,"time","","",92,{"inputs":[{"name":"self"}],"output":{"generics":["u64","error"],"name":"result"}}]],"paths":[[4,"SpatialDims"],[4,"BufferCmdError"],[3,"Extensions"],[3,"Platform"],[3,"Device"],[3,"Context"],[3,"Program"],[3,"Kernel"],[3,"Queue"],[3,"Buffer"],[3,"Image"],[3,"Sampler"],[3,"ProQue"],[3,"Event"],[3,"EventArray"],[3,"EventList"],[4,"ErrorKind"],[3,"Error"],[3,"FutureMemMap"],[3,"ReadGuard"],[3,"WriteGuard"],[3,"FutureGuard"],[3,"OrderLock"],[3,"RwVec"],[3,"MemMap"],[3,"FutureFlush"],[3,"BufferSinkInner"],[3,"BufferSink"],[3,"FutureFlood"],[3,"BufferStreamInner"],[3,"BufferStream"],[8,"OrderGuard"],[8,"WorkDims"],[8,"MemLen"],[8,"IntoMarker"],[8,"IntoRawEventArray"],[3,"ImageFormat"],[3,"ImageDescriptor"],[4,"BuildOpt"],[4,"DeviceSpecifier"],[4,"BufferCmdKind"],[4,"BufferCmdDataShape"],[4,"ImageCmdKind"],[4,"ClNullEventPtrEnum"],[4,"ClWaitListPtrEnum"],[4,"ImageChannelOrder"],[4,"ImageChannelDataType"],[4,"Cbool"],[4,"Polling"],[4,"PlatformInfo"],[4,"DeviceInfo"],[4,"DeviceMemCacheType"],[4,"DeviceLocalMemType"],[4,"ContextInfo"],[4,"ContextProperty"],[4,"ContextInfoOrPropertiesPointerType"],[4,"DevicePartitionProperty"],[4,"CommandQueueInfo"],[4,"ChannelType"],[4,"MemObjectType"],[4,"MemInfo"],[4,"ImageInfo"],[4,"AddressingMode"],[4,"FilterMode"],[4,"SamplerInfo"],[4,"ProgramInfo"],[4,"ProgramBuildInfo"],[4,"ProgramBuildStatus"],[4,"KernelInfo"],[4,"KernelArgInfo"],[4,"KernelArgAddressQualifier"],[4,"KernelArgAccessQualifier"],[4,"KernelWorkGroupInfo"],[4,"EventInfo"],[4,"CommandType"],[4,"CommandExecutionStatus"],[4,"BufferCreateType"],[4,"ProfilingInfo"],[4,"ContextPropertyValue"],[4,"PlatformInfoResult"],[4,"DeviceInfoResult"],[4,"ContextInfoResult"],[4,"CommandQueueInfoResult"],[4,"MemInfoResult"],[4,"ImageInfoResult"],[4,"SamplerInfoResult"],[4,"ProgramInfoResult"],[4,"ProgramBuildInfoResult"],[4,"KernelInfoResult"],[4,"KernelArgInfoResult"],[4,"KernelWorkGroupInfoResult"],[4,"EventInfoResult"],[4,"ProfilingInfoResult"],[4,"Status"],[3,"DeviceAffinityDomain"],[3,"ProgramBinaryType"],[3,"DeviceType"],[3,"MemMigrationFlags"],[3,"MapFlags"],[3,"DeviceFpConfig"],[3,"CommandQueueProperties"],[3,"MemFlags"],[3,"KernelArgTypeQualifier"],[3,"DeviceExecCapabilities"],[3,"ArgVal"],[3,"ContextProperties"],[3,"Int"],[3,"Short16"],[3,"Long3"],[3,"Ulong3"],[3,"Short2"],[3,"Uchar"],[3,"Long8"],[3,"Ulong"],[3,"Uchar4"],[3,"Ulong2"],[3,"Ushort3"],[3,"Double2"],[3,"Int16"],[3,"Char16"],[3,"Double3"],[3,"Uint16"],[3,"Long"],[3,"Ushort16"],[3,"Char2"],[3,"Ushort"],[3,"Float2"],[3,"Uchar8"],[3,"Double4"],[3,"Uint4"],[3,"Ushort2"],[3,"Long16"],[3,"Char4"],[3,"Uchar3"],[3,"Double16"],[3,"Int4"],[3,"Long2"],[3,"Uint3"],[3,"Ushort8"],[3,"Float16"],[3,"Ulong8"],[3,"Char"],[3,"Int8"],[3,"Uint"],[3,"Short8"],[3,"Short3"],[3,"Ulong4"],[3,"Uchar2"],[3,"Short4"],[3,"Long4"],[3,"Double8"],[3,"Ushort4"],[3,"Float3"],[3,"Float"],[3,"Short"],[3,"Uchar16"],[3,"Float8"],[3,"Char3"],[3,"Uint8"],[3,"Float4"],[3,"Int3"],[3,"Int2"],[3,"Char8"],[3,"Uint2"],[3,"Double"],[3,"Ulong16"],[3,"ContextBuilder"],[3,"ProgramBuilder"],[3,"KernelCmd"],[3,"KernelBuilder"],[3,"BufferCmd"],[3,"BufferReadCmd"],[3,"BufferWriteCmd"],[3,"BufferMapCmd"],[3,"BufferBuilder"],[3,"ImageCmd"],[3,"ImageBuilder"],[3,"ProQueBuilder"]]};
searchIndex["ocl_core"] = {"doc":"Thin wrappers for the `OpenCL` FFI functions and types.","items":[[3,"Char","ocl_core","",null,null],[3,"Char2","","",null,null],[3,"Char3","","",null,null],[3,"Char4","","",null,null],[3,"Char8","","",null,null],[3,"Char16","","",null,null],[3,"Uchar","","",null,null],[3,"Uchar2","","",null,null],[3,"Uchar3","","",null,null],[3,"Uchar4","","",null,null],[3,"Uchar8","","",null,null],[3,"Uchar16","","",null,null],[3,"Short","","",null,null],[3,"Short2","","",null,null],[3,"Short3","","",null,null],[3,"Short4","","",null,null],[3,"Short8","","",null,null],[3,"Short16","","",null,null],[3,"Ushort","","",null,null],[3,"Ushort2","","",null,null],[3,"Ushort3","","",null,null],[3,"Ushort4","","",null,null],[3,"Ushort8","","",null,null],[3,"Ushort16","","",null,null],[3,"Int","","",null,null],[3,"Int2","","",null,null],[3,"Int3","","",null,null],[3,"Int4","","",null,null],[3,"Int8","","",null,null],[3,"Int16","","",null,null],[3,"Uint","","",null,null],[3,"Uint2","","",null,null],[3,"Uint3","","",null,null],[3,"Uint4","","",null,null],[3,"Uint8","","",null,null],[3,"Uint16","","",null,null],[3,"Long","","",null,null],[3,"Long2","","",null,null],[3,"Long3","","",null,null],[3,"Long4","","",null,null],[3,"Long8","","",null,null],[3,"Long16","","",null,null],[3,"Ulong","","",null,null],[3,"Ulong2","","",null,null],[3,"Ulong3","","",null,null],[3,"Ulong4","","",null,null],[3,"Ulong8","","",null,null],[3,"Ulong16","","",null,null],[3,"Float","","",null,null],[3,"Float2","","",null,null],[3,"Float3","","",null,null],[3,"Float4","","",null,null],[3,"Float8","","",null,null],[3,"Float16","","",null,null],[3,"Double","","",null,null],[3,"Double2","","",null,null],[3,"Double3","","",null,null],[3,"Double4","","",null,null],[3,"Double8","","",null,null],[3,"Double16","","",null,null],[3,"DeviceType","","cl_device_type - bitfield",null,null],[3,"DeviceFpConfig","","cl_device_fp_config - bitfield",null,null],[3,"DeviceExecCapabilities","","cl_device_exec_capabilities - bitfield",null,null],[3,"CommandQueueProperties","","cl_command_queue_properties - bitfield",null,null],[3,"DeviceAffinityDomain","","cl_device_affinity_domain",null,null],[3,"MemFlags","","cl_mem_flags - bitfield",null,null],[3,"MemMigrationFlags","","cl_mem_migration_flags - bitfield",null,null],[3,"MapFlags","","cl_map_flags - bitfield",null,null],[3,"ProgramBinaryType","","cl_program_binary_type",null,null],[3,"KernelArgTypeQualifier","","cl_kernel_arg_type_qualifer",null,null],[4,"Status","","The status of an OpenCL API call. Used for returning success/error codes.",null,null],[13,"CL_SUCCESS","","",0,null],[13,"CL_DEVICE_NOT_FOUND","","",0,null],[13,"CL_DEVICE_NOT_AVAILABLE","","",0,null],[13,"CL_COMPILER_NOT_AVAILABLE","","",0,null],[13,"CL_MEM_OBJECT_ALLOCATION_FAILURE","","",0,null],[13,"CL_OUT_OF_RESOURCES","","",0,null],[13,"CL_OUT_OF_HOST_MEMORY","","",0,null],[13,"CL_PROFILING_INFO_NOT_AVAILABLE","","",0,null],[13,"CL_MEM_COPY_OVERLAP","","",0,null],[13,"CL_IMAGE_FORMAT_MISMATCH","","",0,null],[13,"CL_IMAGE_FORMAT_NOT_SUPPORTED","","",0,null],[13,"CL_BUILD_PROGRAM_FAILURE","","",0,null],[13,"CL_MAP_FAILURE","","",0,null],[13,"CL_MISALIGNED_SUB_BUFFER_OFFSET","","",0,null],[13,"CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST","","",0,null],[13,"CL_COMPILE_PROGRAM_FAILURE","","",0,null],[13,"CL_LINKER_NOT_AVAILABLE","","",0,null],[13,"CL_LINK_PROGRAM_FAILURE","","",0,null],[13,"CL_DEVICE_PARTITION_FAILED","","",0,null],[13,"CL_KERNEL_ARG_INFO_NOT_AVAILABLE","","",0,null],[13,"CL_INVALID_VALUE","","",0,null],[13,"CL_INVALID_DEVICE_TYPE","","",0,null],[13,"CL_INVALID_PLATFORM","","",0,null],[13,"CL_INVALID_DEVICE","","",0,null],[13,"CL_INVALID_CONTEXT","","",0,null],[13,"CL_INVALID_QUEUE_PROPERTIES","","",0,null],[13,"CL_INVALID_COMMAND_QUEUE","","",0,null],[13,"CL_INVALID_HOST_PTR","","",0,null],[13,"CL_INVALID_MEM_OBJECT","","",0,null],[13,"CL_INVALID_IMAGE_FORMAT_DESCRIPTOR","","",0,null],[13,"CL_INVALID_IMAGE_SIZE","","",0,null],[13,"CL_INVALID_SAMPLER","","",0,null],[13,"CL_INVALID_BINARY","","",0,null],[13,"CL_INVALID_BUILD_OPTIONS","","",0,null],[13,"CL_INVALID_PROGRAM","","",0,null],[13,"CL_INVALID_PROGRAM_EXECUTABLE","","",0,null],[13,"CL_INVALID_KERNEL_NAME","","",0,null],[13,"CL_INVALID_KERNEL_DEFINITION","","",0,null],[13,"CL_INVALID_KERNEL","","",0,null],[13,"CL_INVALID_ARG_INDEX","","",0,null],[13,"CL_INVALID_ARG_VALUE","","",0,null],[13,"CL_INVALID_ARG_SIZE","","",0,null],[13,"CL_INVALID_KERNEL_ARGS","","",0,null],[13,"CL_INVALID_WORK_DIMENSION","","",0,null],[13,"CL_INVALID_WORK_GROUP_SIZE","","",0,null],[13,"CL_INVALID_WORK_ITEM_SIZE","","",0,null],[13,"CL_INVALID_GLOBAL_OFFSET","","",0,null],[13,"CL_INVALID_EVENT_WAIT_LIST","","",0,null],[13,"CL_INVALID_EVENT","","",0,null],[13,"CL_INVALID_OPERATION","","",0,null],[13,"CL_INVALID_GL_OBJECT","","",0,null],[13,"CL_INVALID_BUFFER_SIZE","","",0,null],[13,"CL_INVALID_MIP_LEVEL","","",0,null],[13,"CL_INVALID_GLOBAL_WORK_SIZE","","",0,null],[13,"CL_INVALID_PROPERTY","","",0,null],[13,"CL_INVALID_IMAGE_DESCRIPTOR","","",0,null],[13,"CL_INVALID_COMPILER_OPTIONS","","",0,null],[13,"CL_INVALID_LINKER_OPTIONS","","",0,null],[13,"CL_INVALID_DEVICE_PARTITION_COUNT","","",0,null],[13,"CL_INVALID_PIPE_SIZE","","",0,null],[13,"CL_INVALID_DEVICE_QUEUE","","",0,null],[13,"CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR","","",0,null],[13,"CL_PLATFORM_NOT_FOUND_KHR","","",0,null],[13,"CL_NV_INVALID_MEM_ACCESS","","",0,null],[4,"GlTextureTarget","","specify the texture target type",null,null],[13,"GlTexture1d","","",1,null],[13,"GlTexture1dArray","","",1,null],[13,"GlTextureBuffer","","",1,null],[13,"GlTexture2d","","",1,null],[13,"GlTexture2dArray","","",1,null],[13,"GlTexture3d","","",1,null],[13,"GlTextureCubeMapPositiveX","","",1,null],[13,"GlTextureCubeMapPositiveY","","",1,null],[13,"GlTextureCubeMapPositiveZ","","",1,null],[13,"GlTextureCubeMapNegativeX","","",1,null],[13,"GlTextureCubeMapNegativeY","","",1,null],[13,"GlTextureCubeMapNegativeZ","","",1,null],[13,"GlTextureRectangle","","",1,null],[4,"ClGlObjectType","","",null,null],[13,"ClGlObjectBuffer","","",2,null],[13,"ClGlObjectTexture2D","","",2,null],[13,"ClGlObjectTexture3D","","",2,null],[13,"ClGlObjectRenderbuffer","","",2,null],[13,"ClGlObjectTexture2DArray","","",2,null],[13,"ClGlObjectTexture1D","","",2,null],[13,"ClGlObjectTexture1DArray","","",2,null],[13,"ClGlObjectTextureBuffer","","",2,null],[4,"ImageChannelOrder","","Specifies the number of channels and the channel layout i.e. the memory layout in which channels are stored in the image. Valid values are described in the table below. (from SDK)",null,null],[13,"R","","",3,null],[13,"A","","",3,null],[13,"Rg","","",3,null],[13,"Ra","","",3,null],[13,"Rgb","","",3,null],[13,"Rgba","","",3,null],[13,"Bgra","","",3,null],[13,"Argb","","",3,null],[13,"Intensity","","",3,null],[13,"Luminance","","",3,null],[13,"Rx","","",3,null],[13,"Rgx","","",3,null],[13,"Rgbx","","",3,null],[13,"Depth","","",3,null],[13,"DepthStencil","","",3,null],[4,"ImageChannelDataType","","Describes the size of the channel data type. The number of bits per element determined by the image_channel_data_type and image_channel_order must be a power of two. The list of supported values is described in the table below. (from SDK)",null,null],[13,"SnormInt8","","",4,null],[13,"SnormInt16","","",4,null],[13,"UnormInt8","","",4,null],[13,"UnormInt16","","",4,null],[13,"UnormShort565","","",4,null],[13,"UnormShort555","","",4,null],[13,"UnormInt101010","","",4,null],[13,"SignedInt8","","",4,null],[13,"SignedInt16","","",4,null],[13,"SignedInt32","","",4,null],[13,"UnsignedInt8","","",4,null],[13,"UnsignedInt16","","",4,null],[13,"UnsignedInt32","","",4,null],[13,"HalfFloat","","",4,null],[13,"Float","","",4,null],[13,"UnormInt24","","",4,null],[4,"Cbool","","cl_bool",null,null],[13,"False","","",5,null],[13,"True","","",5,null],[4,"Polling","","cl_bool: Polling",null,null],[13,"Blocking","","",6,null],[13,"NonBlocking","","",6,null],[4,"PlatformInfo","","cl_platform_info",null,null],[13,"Profile","","",7,null],[13,"Version","","",7,null],[13,"Name","","",7,null],[13,"Vendor","","",7,null],[13,"Extensions","","",7,null],[4,"DeviceInfo","","cl_device_info",null,null],[13,"Type","","",8,null],[13,"VendorId","","",8,null],[13,"MaxComputeUnits","","",8,null],[13,"MaxWorkItemDimensions","","",8,null],[13,"MaxWorkGroupSize","","",8,null],[13,"MaxWorkItemSizes","","",8,null],[13,"PreferredVectorWidthChar","","",8,null],[13,"PreferredVectorWidthShort","","",8,null],[13,"PreferredVectorWidthInt","","",8,null],[13,"PreferredVectorWidthLong","","",8,null],[13,"PreferredVectorWidthFloat","","",8,null],[13,"PreferredVectorWidthDouble","","",8,null],[13,"MaxClockFrequency","","",8,null],[13,"AddressBits","","",8,null],[13,"MaxReadImageArgs","","",8,null],[13,"MaxWriteImageArgs","","",8,null],[13,"MaxMemAllocSize","","",8,null],[13,"Image2dMaxWidth","","",8,null],[13,"Image2dMaxHeight","","",8,null],[13,"Image3dMaxWidth","","",8,null],[13,"Image3dMaxHeight","","",8,null],[13,"Image3dMaxDepth","","",8,null],[13,"ImageSupport","","",8,null],[13,"MaxParameterSize","","",8,null],[13,"MaxSamplers","","",8,null],[13,"MemBaseAddrAlign","","",8,null],[13,"MinDataTypeAlignSize","","",8,null],[13,"SingleFpConfig","","",8,null],[13,"GlobalMemCacheType","","",8,null],[13,"GlobalMemCachelineSize","","",8,null],[13,"GlobalMemCacheSize","","",8,null],[13,"GlobalMemSize","","",8,null],[13,"MaxConstantBufferSize","","",8,null],[13,"MaxConstantArgs","","",8,null],[13,"LocalMemType","","",8,null],[13,"LocalMemSize","","",8,null],[13,"ErrorCorrectionSupport","","",8,null],[13,"ProfilingTimerResolution","","",8,null],[13,"EndianLittle","","",8,null],[13,"Available","","",8,null],[13,"CompilerAvailable","","",8,null],[13,"ExecutionCapabilities","","",8,null],[13,"QueueProperties","","",8,null],[13,"Name","","",8,null],[13,"Vendor","","",8,null],[13,"DriverVersion","","",8,null],[13,"Profile","","",8,null],[13,"Version","","",8,null],[13,"Extensions","","",8,null],[13,"Platform","","",8,null],[13,"DoubleFpConfig","","",8,null],[13,"HalfFpConfig","","",8,null],[13,"PreferredVectorWidthHalf","","",8,null],[13,"HostUnifiedMemory","","",8,null],[13,"NativeVectorWidthChar","","",8,null],[13,"NativeVectorWidthShort","","",8,null],[13,"NativeVectorWidthInt","","",8,null],[13,"NativeVectorWidthLong","","",8,null],[13,"NativeVectorWidthFloat","","",8,null],[13,"NativeVectorWidthDouble","","",8,null],[13,"NativeVectorWidthHalf","","",8,null],[13,"OpenclCVersion","","",8,null],[13,"LinkerAvailable","","",8,null],[13,"BuiltInKernels","","",8,null],[13,"ImageMaxBufferSize","","",8,null],[13,"ImageMaxArraySize","","",8,null],[13,"ParentDevice","","",8,null],[13,"PartitionMaxSubDevices","","",8,null],[13,"PartitionProperties","","",8,null],[13,"PartitionAffinityDomain","","",8,null],[13,"PartitionType","","",8,null],[13,"ReferenceCount","","",8,null],[13,"PreferredInteropUserSync","","",8,null],[13,"PrintfBufferSize","","",8,null],[13,"ImagePitchAlignment","","",8,null],[13,"ImageBaseAddressAlignment","","",8,null],[4,"DeviceMemCacheType","","cl_mem_cache_type",null,null],[13,"None","","",9,null],[13,"ReadOnlyCache","","",9,null],[13,"ReadWriteCache","","",9,null],[4,"DeviceLocalMemType","","cl_device_local_mem_type",null,null],[13,"None","","",10,null],[13,"Local","","",10,null],[13,"Global","","",10,null],[4,"ContextInfo","","cl_context_info",null,null],[13,"ReferenceCount","","",11,null],[13,"Devices","","",11,null],[13,"Properties","","",11,null],[13,"NumDevices","","",11,null],[4,"GlContextInfo","","cl_gl_context_info",null,null],[13,"CurrentDevice","","",12,null],[13,"Devices","","",12,null],[4,"ContextProperty","","cl_context_info + cl_context_properties",null,null],[13,"Platform","","",13,null],[13,"InteropUserSync","","",13,null],[13,"D3d10DeviceKhr","","",13,null],[13,"GlContextKhr","","",13,null],[13,"EglDisplayKhr","","",13,null],[13,"GlxDisplayKhr","","",13,null],[13,"CglSharegroupKhr","","",13,null],[13,"WglHdcKhr","","",13,null],[13,"AdapterD3d9Khr","","",13,null],[13,"AdapterD3d9exKhr","","",13,null],[13,"AdapterDxvaKhr","","",13,null],[13,"D3d11DeviceKhr","","",13,null],[4,"ContextInfoOrPropertiesPointerType","","cl_context_info + cl_context_properties",null,null],[13,"Platform","","",14,null],[13,"InteropUserSync","","",14,null],[4,"DevicePartitionProperty","","[INCOMPLETE] cl_device_partition_property",null,null],[13,"Equally","","",15,null],[13,"ByCounts","","",15,null],[13,"ByCountsListEnd","","",15,null],[13,"ByAffinityDomain","","",15,null],[4,"CommandQueueInfo","","cl_command_queue_info",null,null],[13,"Context","","",16,null],[13,"Device","","",16,null],[13,"ReferenceCount","","",16,null],[13,"Properties","","",16,null],[4,"ChannelType","","cl_channel_type",null,null],[13,"SnormInt8","","",17,null],[13,"SnormInt16","","",17,null],[13,"UnormInt8","","",17,null],[13,"UnormInt16","","",17,null],[13,"UnormShort565","","",17,null],[13,"UnormShort555","","",17,null],[13,"UnormInt101010","","",17,null],[13,"SignedInt8","","",17,null],[13,"SignedInt16","","",17,null],[13,"SignedInt32","","",17,null],[13,"UnsignedInt8","","",17,null],[13,"UnsignedInt16","","",17,null],[13,"UnsignedInt32","","",17,null],[13,"HalfFloat","","",17,null],[13,"Float","","",17,null],[13,"UnormInt24","","",17,null],[4,"MemObjectType","","cl_mem_object_type",null,null],[13,"Buffer","","",18,null],[13,"Image2d","","",18,null],[13,"Image3d","","",18,null],[13,"Image2dArray","","",18,null],[13,"Image1d","","",18,null],[13,"Image1dArray","","",18,null],[13,"Image1dBuffer","","",18,null],[4,"MemInfo","","cl_mem_info",null,null],[13,"Type","","",19,null],[13,"Flags","","",19,null],[13,"Size","","",19,null],[13,"HostPtr","","",19,null],[13,"MapCount","","",19,null],[13,"ReferenceCount","","",19,null],[13,"Context","","",19,null],[13,"AssociatedMemobject","","",19,null],[13,"Offset","","",19,null],[4,"ImageInfo","","cl_image_info",null,null],[13,"Format","","",20,null],[13,"ElementSize","","",20,null],[13,"RowPitch","","",20,null],[13,"SlicePitch","","",20,null],[13,"Width","","",20,null],[13,"Height","","",20,null],[13,"Depth","","",20,null],[13,"ArraySize","","",20,null],[13,"Buffer","","",20,null],[13,"NumMipLevels","","",20,null],[13,"NumSamples","","",20,null],[4,"AddressingMode","","cl_addressing_mode",null,null],[13,"None","","",21,null],[13,"ClampToEdge","","",21,null],[13,"Clamp","","",21,null],[13,"Repeat","","",21,null],[13,"MirroredRepeat","","",21,null],[4,"FilterMode","","cl_filter_mode",null,null],[13,"Nearest","","",22,null],[13,"Linear","","",22,null],[4,"SamplerInfo","","cl_sampler_info",null,null],[13,"ReferenceCount","","",23,null],[13,"Context","","",23,null],[13,"NormalizedCoords","","",23,null],[13,"AddressingMode","","",23,null],[13,"FilterMode","","",23,null],[4,"ProgramInfo","","cl_program_info",null,null],[13,"ReferenceCount","","",24,null],[13,"Context","","",24,null],[13,"NumDevices","","",24,null],[13,"Devices","","",24,null],[13,"Source","","",24,null],[13,"BinarySizes","","",24,null],[13,"Binaries","","",24,null],[13,"NumKernels","","",24,null],[13,"KernelNames","","",24,null],[4,"ProgramBuildInfo","","cl_program_build_info",null,null],[13,"BuildStatus","","",25,null],[13,"BuildOptions","","",25,null],[13,"BuildLog","","",25,null],[13,"BinaryType","","",25,null],[4,"ProgramBuildStatus","","cl_build_status",null,null],[13,"Success","","",26,null],[13,"None","","",26,null],[13,"Error","","",26,null],[13,"InProgress","","",26,null],[4,"KernelInfo","","cl_kernel_info",null,null],[13,"FunctionName","","",27,null],[13,"NumArgs","","",27,null],[13,"ReferenceCount","","",27,null],[13,"Context","","",27,null],[13,"Program","","",27,null],[13,"Attributes","","",27,null],[4,"KernelArgInfo","","cl_kernel_arg_info",null,null],[13,"AddressQualifier","","",28,null],[13,"AccessQualifier","","",28,null],[13,"TypeName","","",28,null],[13,"TypeQualifier","","",28,null],[13,"Name","","",28,null],[4,"KernelArgAddressQualifier","","cl_kernel_arg_address_qualifier",null,null],[13,"Global","","",29,null],[13,"Local","","",29,null],[13,"Constant","","",29,null],[13,"Private","","",29,null],[4,"KernelArgAccessQualifier","","cl_kernel_arg_access_qualifier",null,null],[13,"ReadOnly","","",30,null],[13,"WriteOnly","","",30,null],[13,"ReadWrite","","",30,null],[13,"None","","",30,null],[4,"KernelWorkGroupInfo","","cl_kernel_work_group_info",null,null],[13,"WorkGroupSize","","",31,null],[13,"CompileWorkGroupSize","","",31,null],[13,"LocalMemSize","","",31,null],[13,"PreferredWorkGroupSizeMultiple","","",31,null],[13,"PrivateMemSize","","",31,null],[13,"GlobalWorkSize","","",31,null],[4,"EventInfo","","cl_event_info",null,null],[13,"CommandQueue","","",32,null],[13,"CommandType","","",32,null],[13,"ReferenceCount","","",32,null],[13,"CommandExecutionStatus","","",32,null],[13,"Context","","",32,null],[4,"CommandType","","cl_command_type",null,null],[13,"NdrangeKernel","","",33,null],[13,"Task","","",33,null],[13,"NativeKernel","","",33,null],[13,"ReadBuffer","","",33,null],[13,"WriteBuffer","","",33,null],[13,"CopyBuffer","","",33,null],[13,"ReadImage","","",33,null],[13,"WriteImage","","",33,null],[13,"CopyImage","","",33,null],[13,"CopyImageToBuffer","","",33,null],[13,"CopyBufferToImage","","",33,null],[13,"MapBuffer","","",33,null],[13,"MapImage","","",33,null],[13,"UnmapMemObject","","",33,null],[13,"Marker","","",33,null],[13,"AcquireGlObjects","","",33,null],[13,"ReleaseGlObjects","","",33,null],[13,"ReadBufferRect","","",33,null],[13,"WriteBufferRect","","",33,null],[13,"CopyBufferRect","","",33,null],[13,"User","","",33,null],[13,"Barrier","","",33,null],[13,"MigrateMemObjects","","",33,null],[13,"FillBuffer","","",33,null],[13,"FillImage","","",33,null],[4,"CommandExecutionStatus","","command execution status",null,null],[13,"Complete","","",34,null],[13,"Running","","",34,null],[13,"Submitted","","",34,null],[13,"Queued","","",34,null],[4,"BufferCreateType","","cl_buffer_create_type",null,null],[13,"Region","","",35,null],[13,"__DUMMY","","",35,null],[4,"ProfilingInfo","","cl_profiling_info",null,null],[13,"Queued","","",36,null],[13,"Submit","","",36,null],[13,"Start","","",36,null],[13,"End","","",36,null],[5,"get_platform_ids","","Returns a list of available platforms as 'core' objects.",null,{"inputs":[],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[5,"get_platform_info","","Returns platform information of the requested type.",null,{"inputs":[{"name":"p"},{"name":"platforminfo"}],"output":{"generics":["platforminforesult"],"name":"oclcoreresult"}}],[5,"get_device_ids","","Returns a list of available devices for a particular platform.",null,{"inputs":[{"name":"p"},{"generics":["devicetype"],"name":"option"},{"generics":["u32"],"name":"option"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[5,"get_device_info","","Returns information about a device.",null,{"inputs":[{"name":"d"},{"name":"deviceinfo"}],"output":{"generics":["deviceinforesult"],"name":"oclcoreresult"}}],[5,"create_sub_devices","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"retain_device","","Increments the reference count of a device.",null,{"inputs":[{"name":"deviceid"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"release_device","","Decrements the reference count of a device.",null,{"inputs":[{"name":"deviceid"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"create_context","","Creates a new context pointer valid for all devices in `device_ids`.",null,null],[5,"create_context_from_type","","Creates a new context pointer for all devices of a specific type.",null,{"inputs":[{"generics":["contextproperties"],"name":"option"},{"name":"devicetype"},{"generics":["createcontextcallbackfn"],"name":"option"},{"generics":["userdataptr"],"name":"option"}],"output":{"generics":["context"],"name":"oclcoreresult"}}],[5,"retain_context","","Increments the reference count of a context.",null,{"inputs":[{"name":"c"}],"output":{"name":"oclcoreresult"}}],[5,"release_context","","Decrements reference count of a context.",null,{"inputs":[{"name":"c"}],"output":{"name":"oclcoreresult"}}],[5,"get_context_info","","Returns various kinds of context information.",null,{"inputs":[{"name":"c"},{"name":"contextinfo"}],"output":{"generics":["contextinforesult"],"name":"oclcoreresult"}}],[5,"create_command_queue","","Returns a new command queue pointer.",null,{"inputs":[{"name":"c"},{"name":"d"},{"generics":["commandqueueproperties"],"name":"option"}],"output":{"generics":["commandqueue"],"name":"oclcoreresult"}}],[5,"retain_command_queue","","Increments the reference count of a command queue.",null,{"inputs":[{"name":"commandqueue"}],"output":{"name":"oclcoreresult"}}],[5,"release_command_queue","","Decrements the reference count of a command queue.",null,{"inputs":[{"name":"commandqueue"}],"output":{"name":"oclcoreresult"}}],[5,"get_command_queue_info","","Returns information about a command queue",null,{"inputs":[{"name":"commandqueue"},{"name":"commandqueueinfo"}],"output":{"generics":["commandqueueinforesult"],"name":"oclcoreresult"}}],[5,"create_buffer","","Returns a new buffer pointer with size (bytes): `len` * sizeof(T).",null,{"inputs":[{"name":"c"},{"name":"memflags"},{"name":"usize"},{"name":"option"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_sub_buffer","","Creates a new buffer object (referred to as a sub-buffer object) from an existing buffer object.",null,{"inputs":[{"name":"mem"},{"name":"memflags"},{"name":"bufferregion"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_image","","Returns a new image (mem) pointer.",null,{"inputs":[{"name":"c"},{"name":"memflags"},{"name":"imageformat"},{"name":"imagedescriptor"},{"name":"option"},{"name":"option"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"retain_mem_object","","Increments the reference counter of a mem object.",null,{"inputs":[{"name":"mem"}],"output":{"name":"oclcoreresult"}}],[5,"release_mem_object","","Decrements the reference counter of a mem object.",null,{"inputs":[{"name":"mem"}],"output":{"name":"oclcoreresult"}}],[5,"get_supported_image_formats","","Returns a list of supported image formats.",null,{"inputs":[{"name":"c"},{"name":"memflags"},{"name":"memobjecttype"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[5,"get_mem_object_info","","Get mem object info.",null,{"inputs":[{"name":"mem"},{"name":"meminfo"}],"output":{"generics":["meminforesult"],"name":"oclcoreresult"}}],[5,"get_image_info","","Get image info.",null,{"inputs":[{"name":"mem"},{"name":"imageinfo"}],"output":{"generics":["imageinforesult"],"name":"oclcoreresult"}}],[5,"set_mem_object_destructor_callback","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[],"output":{"name":"oclcoreresult"}}],[5,"create_sampler","","Creates and returns a new sampler object.",null,{"inputs":[{"name":"c"},{"name":"bool"},{"name":"addressingmode"},{"name":"filtermode"}],"output":{"generics":["sampler"],"name":"oclcoreresult"}}],[5,"retain_sampler","","Increments a sampler reference counter.",null,{"inputs":[{"name":"sampler"}],"output":{"name":"oclcoreresult"}}],[5,"release_sampler","","Decrements a sampler reference counter.",null,{"inputs":[{"name":"sampler"}],"output":{"name":"oclcoreresult"}}],[5,"get_sampler_info","","Returns information about the sampler object.",null,{"inputs":[{"name":"sampler"},{"name":"samplerinfo"}],"output":{"generics":["samplerinforesult"],"name":"oclcoreresult"}}],[5,"create_program_with_source","","Creates a new program.",null,null],[5,"create_program_with_binary","","Creates a program object for a context, and loads the binary bits specified by binary into the program object.",null,null],[5,"create_program_with_built_in_kernels","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"retain_program","","Increments a program reference counter.",null,{"inputs":[{"name":"program"}],"output":{"name":"oclcoreresult"}}],[5,"release_program","","Decrements a program reference counter.",null,{"inputs":[{"name":"program"}],"output":{"name":"oclcoreresult"}}],[5,"build_program","","Builds a program.",null,{"inputs":[{"name":"program"},{"name":"option"},{"name":"cstring"},{"generics":["buildprogramcallbackfn"],"name":"option"},{"generics":["box"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"compile_program","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"link_program","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"create_build_program","","Creates, builds, and returns a new program pointer from `src_strings`.",null,null],[5,"get_program_info","","Get program info.",null,{"inputs":[{"name":"program"},{"name":"programinfo"}],"output":{"generics":["programinforesult"],"name":"oclcoreresult"}}],[5,"get_program_build_info","","Get program build info.",null,{"inputs":[{"name":"program"},{"name":"d"},{"name":"programbuildinfo"}],"output":{"generics":["programbuildinforesult"],"name":"oclcoreresult"}}],[5,"create_kernel","","Returns a new kernel.",null,{"inputs":[{"name":"program"},{"name":"s"}],"output":{"generics":["kernel"],"name":"oclcoreresult"}}],[5,"create_kernels_in_program","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[],"output":{"name":"oclcoreresult"}}],[5,"retain_kernel","","Increments a kernel reference counter.",null,{"inputs":[{"name":"kernel"}],"output":{"name":"oclcoreresult"}}],[5,"release_kernel","","Decrements a kernel reference counter.",null,{"inputs":[{"name":"kernel"}],"output":{"name":"oclcoreresult"}}],[5,"set_kernel_arg","","Sets the argument value for the kernel argument at `index`.",null,{"inputs":[{"name":"kernel"},{"name":"u32"},{"name":"argval"}],"output":{"name":"oclcoreresult"}}],[5,"get_kernel_info","","Get kernel info.",null,{"inputs":[{"name":"kernel"},{"name":"kernelinfo"}],"output":{"generics":["kernelinforesult"],"name":"oclcoreresult"}}],[5,"get_kernel_arg_info","","Get kernel arg info.",null,{"inputs":[{"name":"kernel"},{"name":"u32"},{"name":"kernelarginfo"},{"name":"option"}],"output":{"generics":["kernelarginforesult"],"name":"oclcoreresult"}}],[5,"get_kernel_work_group_info","","Get kernel work group info.",null,{"inputs":[{"name":"kernel"},{"name":"d"},{"name":"kernelworkgroupinfo"}],"output":{"generics":["kernelworkgroupinforesult"],"name":"oclcoreresult"}}],[5,"wait_for_events","","Blocks until the first `num_events` events in `event_list` are complete.",null,{"inputs":[{"name":"u32"},{"name":"clwaitlistptr"}],"output":{"name":"oclcoreresult"}}],[5,"get_event_info","","Get event info.",null,{"inputs":[{"name":"e"},{"name":"eventinfo"}],"output":{"generics":["eventinforesult"],"name":"oclcoreresult"}}],[5,"create_user_event","","Creates an event not already associated with any command.",null,{"inputs":[{"name":"c"}],"output":{"generics":["event"],"name":"oclcoreresult"}}],[5,"retain_event","","Increments an event's reference counter.",null,{"inputs":[{"name":"e"}],"output":{"name":"oclcoreresult"}}],[5,"release_event","","Decrements an event's reference counter.",null,{"inputs":[{"name":"e"}],"output":{"name":"oclcoreresult"}}],[5,"set_user_event_status","","Updates a user events status.",null,{"inputs":[{"name":"e"},{"name":"commandexecutionstatus"}],"output":{"name":"oclcoreresult"}}],[5,"set_event_callback","","Sets a callback function which is called as soon as the `callback_trigger` status is reached.",null,null],[5,"get_event_profiling_info","","Get event profiling info (for debugging / benchmarking).",null,{"inputs":[{"name":"e"},{"name":"profilinginfo"}],"output":{"generics":["profilinginforesult"],"name":"oclcoreresult"}}],[5,"flush","","Flushes a command queue.",null,{"inputs":[{"name":"commandqueue"}],"output":{"name":"oclcoreresult"}}],[5,"finish","","Waits for a queue to finish.",null,{"inputs":[{"name":"commandqueue"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_read_buffer","","Enqueues a read from device memory referred to by `buffer` to device memory, `data`.",null,null],[5,"enqueue_read_buffer_rect","","Enqueues a command to read from a rectangular region from a buffer object to host memory.",null,null],[5,"enqueue_write_buffer","","Enqueues a write from host memory, `data`, to device memory referred to by `buffer`.",null,null],[5,"enqueue_write_buffer_rect","","Enqueues a command to write from a rectangular region from host memory to a buffer object.",null,null],[5,"enqueue_copy_buffer","","Copies the contents of one buffer to another.",null,{"inputs":[{"name":"commandqueue"},{"name":"m"},{"name":"m"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"option"},{"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_copy_buffer_rect","","Enqueues a command to copy a rectangular region from a buffer object to another buffer object.",null,null],[5,"enqueue_read_image","","Reads an image from device to host memory.",null,null],[5,"enqueue_write_image","","Enqueues a command to write to an image or image array object from host memory.",null,null],[5,"enqueue_fill_image","","Enqueues a command to fill an image object with a specified color.",null,null],[5,"enqueue_copy_image","","Enqueues a command to copy image objects.",null,null],[5,"enqueue_copy_image_to_buffer","","Enqueues a command to copy an image object to a buffer object.",null,null],[5,"enqueue_copy_buffer_to_image","","Enqueues a command to copy a buffer object to an image object.",null,null],[5,"enqueue_map_buffer","","Enqueues a command to map a region of the buffer object given by `buffer` into the host address space and returns a pointer to this mapped region.",null,{"inputs":[{"name":"commandqueue"},{"name":"m"},{"name":"bool"},{"name":"mapflags"},{"name":"usize"},{"name":"usize"},{"name":"option"},{"name":"option"}],"output":{"generics":["memmap"],"name":"oclcoreresult"}}],[5,"enqueue_map_image","","Enqueues a command to map a region of the image object given by `image` into the host address space and returns a pointer to this mapped region.",null,null],[5,"enqueue_unmap_mem_object","","Enqueues a command to unmap a previously mapped region of a memory object.",null,{"inputs":[{"name":"commandqueue"},{"name":"m"},{"name":"memmap"},{"name":"option"},{"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_migrate_mem_objects","","Enqueues a command to indicate which device a set of memory objects should be associated with.",null,null],[5,"enqueue_kernel","","Enqueues a command to execute a kernel on a device.",null,null],[5,"enqueue_task","","Enqueues a command to execute a kernel on a device.",null,{"inputs":[{"name":"commandqueue"},{"name":"kernel"},{"name":"option"},{"name":"option"},{"generics":["str"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_native_kernel","","[UNIMPLEMENTED: Please implement me]",null,{"inputs":[],"output":{"name":"oclcoreresult"}}],[5,"enqueue_marker_with_wait_list","","Enqueues a marker command which waits for either a list of events to complete, or all previously enqueued commands to complete.",null,{"inputs":[{"name":"commandqueue"},{"name":"option"},{"name":"option"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_barrier_with_wait_list","","A synchronization point that enqueues a barrier operation.",null,{"inputs":[{"name":"commandqueue"},{"name":"option"},{"name":"option"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"get_extension_function_address_for_platform","","Returns the address of the extension function named by `func_name` for a given platform.",null,{"inputs":[{"name":"platformid"},{"name":"str"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"wait_for_event","","Blocks until an event is complete.",null,{"inputs":[{"name":"e"}],"output":{"name":"oclcoreresult"}}],[5,"event_status","","Returns the status of `event`.",null,{"inputs":[{"name":"e"}],"output":{"generics":["commandexecutionstatus"],"name":"oclcoreresult"}}],[5,"default_platform_idx","","Returns the default platform if set by an environment variable or config file.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"program_build_err","","If the program pointed to by `cl_program` for any of the devices listed in `device_ids` has a build log of any length, it will be returned as an errcode result.",null,null],[5,"verify_context","","Verifies that the `context` is in fact a context object pointer.",null,{"inputs":[{"name":"c"}],"output":{"name":"oclcoreresult"}}],[5,"default_platform","","Returns the default or first platform.",null,{"inputs":[],"output":{"generics":["platformid"],"name":"oclcoreresult"}}],[5,"default_device_type","","Returns the default device type bitflags as specified by environment variable or else `DEVICE_TYPE_ALL`.",null,{"inputs":[],"output":{"generics":["devicetype"],"name":"oclcoreresult"}}],[5,"device_versions","","Returns a list of versions for devices.",null,null],[5,"event_is_complete","","Returns true if an event is complete, false if not complete.",null,{"inputs":[{"name":"e"}],"output":{"generics":["bool"],"name":"oclcoreresult"}}],[5,"_dummy_event_callback","","Don't be a dummy. Buckle your `_dummy_callback`.",null,null],[5,"_complete_user_event","","If `event_status` is `CommandExecutionStatus::Complete`, the `cl_event` pointed to by `user_data` will be set to the same.",null,null],[5,"get_context_platform","","Returns the platform for a context.",null,{"inputs":[{"name":"c"}],"output":{"generics":["option"],"name":"oclcoreresult"}}],[5,"get_gl_context_info_khr","","[INOPERATIVE: Needs troubleshooting] Returns OpenGL context information.",null,{"inputs":[{"name":"contextproperties"},{"name":"glcontextinfo"}],"output":{"generics":["glcontextinforesult"],"name":"oclcoreresult"}}],[5,"create_from_gl_buffer","","Return a buffer pointer from a `OpenGL` buffer object.",null,{"inputs":[{"name":"c"},{"name":"cl_gluint"},{"name":"memflags"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_from_gl_renderbuffer","","Return a renderbuffer pointer from a `OpenGL` renderbuffer object.",null,{"inputs":[{"name":"c"},{"name":"cl_gluint"},{"name":"memflags"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_from_gl_texture","","Return a texture2D pointer from a `OpenGL` texture2D object.",null,{"inputs":[{"name":"c"},{"name":"cl_glenum"},{"name":"cl_glint"},{"name":"cl_gluint"},{"name":"memflags"},{"name":"option"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_from_gl_texture_2d","","Return a texture2D pointer from a `OpenGL` texture2D object.",null,{"inputs":[{"name":"c"},{"name":"cl_glenum"},{"name":"cl_glint"},{"name":"cl_gluint"},{"name":"memflags"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"create_from_gl_texture_3d","","Return a texture3D pointer from a `OpenGL` texture3D object.",null,{"inputs":[{"name":"c"},{"name":"cl_glenum"},{"name":"cl_glint"},{"name":"cl_gluint"},{"name":"memflags"}],"output":{"generics":["mem"],"name":"oclcoreresult"}}],[5,"enqueue_fill_buffer","","Enqueues a command to fill a buffer object with a pattern of a given pattern size.",null,{"inputs":[{"name":"commandqueue"},{"name":"m"},{"name":"t"},{"name":"usize"},{"name":"usize"},{"name":"option"},{"name":"option"},{"generics":["openclversion"],"name":"option"}],"output":{"name":"oclcoreresult"}}],[5,"enqueue_acquire_gl_objects","","Acquire OpenCL memory objects (buffers and images) that have been created from OpenGL objects.",null,null],[5,"enqueue_release_gl_objects","","Release OpenCL memory objects (buffers and images) that have been created from OpenGL objects.",null,null],[0,"types","","",null,null],[0,"abs","ocl_core::types","Abstract data type wrappers.",null,null],[3,"EventRefWrapper","ocl_core::types::abs","Wrapper used by `EventList` to send event pointers to core functions cheaply.",null,null],[3,"PlatformId","","cl_platform_id",null,null],[3,"DeviceId","","cl_device_id",null,null],[3,"Context","","cl_context",null,null],[3,"CommandQueue","","cl_command_queue",null,null],[3,"Mem","","cl_mem",null,null],[3,"MemMap","","A pointer to a region of mapped (pinned) memory.",null,null],[3,"Program","","cl_program",null,null],[3,"Kernel","","cl_kernel",null,null],[3,"Event","","cl_event",null,null],[3,"Sampler","","cl_sampler",null,null],[8,"AsMem","","`AsRef` with a type being carried along for convenience.",null,null],[10,"as_mem","","",37,{"inputs":[{"name":"self"}],"output":{"name":"mem"}}],[8,"MemCmdRw","","Types which can be passed as the primary (`ptr`) argument value to `::enqueue_read_buffer`, `::enqueue_write_buffer`, `::enqueue_read_buffer_rect`, `::enqueue_write_buffer_rect`, `::enqueue_read_image`, or `::enqueue_write_image`.",null,null],[8,"MemCmdAll","","Types which can be passed to any and all `::enqueue_...` functions as the primary (`ptr`) argument and can also be passed as kernel `cl_mem` arguments.",null,null],[8,"ClVersions","","Types with a fixed set of associated devices and an associated platform.",null,null],[10,"device_versions","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[10,"platform_version","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"verify_device_versions","","",38,null],[11,"verify_platform_version","","",38,null],[8,"ClEventPtrRef","","Types with a reference to a raw event pointer.",null,null],[10,"as_ptr_ref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[8,"ClNullEventPtr","","Types with a mutable pointer to a new, null raw event pointer.",null,null],[10,"alloc_new","","",40,null],[10,"clone_from","","",40,{"inputs":[{"name":"self"},{"name":"e"}],"output":null}],[8,"ClWaitListPtr","","Types with a reference to a raw event array and an associated element count.",null,null],[10,"as_ptr_ptr","","Returns a pointer to the first pointer in this list.",41,null],[10,"count","","Returns the number of items in this wait list.",41,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[8,"ClPlatformIdPtr","","Types with a reference to a raw platform_id pointer.",null,null],[10,"as_ptr","","",42,{"inputs":[{"name":"self"}],"output":{"name":"cl_platform_id"}}],[8,"ClDeviceIdPtr","","Types with a reference to a raw device_id pointer.",null,null],[10,"as_ptr","","",43,{"inputs":[{"name":"self"}],"output":{"name":"cl_device_id"}}],[8,"ClContextPtr","","Types with a copy of a context pointer.",null,null],[10,"as_ptr","","",44,{"inputs":[{"name":"self"}],"output":{"name":"cl_context"}}],[11,"new","","",45,{"inputs":[{"name":"cl_event"}],"output":{"name":"eventrefwrapper"}}],[11,"as_ptr_ref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"platformid"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"from_raw","","Creates a new `PlatformId` wrapper from a raw pointer.",46,{"inputs":[{"name":"cl_platform_id"}],"output":{"name":"platformid"}}],[11,"null","","Returns an invalid `PlatformId` used for initializing data structures meant to be filled with valid ones.",46,{"inputs":[],"output":{"name":"platformid"}}],[11,"as_ptr","","Returns a pointer.",46,{"inputs":[{"name":"self"}],"output":{"name":"cl_platform_id"}}],[11,"version","","Returns the queried and parsed OpenCL version for this platform.",46,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"as_ptr","","",46,{"inputs":[{"name":"self"}],"output":{"name":"cl_platform_id"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"platformid"}],"output":{"name":"bool"}}],[11,"device_versions","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"deviceid"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"from_raw","","Creates a new `DeviceId` wrapper from a raw pointer.",47,{"inputs":[{"name":"cl_device_id"}],"output":{"name":"deviceid"}}],[11,"null","","Returns an invalid `DeviceId` used for initializing data structures meant to be filled with valid ones.",47,{"inputs":[],"output":{"name":"deviceid"}}],[11,"as_raw","","Returns a pointer.",47,{"inputs":[{"name":"self"}],"output":{"name":"cl_device_id"}}],[11,"version","","Returns the queried and parsed OpenCL version for this device.",47,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"as_ptr","","",47,{"inputs":[{"name":"self"}],"output":{"name":"cl_device_id"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"deviceid"}],"output":{"name":"bool"}}],[11,"device_versions","","",47,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",47,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",48,{"inputs":[{"name":"cl_context"}],"output":{"name":"context"}}],[11,"from_raw_copied_ptr","","Only call this when passing a copied pointer such as from an `clGet*****Info` function.",48,{"inputs":[{"name":"cl_context"}],"output":{"name":"context"}}],[11,"as_ptr","","Returns a pointer, do not store it.",48,{"inputs":[{"name":"self"}],"output":{"name":"cl_context"}}],[11,"devices","","Returns the devices associated with this context.",48,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform","","Returns the platform associated with this context, if any.",48,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"oclcoreresult"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"drop","","Panics in the event of an error of type `Error::Status` except when the status code is `CL_INVALID_CONTEXT` (which is ignored).",48,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"bool"}}],[11,"device_versions","","",48,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",48,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",49,{"inputs":[{"name":"cl_command_queue"}],"output":{"name":"commandqueue"}}],[11,"from_raw_copied_ptr","","Only call this when passing a copied pointer such as from an `clGet*****Info` function.",49,{"inputs":[{"name":"cl_command_queue"}],"output":{"name":"commandqueue"}}],[11,"as_ptr","","Returns a pointer, do not store it.",49,{"inputs":[{"name":"self"}],"output":{"name":"cl_command_queue"}}],[11,"device","","Returns the `DeviceId` associated with this command queue.",49,{"inputs":[{"name":"self"}],"output":{"generics":["deviceid"],"name":"oclcoreresult"}}],[11,"context","","Returns the `Context` associated with this command queue.",49,{"inputs":[{"name":"self"}],"output":{"generics":["context"],"name":"oclcoreresult"}}],[11,"context_ptr","","Returns the `cl_context` associated with this command queue.",49,{"inputs":[{"name":"self"}],"output":{"generics":["cl_context"],"name":"oclcoreresult"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"commandqueue"}}],[11,"drop","","",49,{"inputs":[{"name":"self"}],"output":null}],[11,"as_ref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"commandqueue"}}],[11,"device_versions","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",50,{"inputs":[{"name":"cl_mem"}],"output":{"name":"mem"}}],[11,"from_raw_copied_ptr","","Only call this when passing a copied pointer such as from an `clGet*****Info` function.",50,{"inputs":[{"name":"cl_mem"}],"output":{"name":"mem"}}],[11,"as_ptr","","Returns a pointer, do not store it.",50,{"inputs":[{"name":"self"}],"output":{"name":"cl_mem"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"mem"}}],[11,"drop","","",50,{"inputs":[{"name":"self"}],"output":null}],[11,"as_mem","","",50,{"inputs":[{"name":"self"}],"output":{"name":"mem"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",51,null],[11,"as_ptr","","",51,null],[11,"as_mut_ptr","","",51,null],[11,"as_void_ptr","","",51,null],[11,"as_slice","","",51,null],[11,"as_slice_mut","","",51,null],[11,"as_mem","","",51,{"inputs":[{"name":"self"}],"output":{"name":"mem"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",52,{"inputs":[{"name":"cl_program"}],"output":{"name":"program"}}],[11,"from_raw_copied_ptr","","Only call this when passing a copied pointer such as from an `clGet*****Info` function.",52,{"inputs":[{"name":"cl_program"}],"output":{"name":"program"}}],[11,"as_ptr","","Returns a pointer, do not store it.",52,{"inputs":[{"name":"self"}],"output":{"name":"cl_program"}}],[11,"devices","","Returns the devices associated with this program.",52,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"program"}}],[11,"drop","","",52,{"inputs":[{"name":"self"}],"output":null}],[11,"device_versions","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",53,{"inputs":[{"name":"cl_kernel"}],"output":{"name":"kernel"}}],[11,"from_raw_copied_ptr","","Only call this when passing a copied pointer such as from an `clGet*****Info` function.",53,{"inputs":[{"name":"cl_kernel"}],"output":{"name":"kernel"}}],[11,"as_ptr","","Returns a pointer, do not store it.",53,{"inputs":[{"name":"self"}],"output":{"name":"cl_kernel"}}],[11,"program","","Returns the program associated with this kernel.",53,{"inputs":[{"name":"self"}],"output":{"generics":["program"],"name":"oclcoreresult"}}],[11,"devices","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"kernel"}}],[11,"drop","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"device_versions","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"oclcoreresult"}}],[11,"platform_version","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",54,null],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"null","","For passage directly to an 'event creation' function (such as enqueue...).",54,{"inputs":[],"output":{"name":"event"}}],[11,"user","","Creates and returns a new 'user' event.",54,{"inputs":[{"name":"c"}],"output":{"generics":["event"],"name":"oclcoreresult"}}],[11,"from_raw_create_ptr","","Only call this when passing the original newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",54,{"inputs":[{"name":"cl_event"}],"output":{"name":"event"}}],[11,"from_raw_copied_ptr","","Only use when cloning or copying from a pre-existing and valid `cl_event`.",54,{"inputs":[{"name":"cl_event"}],"output":{"generics":["event"],"name":"oclcoreresult"}}],[11,"set_complete","","Sets this user created event to `CommandExecutionStatus::Complete`.",54,{"inputs":[{"name":"self"}],"output":{"name":"oclcoreresult"}}],[11,"is_complete","","Queries the command status associated with this event and returns true if it is complete, false if incomplete or upon error.",54,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"oclcoreresult"}}],[11,"wait_for","","Causes the command queue to wait until this event is complete before returning.",54,{"inputs":[{"name":"self"}],"output":{"name":"oclcoreresult"}}],[11,"is_null","","Returns whether or not this event is associated with a command or is a user event.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_valid","","[FIXME]: ADD VALIDITY CHECK BY CALLING '_INFO' OR SOMETHING: NULL CHECK IS NOT ENOUGH",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_callback","","Sets a callback function, `callback_receiver`, to trigger upon completion of this event with an optional pointer to user data.",54,null],[11,"context","","Returns the `Context` associated with this event.",54,{"inputs":[{"name":"self"}],"output":{"generics":["context"],"name":"oclcoreresult"}}],[11,"as_ptr_ref","","Returns an immutable reference to a pointer, do not deref and store it unless you will manage its associated reference count carefully.",54,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"as_ptr_mut","","Returns a mutable reference to a pointer, do not deref then modify or store it unless you will manage its associated reference count carefully.",54,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"into_raw","","Consumes the `Event`, returning the wrapped `cl_event` pointer.",54,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"from_raw","","Constructs an `Event` from a raw `cl_event` pointer.",54,{"inputs":[{"name":"cl_event"}],"output":{"name":"event"}}],[11,"as_ptr_ptr","","",54,null],[11,"count","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"as_ptr_ref","","",54,{"inputs":[{"name":"self"}],"output":{"name":"cl_event"}}],[11,"as_ref","","",54,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"drop","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_create_ptr","","Only call this when passing a newly created pointer directly from `clCreate...`. Do not use this to clone or copy.",55,{"inputs":[{"name":"cl_sampler"}],"output":{"name":"sampler"}}],[11,"as_ptr","","Returns a pointer, do not store it.",55,{"inputs":[{"name":"self"}],"output":{"name":"cl_sampler"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"sampler"}}],[11,"drop","","",55,{"inputs":[{"name":"self"}],"output":null}],[0,"enums","ocl_core::types","Custom enumerators not specifically based on OpenCL C-style enums.",null,null],[4,"EmptyInfoResultError","ocl_core::types::enums","",null,null],[13,"Platform","","",56,null],[13,"Device","","",56,null],[13,"Context","","",56,null],[13,"GlContext","","",56,null],[13,"CommandQueue","","",56,null],[13,"Mem","","",56,null],[13,"Image","","",56,null],[13,"Sampler","","",56,null],[13,"Program","","",56,null],[13,"ProgramBuild","","",56,null],[13,"Kernel","","",56,null],[13,"KernelArg","","",56,null],[13,"KernelWorkGroup","","",56,null],[13,"Event","","",56,null],[13,"Profiling","","",56,null],[4,"PlatformInfoResult","","Platform info result.",null,null],[13,"Profile","","",57,null],[13,"Version","","",57,null],[13,"Name","","",57,null],[13,"Vendor","","",57,null],[13,"Extensions","","",57,null],[4,"DeviceInfoResult","","A device info result.",null,null],[13,"Type","","",58,null],[13,"VendorId","","",58,null],[13,"MaxComputeUnits","","",58,null],[13,"MaxWorkItemDimensions","","",58,null],[13,"MaxWorkGroupSize","","",58,null],[13,"MaxWorkItemSizes","","",58,null],[13,"PreferredVectorWidthChar","","",58,null],[13,"PreferredVectorWidthShort","","",58,null],[13,"PreferredVectorWidthInt","","",58,null],[13,"PreferredVectorWidthLong","","",58,null],[13,"PreferredVectorWidthFloat","","",58,null],[13,"PreferredVectorWidthDouble","","",58,null],[13,"MaxClockFrequency","","",58,null],[13,"AddressBits","","",58,null],[13,"MaxReadImageArgs","","",58,null],[13,"MaxWriteImageArgs","","",58,null],[13,"MaxMemAllocSize","","",58,null],[13,"Image2dMaxWidth","","",58,null],[13,"Image2dMaxHeight","","",58,null],[13,"Image3dMaxWidth","","",58,null],[13,"Image3dMaxHeight","","",58,null],[13,"Image3dMaxDepth","","",58,null],[13,"ImageSupport","","",58,null],[13,"MaxParameterSize","","",58,null],[13,"MaxSamplers","","",58,null],[13,"MemBaseAddrAlign","","",58,null],[13,"MinDataTypeAlignSize","","",58,null],[13,"SingleFpConfig","","",58,null],[13,"GlobalMemCacheType","","",58,null],[13,"GlobalMemCachelineSize","","",58,null],[13,"GlobalMemCacheSize","","",58,null],[13,"GlobalMemSize","","",58,null],[13,"MaxConstantBufferSize","","",58,null],[13,"MaxConstantArgs","","",58,null],[13,"LocalMemType","","",58,null],[13,"LocalMemSize","","",58,null],[13,"ErrorCorrectionSupport","","",58,null],[13,"ProfilingTimerResolution","","",58,null],[13,"EndianLittle","","",58,null],[13,"Available","","",58,null],[13,"CompilerAvailable","","",58,null],[13,"ExecutionCapabilities","","",58,null],[13,"QueueProperties","","",58,null],[13,"Name","","",58,null],[13,"Vendor","","",58,null],[13,"DriverVersion","","",58,null],[13,"Profile","","",58,null],[13,"Version","","",58,null],[13,"Extensions","","",58,null],[13,"Platform","","",58,null],[13,"DoubleFpConfig","","",58,null],[13,"HalfFpConfig","","",58,null],[13,"PreferredVectorWidthHalf","","",58,null],[13,"HostUnifiedMemory","","",58,null],[13,"NativeVectorWidthChar","","",58,null],[13,"NativeVectorWidthShort","","",58,null],[13,"NativeVectorWidthInt","","",58,null],[13,"NativeVectorWidthLong","","",58,null],[13,"NativeVectorWidthFloat","","",58,null],[13,"NativeVectorWidthDouble","","",58,null],[13,"NativeVectorWidthHalf","","",58,null],[13,"OpenclCVersion","","",58,null],[13,"LinkerAvailable","","",58,null],[13,"BuiltInKernels","","",58,null],[13,"ImageMaxBufferSize","","",58,null],[13,"ImageMaxArraySize","","",58,null],[13,"ParentDevice","","",58,null],[13,"PartitionMaxSubDevices","","",58,null],[13,"PartitionProperties","","",58,null],[13,"PartitionAffinityDomain","","",58,null],[13,"PartitionType","","",58,null],[13,"ReferenceCount","","",58,null],[13,"PreferredInteropUserSync","","",58,null],[13,"PrintfBufferSize","","",58,null],[13,"ImagePitchAlignment","","",58,null],[13,"ImageBaseAddressAlignment","","",58,null],[4,"ContextInfoResult","","A context info result.",null,null],[13,"ReferenceCount","","",59,null],[13,"Devices","","",59,null],[13,"Properties","","",59,null],[13,"NumDevices","","",59,null],[4,"GlContextInfoResult","","An OpenGL context info result.",null,null],[13,"CurrentDevice","","",60,null],[13,"Devices","","",60,null],[4,"CommandQueueInfoResult","","A command queue info result.",null,null],[13,"Context","","",61,null],[13,"Device","","",61,null],[13,"ReferenceCount","","",61,null],[13,"Properties","","",61,null],[4,"MemInfoResult","","A mem info result.",null,null],[13,"Type","","",62,null],[13,"Flags","","",62,null],[13,"Size","","",62,null],[13,"HostPtr","","",62,null],[13,"MapCount","","",62,null],[13,"ReferenceCount","","",62,null],[13,"Context","","",62,null],[13,"AssociatedMemobject","","",62,null],[13,"Offset","","",62,null],[4,"ImageInfoResult","","An image info result.",null,null],[13,"Format","","",63,null],[13,"ElementSize","","",63,null],[13,"RowPitch","","",63,null],[13,"SlicePitch","","",63,null],[13,"Width","","",63,null],[13,"Height","","",63,null],[13,"Depth","","",63,null],[13,"ArraySize","","",63,null],[13,"Buffer","","",63,null],[13,"NumMipLevels","","",63,null],[13,"NumSamples","","",63,null],[4,"SamplerInfoResult","","A sampler info result.",null,null],[13,"ReferenceCount","","",64,null],[13,"Context","","",64,null],[13,"NormalizedCoords","","",64,null],[13,"AddressingMode","","",64,null],[13,"FilterMode","","",64,null],[4,"ProgramInfoResult","","A program info result.",null,null],[13,"ReferenceCount","","",65,null],[13,"Context","","",65,null],[13,"NumDevices","","",65,null],[13,"Devices","","Contains a `Vec` containing the `DeviceId` associated with each device.",65,null],[13,"Source","","",65,null],[13,"BinarySizes","","Contains a `Vec` containing the size of the binary associated with each device.",65,null],[13,"Binaries","","Contains a `Vec` containing the bytes of the binary associated with each device.",65,null],[13,"NumKernels","","",65,null],[13,"KernelNames","","",65,null],[4,"ProgramBuildInfoResult","","A program build info result.",null,null],[13,"BuildStatus","","",66,null],[13,"BuildOptions","","",66,null],[13,"BuildLog","","",66,null],[13,"BinaryType","","",66,null],[4,"KernelInfoResult","","A kernel info result.",null,null],[13,"FunctionName","","",67,null],[13,"NumArgs","","",67,null],[13,"ReferenceCount","","",67,null],[13,"Context","","",67,null],[13,"Program","","",67,null],[13,"Attributes","","",67,null],[4,"KernelArgInfoResult","","A kernel arg info result.",null,null],[13,"AddressQualifier","","",68,null],[13,"AccessQualifier","","",68,null],[13,"TypeName","","",68,null],[13,"TypeQualifier","","",68,null],[13,"Name","","",68,null],[4,"KernelWorkGroupInfoResult","","A kernel work group info result.",null,null],[13,"WorkGroupSize","","",69,null],[13,"CompileWorkGroupSize","","",69,null],[13,"LocalMemSize","","",69,null],[13,"PreferredWorkGroupSizeMultiple","","",69,null],[13,"PrivateMemSize","","",69,null],[13,"GlobalWorkSize","","",69,null],[13,"Empty","","",69,null],[13,"Unavailable","","",69,null],[13,"CustomBuiltinOnly","","",69,null],[4,"EventInfoResult","","An event info result.",null,null],[13,"CommandQueue","","",70,null],[13,"CommandType","","",70,null],[13,"ReferenceCount","","",70,null],[13,"CommandExecutionStatus","","",70,null],[13,"Context","","",70,null],[4,"ProfilingInfoResult","","A profiling info result.",null,null],[13,"Queued","","",71,null],[13,"Submit","","",71,null],[13,"Start","","",71,null],[13,"End","","",71,null],[11,"cause","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",56,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",57,{"inputs":[{"name":"platforminfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["platforminforesult"],"name":"oclcoreresult"}}],[11,"as_opencl_version","","Parse the `Version` string and get a numeric result as `OpenclVersion`.",57,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes_max_work_item_sizes","","Returns a new `DeviceInfoResult::MaxWorkItemSizes` variant.",58,{"inputs":[{"name":"deviceinfo"},{"generics":["u8"],"name":"vec"},{"name":"u32"}],"output":{"generics":["deviceinforesult"],"name":"oclcoreresult"}}],[11,"from_bytes","","Returns a new `DeviceInfoResult` for all variants except `MaxWorkItemSizes`.",58,{"inputs":[{"name":"deviceinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["deviceinforesult"],"name":"oclcoreresult"}}],[11,"as_opencl_version","","Parse the `Version` string and get a numeric result as `OpenclVersion`.",58,{"inputs":[{"name":"self"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",59,{"inputs":[{"name":"contextinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["contextinforesult"],"name":"oclcoreresult"}}],[11,"platform","","",59,{"inputs":[{"name":"self"}],"output":{"generics":["platformid"],"name":"option"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",60,{"inputs":[{"name":"glcontextinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["glcontextinforesult"],"name":"oclcoreresult"}}],[11,"device","","Returns the device contained within.",60,{"inputs":[{"name":"self"}],"output":{"generics":["deviceid"],"name":"oclcoreresult"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",61,{"inputs":[{"name":"commandqueueinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["commandqueueinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",62,{"inputs":[{"name":"meminfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["meminforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",63,{"inputs":[{"name":"imageinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["imageinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",64,{"inputs":[{"name":"samplerinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["samplerinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",65,{"inputs":[{"name":"programinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["programinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",66,{"inputs":[{"name":"programbuildinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["programbuildinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",67,{"inputs":[{"name":"kernelinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",68,{"inputs":[{"name":"kernelarginfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelarginforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",69,{"inputs":[{"name":"kernelworkgroupinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["kernelworkgroupinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",70,{"inputs":[{"name":"eventinfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["eventinforesult"],"name":"oclcoreresult"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","",71,{"inputs":[{"name":"profilinginfo"},{"generics":["u8"],"name":"vec"}],"output":{"generics":["profilinginforesult"],"name":"oclcoreresult"}}],[11,"time","","",71,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"oclcoreresult"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"structs","ocl_core::types","Rust implementations of various structs used by the OpenCL API.",null,null],[3,"ArgVal","ocl_core::types::structs","A reference to a kernel argument value.",null,null],[3,"OpenclVersion","","Parsed OpenCL version in the layout `({major}, {minor})`.",null,null],[3,"ContextProperties","","Context properties list.",null,null],[3,"BufferRegion","","Defines a buffer region for creating a sub-buffer.",null,null],[3,"ImageFormat","","Image format properties used by `Image`.",null,null],[12,"channel_order","","",72,null],[12,"channel_data_type","","",72,null],[3,"ImageDescriptor","","An image descriptor use in the creation of `Image`.",null,null],[12,"image_type","","",73,null],[12,"image_width","","",73,null],[12,"image_height","","",73,null],[12,"image_depth","","",73,null],[12,"image_array_size","","",73,null],[12,"image_row_pitch","","",73,null],[12,"image_slice_pitch","","",73,null],[12,"buffer","","",73,null],[4,"ContextPropertyValue","","",null,null],[13,"Platform","","",74,null],[13,"InteropUserSync","","",74,null],[13,"D3d10DeviceKhr","","",74,null],[13,"GlContextKhr","","",74,null],[13,"EglDisplayKhr","","",74,null],[13,"GlxDisplayKhr","","",74,null],[13,"CglSharegroupKhr","","",74,null],[13,"WglHdcKhr","","",74,null],[13,"AdapterD3d9Khr","","",74,null],[13,"AdapterD3d9exKhr","","",74,null],[13,"AdapterDxvaKhr","","",74,null],[13,"D3d11DeviceKhr","","",74,null],[4,"ImageFormatParseError","","",null,null],[13,"UnknownImageChannelOrder","","",75,null],[13,"UnknownImageChannelDataType","","",75,null],[6,"TemporaryPlaceholderType","","",null,null],[6,"ImageFormatParseResult","","",null,null],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"argval"}}],[11,"mem","","Returns a new `ArgVal` referring to a `Mem` object.",76,{"inputs":[{"name":"mem"}],"output":{"name":"argval"}}],[11,"mem_null","","Returns a new `ArgVal` corresponding to a null `Mem` object.",76,{"inputs":[],"output":{"name":"argval"}}],[11,"sampler","","Returns a new `ArgVal` referring to a `Sampler` object.",76,{"inputs":[{"name":"sampler"}],"output":{"name":"argval"}}],[11,"sampler_null","","Returns a new `ArgVal` referring to a null `Sampler` object.",76,{"inputs":[],"output":{"name":"argval"}}],[11,"primitive","","Returns a new `ArgVal` referring to a scalar or vector primitive.",76,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"scalar","","Returns a new `ArgVal` referring to a scalar primitive.",76,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"vector","","Returns a new `ArgVal` referring to a vector primitive.",76,{"inputs":[{"name":"t"}],"output":{"name":"argval"}}],[11,"local","","Returns a new `ArgVal` corresponding to a `__local` argument.",76,{"inputs":[{"name":"usize"}],"output":{"name":"argval"}}],[11,"from_raw","","Returns a new `ArgVal` containing the size in bytes and a raw pointer to the argument value.",76,null],[11,"as_raw","","Returns the size (in bytes) and raw pointer to the contained kernel argument value.",76,null],[11,"is_null","","Returns `true` if this `ArgVal` represents a null `Mem` or `Sampler` object.",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"openclversion"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"bool"}}],[11,"cmp","","",77,{"inputs":[{"name":"self"},{"name":"openclversion"}],"output":{"name":"ordering"}}],[11,"new","","",77,{"inputs":[{"name":"u16"},{"name":"u16"}],"output":{"name":"openclversion"}}],[11,"max","","",77,{"inputs":[{"name":"self"}],"output":{"name":"openclversion"}}],[11,"from_info_str","","Parse the string `ver` and return a dual-integer result as `OpenclVersion`.",77,{"inputs":[{"name":"str"}],"output":{"generics":["openclversion"],"name":"oclcoreresult"}}],[11,"from","","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"contextpropertyvalue"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"contextproperties"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty new list of context properties",78,{"inputs":[],"output":{"name":"contextproperties"}}],[11,"platform","","Specifies a platform (builder-style).",78,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"contextproperties"}}],[11,"interop_user_sync","","Specifies whether the user is responsible for synchronization between OpenCL and other APIs (builder-style).",78,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"contextproperties"}}],[11,"gl_context","","Specifies an OpenGL context handle (builder-style).",78,null],[11,"glx_display","","Specifies a Display pointer for the GLX context (builder-style).",78,null],[11,"wgl_hdc","","Specifies a Display pointer for the WGL HDC (builder-style).",78,null],[11,"cgl_sharegroup","","Specifies an OpenGL context CGL share group to associate the OpenCL context with (builder-style).",78,null],[11,"egl_display","","Specifies a pointer for the EGL display (builder-style).",78,null],[11,"property_value","","Pushes a `ContextPropertyValue` onto this list of properties (builder-style).",78,{"inputs":[{"name":"self"},{"name":"contextpropertyvalue"}],"output":{"name":"contextproperties"}}],[11,"set_platform","","Specifies a platform.",78,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"set_interop_user_sync","","Specifies whether the user is responsible for synchronization between OpenCL and other APIs.",78,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_gl_context","","Specifies an OpenGL context handle.",78,null],[11,"set_glx_display","","Specifies a Display pointer for the GLX context.",78,null],[11,"set_wgl_hdc","","Specifies a Display pointer for the WGL HDC.",78,null],[11,"set_cgl_sharegroup","","Specifies an OpenGL context CGL share group to associate the OpenCL context with.",78,null],[11,"set_egl_display","","Specifies a pointer for the EGL display.",78,null],[11,"set_property_value","","Pushes a `ContextPropertyValue` onto this list of properties.",78,{"inputs":[{"name":"self"},{"name":"contextpropertyvalue"}],"output":null}],[11,"get_platform","","Returns a platform id or none.",78,{"inputs":[{"name":"self"}],"output":{"generics":["platformid"],"name":"option"}}],[11,"contains_gl_context_or_sharegroup","","Returns true if this set of context properties specifies any OpenGL context or sharegroup to associate with.",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_raw","","Converts this list into a packed-word representation as specified here.",78,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"vec"}}],[11,"extract_property_from_raw","","Returns a single context property value.",78,null],[11,"from_raw","","Converts raw stuff into other stuff.",78,null],[11,"new","","",79,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"bufferregion"}}],[11,"to_bytes","","",79,{"inputs":[{"name":"self"}],"output":{"name":"cl_buffer_region"}}],[11,"from_bytes","","",79,{"inputs":[{"name":"cl_buffer_region"}],"output":{"name":"bufferregion"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"imageformat"}}],[11,"new","","",72,{"inputs":[{"name":"imagechannelorder"},{"name":"imagechanneldatatype"}],"output":{"name":"imageformat"}}],[11,"new_rgba","","",72,{"inputs":[],"output":{"name":"imageformat"}}],[11,"from_raw","","",72,{"inputs":[{"name":"cl_image_format"}],"output":{"name":"imageformatparseresult"}}],[11,"list_from_raw","","",72,{"inputs":[{"generics":["cl_image_format"],"name":"vec"}],"output":{"generics":["imageformatparseresult"],"name":"vec"}}],[11,"to_raw","","",72,{"inputs":[{"name":"self"}],"output":{"name":"cl_image_format"}}],[11,"new_raw","","",72,{"inputs":[],"output":{"name":"cl_image_format"}}],[11,"pixel_bytes","","Returns the size in bytes of a pixel using the format specified by this `ImageFormat`.",72,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"imagedescriptor"}}],[11,"new","","",73,{"inputs":[{"name":"memobjecttype"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"generics":["mem"],"name":"option"}],"output":{"name":"imagedescriptor"}}],[11,"to_raw","","",73,{"inputs":[{"name":"self"}],"output":{"name":"cl_image_desc"}}],[0,"error","ocl_core","Standard error type for ocl.",null,null],[3,"Error","ocl_core::error","An Error.",null,null],[4,"ErrorKind","","An enum one of several error types.",null,null],[13,"String","","",80,null],[13,"FfiNul","","",80,null],[13,"Io","","",80,null],[13,"FromUtf8","","",80,null],[13,"IntoString","","",80,null],[13,"EmptyInfoResult","","",80,null],[13,"Util","","",80,null],[13,"Api","","",80,null],[13,"VersionLow","","",80,null],[13,"ProgramBuild","","",80,null],[13,"ApiWrapper","","",80,null],[6,"Result","","Ocl error result type.",null,null],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",80,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",80,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"api_status","","Returns the error status code for `Status` variants.",81,{"inputs":[{"name":"self"}],"output":{"generics":["status"],"name":"option"}}],[11,"kind","","Returns the error variant and contents.",81,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"cause","","Returns the immediate cause of this error (e.g. the next error in the chain).",81,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"from","","",81,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"from","","",81,{"inputs":[{"generics":["errorkind"],"name":"context"}],"output":{"name":"error"}}],[11,"from","","",81,{"inputs":[{"name":"emptyinforesulterror"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"utilerror"}],"output":{"name":"self"}}],[0,"util","ocl_core","Utility and debugging functions.",null,null],[4,"UtilError","ocl_core::util","An error caused by a utility function.",null,null],[13,"BytesTo","","",82,null],[12,"src","ocl_core::util::UtilError","",82,null],[12,"dst","","",82,null],[13,"BytesInto","ocl_core::util","",82,null],[12,"src","ocl_core::util::UtilError","",82,null],[12,"dst","","",82,null],[13,"BytesIntoVec","ocl_core::util","",82,null],[12,"src","ocl_core::util::UtilError","",82,null],[12,"dst","","",82,null],[13,"BytesToVec","ocl_core::util","",82,null],[12,"src","ocl_core::util::UtilError","",82,null],[12,"dst","","",82,null],[13,"BytesIntoString","ocl_core::util","",82,null],[4,"VecRemoveRebuildError","","An error caused by `util::vec_remove_rebuild`.",null,null],[13,"TooLong","","",83,null],[13,"OutOfRange","","",83,null],[12,"idx","ocl_core::util::VecRemoveRebuildError","",83,null],[12,"orig_len","","",83,null],[5,"bytes_to_u32","ocl_core::util","Copies a byte slice to a new `u32`.",null,null],[5,"bytes_to","","Copies a slice of bytes to a new value of arbitrary type.",null,null],[5,"bytes_into","","Converts a vector of bytes into a value of arbitrary type.",null,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"generics":["utilerror"],"name":"result"}}],[5,"bytes_into_vec","","Converts a vector of bytes into a vector of arbitrary type.",null,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"generics":["vec","utilerror"],"name":"result"}}],[5,"bytes_to_vec","","Copies a slice of bytes into a vector of arbitrary type.",null,null],[5,"bytes_into_string","","Converts a byte Vec into a string, removing the trailing null byte if it exists.",null,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"generics":["string","utilerror"],"name":"result"}}],[5,"into_bytes","","[UNTESTED] Copies an arbitrary primitive or struct into core bytes.",null,{"inputs":[{"name":"t"}],"output":{"generics":["u8"],"name":"vec"}}],[5,"padded_len","","Pads `len` to make it evenly divisible by `incr`.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[5,"vec_remove_rebuild","","Batch removes elements from a vector using a list of indices to remove.",null,null],[5,"wrap_vals","","Wraps (`%`) each value in the list `vals` if it equals or exceeds `val_n`.",null,null],[5,"print_bytes_as_hex","","Prints bytes as hex.",null,null],[5,"print_slice","","[UNSTABLE]: MAY BE REMOVED AT ANY TIME Prints a vector to stdout. Used for debugging.",null,null],[5,"print_simple","","",null,null],[5,"print_val_range","","",null,null],[0,"colors","","ASCII Color Palette",null,null],[7,"TAB","ocl_core::util::colors","",null,null],[7,"C_DEFAULT","","",null,null],[7,"C_UNDER","","",null,null],[7,"C_RED","","",null,null],[7,"C_BRED","","",null,null],[7,"C_GRN","","",null,null],[7,"C_BGRN","","",null,null],[7,"C_ORA","","",null,null],[7,"C_DBL","","",null,null],[7,"C_PUR","","",null,null],[7,"C_CYA","","",null,null],[7,"C_LGR","","",null,null],[7,"C_DFLT","","",null,null],[7,"C_DGR","","",null,null],[7,"C_LRD","","",null,null],[7,"C_YEL","","",null,null],[7,"C_BLU","","",null,null],[7,"C_LBL","","",null,null],[7,"C_MAG","","",null,null],[7,"BGC_DEFAULT","","",null,null],[7,"BGC_GRN","","",null,null],[7,"BGC_PUR","","",null,null],[7,"BGC_LGR","","",null,null],[7,"BGC_DGR","","",null,null],[11,"fmt","ocl_core::util","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",82,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",82,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",83,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",83,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"EventCallbackFn","ocl_core","",null,null],[6,"CreateContextCallbackFn","","",null,null],[6,"BuildProgramCallbackFn","","",null,null],[6,"UserDataPtr","","",null,null],[17,"DEVICES_MAX","","",null,null],[17,"DEVICE_TYPE_DEFAULT","","",null,null],[17,"DEVICE_TYPE_CPU","","",null,null],[17,"DEVICE_TYPE_GPU","","",null,null],[17,"DEVICE_TYPE_ACCELERATOR","","",null,null],[17,"DEVICE_TYPE_CUSTOM","","",null,null],[17,"DEVICE_TYPE_ALL","","",null,null],[17,"FP_DENORM","","",null,null],[17,"FP_INF_NAN","","",null,null],[17,"FP_ROUND_TO_NEAREST","","",null,null],[17,"FP_ROUND_TO_ZERO","","",null,null],[17,"FP_ROUND_TO_INF","","",null,null],[17,"FP_FMA","","",null,null],[17,"FP_SOFT_FLOAT","","",null,null],[17,"FP_CORRECTLY_ROUNDED_DIVIDE_SQRT","","",null,null],[17,"EXEC_KERNEL","","",null,null],[17,"EXEC_NATIVE_KERNEL","","",null,null],[17,"QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE","","",null,null],[17,"QUEUE_PROFILING_ENABLE","","",null,null],[17,"QUEUE_ON_DEVICE","","",null,null],[17,"QUEUE_ON_DEVICE_DEFAULT","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_NUMA","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L4_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L3_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L2_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_L1_CACHE","","",null,null],[17,"DEVICE_AFFINITY_DOMAIN_NEXT_PARTITIONABLE","","",null,null],[17,"MEM_READ_WRITE","","",null,null],[17,"MEM_WRITE_ONLY","","",null,null],[17,"MEM_READ_ONLY","","",null,null],[17,"MEM_USE_HOST_PTR","","",null,null],[17,"MEM_ALLOC_HOST_PTR","","",null,null],[17,"MEM_COPY_HOST_PTR","","",null,null],[17,"MEM_HOST_WRITE_ONLY","","",null,null],[17,"MEM_HOST_READ_ONLY","","",null,null],[17,"MEM_HOST_NO_ACCESS","","",null,null],[17,"MIGRATE_MEM_OBJECT_HOST","","",null,null],[17,"MIGRATE_MEM_OBJECT_CONTENT_UNDEFINED","","",null,null],[17,"MAP_READ","","",null,null],[17,"MAP_WRITE","","",null,null],[17,"MAP_WRITE_INVALIDATE_REGION","","",null,null],[17,"PROGRAM_BINARY_TYPE_NONE","","",null,null],[17,"PROGRAM_BINARY_TYPE_COMPILED_OBJECT","","",null,null],[17,"PROGRAM_BINARY_TYPE_LIBRARY","","",null,null],[17,"PROGRAM_BINARY_TYPE_EXECUTABLE","","",null,null],[17,"KERNEL_ARG_TYPE_NONE","","",null,null],[17,"KERNEL_ARG_TYPE_CONST","","",null,null],[17,"KERNEL_ARG_TYPE_RESTRICT","","",null,null],[17,"KERNEL_ARG_TYPE_VOLATILE","","",null,null],[17,"CL_CGL_SHAREGROUP_KHR_OS_SPECIFIC","","",null,null],[8,"OclPrm","","A primitive type usable within `OpenCL` kernels.",null,null],[8,"OclNum","","A set of traits common to numeric built-in OpenCL scalar and vector primitives.",null,null],[8,"OclScl","","A scalar type usable within OpenCL kernels.",null,null],[8,"OclVec","","A vector type usable within `OpenCL` kernels.",null,null],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"cmp","","",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"DEFAULT","","",84,null],[18,"CPU","","",84,null],[18,"GPU","","",84,null],[18,"ACCELERATOR","","",84,null],[18,"CUSTOM","","",84,null],[18,"ALL","","",84,null],[11,"empty","","Returns an empty set of flags.",84,{"inputs":[],"output":{"name":"devicetype"}}],[11,"all","","Returns the set containing all flags.",84,{"inputs":[],"output":{"name":"devicetype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",84,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",84,{"inputs":[{"name":"u64"}],"output":{"generics":["devicetype"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",84,{"inputs":[{"name":"u64"}],"output":{"name":"devicetype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",84,{"inputs":[{"name":"self"},{"name":"devicetype"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"bitor_assign","","Adds the set of flags.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"bitxor_assign","","Toggles the set of flags.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"devicetype"}}],[11,"sub_assign","","Disables all flags enabled in the set.",84,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"extend","","",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"devicetype"}}],[11,"new","","",84,{"inputs":[],"output":{"name":"devicetype"}}],[11,"system_default","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"cpu","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"gpu","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"accelerator","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"custom","","",84,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"devicetype"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"devicefpconfig"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"cmp","","",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"DENORM","","",85,null],[18,"INF_NAN","","",85,null],[18,"ROUND_TO_NEAREST","","",85,null],[18,"ROUND_TO_ZERO","","",85,null],[18,"ROUND_TO_INF","","",85,null],[18,"FMA","","",85,null],[18,"SOFT_FLOAT","","",85,null],[18,"CORRECTLY_ROUNDED_DIVIDE_SQRT","","",85,null],[11,"empty","","Returns an empty set of flags.",85,{"inputs":[],"output":{"name":"devicefpconfig"}}],[11,"all","","Returns the set containing all flags.",85,{"inputs":[],"output":{"name":"devicefpconfig"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",85,{"inputs":[{"name":"u64"}],"output":{"generics":["devicefpconfig"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",85,{"inputs":[{"name":"u64"}],"output":{"name":"devicefpconfig"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",85,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitor_assign","","Adds the set of flags.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitxor_assign","","Toggles the set of flags.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":{"name":"devicefpconfig"}}],[11,"sub_assign","","Disables all flags enabled in the set.",85,{"inputs":[{"name":"self"},{"name":"devicefpconfig"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",85,{"inputs":[{"name":"self"}],"output":{"name":"devicefpconfig"}}],[11,"extend","","",85,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"devicefpconfig"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"deviceexeccapabilities"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"cmp","","",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"ordering"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"KERNEL","","",86,null],[18,"NATIVE_KERNEL","","",86,null],[11,"empty","","Returns an empty set of flags.",86,{"inputs":[],"output":{"name":"deviceexeccapabilities"}}],[11,"all","","Returns the set containing all flags.",86,{"inputs":[],"output":{"name":"deviceexeccapabilities"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",86,{"inputs":[{"name":"u64"}],"output":{"generics":["deviceexeccapabilities"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",86,{"inputs":[{"name":"u64"}],"output":{"name":"deviceexeccapabilities"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",86,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"bitor_assign","","Adds the set of flags.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"bitxor_assign","","Toggles the set of flags.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":{"name":"deviceexeccapabilities"}}],[11,"sub_assign","","Disables all flags enabled in the set.",86,{"inputs":[{"name":"self"},{"name":"deviceexeccapabilities"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",86,{"inputs":[{"name":"self"}],"output":{"name":"deviceexeccapabilities"}}],[11,"extend","","",86,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"deviceexeccapabilities"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"le","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"gt","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"ge","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"cmp","","",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"ordering"}}],[11,"hash","","",87,null],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"OUT_OF_ORDER_EXEC_MODE_ENABLE","","",87,null],[18,"PROFILING_ENABLE","","",87,null],[18,"ON_DEVICE","","",87,null],[18,"ON_DEVICE_DEFAULT","","",87,null],[11,"empty","","Returns an empty set of flags.",87,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"all","","Returns the set containing all flags.",87,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"bits","","Returns the raw value of the flags currently stored.",87,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",87,{"inputs":[{"name":"u64"}],"output":{"generics":["commandqueueproperties"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",87,{"inputs":[{"name":"u64"}],"output":{"name":"commandqueueproperties"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",87,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitor_assign","","Adds the set of flags.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitxor_assign","","Toggles the set of flags.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":{"name":"commandqueueproperties"}}],[11,"sub_assign","","Disables all flags enabled in the set.",87,{"inputs":[{"name":"self"},{"name":"commandqueueproperties"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",87,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"extend","","",87,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",87,{"inputs":[{"name":"t"}],"output":{"name":"commandqueueproperties"}}],[11,"new","","",87,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"out_of_order","","",87,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"profiling","","",87,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueproperties"}}],[11,"default","","",87,{"inputs":[],"output":{"name":"commandqueueproperties"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"deviceaffinitydomain"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"ordering"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"NUMA","","",88,null],[18,"L4_CACHE","","",88,null],[18,"L3_CACHE","","",88,null],[18,"L2_CACHE","","",88,null],[18,"L1_CACHE","","",88,null],[18,"NEXT_PARTITIONABLE","","",88,null],[11,"empty","","Returns an empty set of flags.",88,{"inputs":[],"output":{"name":"deviceaffinitydomain"}}],[11,"all","","Returns the set containing all flags.",88,{"inputs":[],"output":{"name":"deviceaffinitydomain"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,{"inputs":[{"name":"u64"}],"output":{"generics":["deviceaffinitydomain"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,{"inputs":[{"name":"u64"}],"output":{"name":"deviceaffinitydomain"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitor_assign","","Adds the set of flags.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitxor_assign","","Toggles the set of flags.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":{"name":"deviceaffinitydomain"}}],[11,"sub_assign","","Disables all flags enabled in the set.",88,{"inputs":[{"name":"self"},{"name":"deviceaffinitydomain"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",88,{"inputs":[{"name":"self"}],"output":{"name":"deviceaffinitydomain"}}],[11,"extend","","",88,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",88,{"inputs":[{"name":"t"}],"output":{"name":"deviceaffinitydomain"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"cmp","","",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"ordering"}}],[11,"hash","","",89,null],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"READ_WRITE","","",89,null],[18,"WRITE_ONLY","","",89,null],[18,"READ_ONLY","","",89,null],[18,"USE_HOST_PTR","","",89,null],[18,"ALLOC_HOST_PTR","","",89,null],[18,"COPY_HOST_PTR","","",89,null],[18,"HOST_WRITE_ONLY","","",89,null],[18,"HOST_READ_ONLY","","",89,null],[18,"HOST_NO_ACCESS","","",89,null],[11,"empty","","Returns an empty set of flags.",89,{"inputs":[],"output":{"name":"memflags"}}],[11,"all","","Returns the set containing all flags.",89,{"inputs":[],"output":{"name":"memflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",89,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",89,{"inputs":[{"name":"u64"}],"output":{"generics":["memflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",89,{"inputs":[{"name":"u64"}],"output":{"name":"memflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",89,{"inputs":[{"name":"self"},{"name":"memflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitor_assign","","Adds the set of flags.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":{"name":"memflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",89,{"inputs":[{"name":"self"},{"name":"memflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"extend","","",89,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",89,{"inputs":[{"name":"t"}],"output":{"name":"memflags"}}],[11,"new","","",89,{"inputs":[],"output":{"name":"memflags"}}],[11,"read_write","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"write_only","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"read_only","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"use_host_ptr","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"alloc_host_ptr","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"copy_host_ptr","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_write_only","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_read_only","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"host_no_access","","",89,{"inputs":[{"name":"self"}],"output":{"name":"memflags"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"memflags"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"memmigrationflags"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"cmp","","",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"ordering"}}],[11,"hash","","",90,null],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"OBJECT_HOST","","",90,null],[18,"OBJECT_CONTENT_UNDEFINED","","",90,null],[11,"empty","","Returns an empty set of flags.",90,{"inputs":[],"output":{"name":"memmigrationflags"}}],[11,"all","","Returns the set containing all flags.",90,{"inputs":[],"output":{"name":"memmigrationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",90,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",90,{"inputs":[{"name":"u64"}],"output":{"generics":["memmigrationflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",90,{"inputs":[{"name":"u64"}],"output":{"name":"memmigrationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"bitor_assign","","Adds the set of flags.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":{"name":"memmigrationflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",90,{"inputs":[{"name":"self"},{"name":"memmigrationflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",90,{"inputs":[{"name":"self"}],"output":{"name":"memmigrationflags"}}],[11,"extend","","",90,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",90,{"inputs":[{"name":"t"}],"output":{"name":"memmigrationflags"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"le","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"gt","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ge","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"cmp","","",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"ordering"}}],[11,"hash","","",91,null],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"READ","","",91,null],[18,"WRITE","","",91,null],[18,"WRITE_INVALIDATE_REGION","","",91,null],[11,"empty","","Returns an empty set of flags.",91,{"inputs":[],"output":{"name":"mapflags"}}],[11,"all","","Returns the set containing all flags.",91,{"inputs":[],"output":{"name":"mapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",91,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",91,{"inputs":[{"name":"u64"}],"output":{"generics":["mapflags"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",91,{"inputs":[{"name":"u64"}],"output":{"name":"mapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",91,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",91,{"inputs":[{"name":"self"},{"name":"mapflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitor_assign","","Adds the set of flags.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",91,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",91,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"extend","","",91,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",91,{"inputs":[{"name":"t"}],"output":{"name":"mapflags"}}],[11,"new","","",91,{"inputs":[],"output":{"name":"mapflags"}}],[11,"read","","",91,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"write","","",91,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"write_invalidate_region","","",91,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"mapflags"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"programbinarytype"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"cmp","","",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"ordering"}}],[11,"hash","","",92,null],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"NONE","","",92,null],[18,"COMPILED_OBJECT","","",92,null],[18,"LIBRARY","","",92,null],[18,"EXECUTABLE","","",92,null],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[],"output":{"name":"programbinarytype"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[],"output":{"name":"programbinarytype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"u32"}],"output":{"generics":["programbinarytype"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,{"inputs":[{"name":"u32"}],"output":{"name":"programbinarytype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitor_assign","","Adds the set of flags.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitxor_assign","","Toggles the set of flags.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":{"name":"programbinarytype"}}],[11,"sub_assign","","Disables all flags enabled in the set.",92,{"inputs":[{"name":"self"},{"name":"programbinarytype"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",92,{"inputs":[{"name":"self"}],"output":{"name":"programbinarytype"}}],[11,"extend","","",92,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",92,{"inputs":[{"name":"t"}],"output":{"name":"programbinarytype"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"kernelargtypequalifier"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"cmp","","",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"ordering"}}],[11,"hash","","",93,null],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"NONE","","",93,null],[18,"CONST","","",93,null],[18,"RESTRICT","","",93,null],[18,"VOLATILE","","",93,null],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[],"output":{"name":"kernelargtypequalifier"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[],"output":{"name":"kernelargtypequalifier"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"u64"}],"output":{"generics":["kernelargtypequalifier"],"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",93,{"inputs":[{"name":"u64"}],"output":{"name":"kernelargtypequalifier"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitor_assign","","Adds the set of flags.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitxor_assign","","Toggles the set of flags.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":{"name":"kernelargtypequalifier"}}],[11,"sub_assign","","Disables all flags enabled in the set.",93,{"inputs":[{"name":"self"},{"name":"kernelargtypequalifier"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"self"}],"output":{"name":"kernelargtypequalifier"}}],[11,"extend","","",93,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"kernelargtypequalifier"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gltexturetarget"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"gltexturetarget"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"from_i64","","",1,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"clglobjecttype"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"clglobjecttype"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"from_i64","","",2,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"imagechannelorder"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"imagechannelorder"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"from_i64","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"imagechanneldatatype"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"imagechanneldatatype"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"from_i64","","",4,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",4,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"cbool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"cbool"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"from_i64","","",5,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"polling"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"polling"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"from_i64","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"platforminfo"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"platforminfo"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"from_i64","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",7,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"deviceinfo"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"deviceinfo"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"from_i64","","",8,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",8,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"devicememcachetype"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"devicememcachetype"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"from_i64","","",9,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",9,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"devicelocalmemtype"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"devicelocalmemtype"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"from_i64","","",10,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",10,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"contextinfo"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"contextinfo"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"from_i64","","",11,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",11,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"glcontextinfo"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"glcontextinfo"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"from_i64","","",12,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",12,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"contextproperty"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"contextproperty"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"from_i64","","",13,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",13,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"contextinfoorpropertiespointertype"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"contextinfoorpropertiespointertype"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"from_i64","","",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"devicepartitionproperty"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"devicepartitionproperty"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"from_i64","","",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"commandqueueinfo"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"commandqueueinfo"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"from_i64","","",16,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",16,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"channeltype"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"channeltype"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"from_i64","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"memobjecttype"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"memobjecttype"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"from_i64","","",18,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"meminfo"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"meminfo"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"from_i64","","",19,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",19,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"imageinfo"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"from_i64","","",20,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",20,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"addressingmode"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"addressingmode"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"from_i64","","",21,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",21,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"filtermode"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"filtermode"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"from_i64","","",22,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",22,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"from_i64","","",23,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",23,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"programinfo"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"from_i64","","",24,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",24,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"programbuildinfo"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"programbuildinfo"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"from_i64","","",25,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",25,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"programbuildstatus"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"programbuildstatus"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"from_i64","","",26,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",26,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"kernelinfo"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"kernelinfo"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"from_i64","","",27,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",27,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"kernelarginfo"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"kernelarginfo"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"from_i64","","",28,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",28,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"kernelargaddressqualifier"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"kernelargaddressqualifier"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"from_i64","","",29,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",29,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"kernelargaccessqualifier"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"kernelargaccessqualifier"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"from_i64","","",30,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",30,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"kernelworkgroupinfo"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"kernelworkgroupinfo"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"from_i64","","",31,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",31,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"eventinfo"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"eventinfo"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"from_i64","","",32,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",32,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"commandtype"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"commandtype"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"from_i64","","",33,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",33,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"commandexecutionstatus"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"commandexecutionstatus"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"from_i64","","",34,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",34,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"buffercreatetype"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"buffercreatetype"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"from_i64","","",35,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",35,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"profilinginfo"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"profilinginfo"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"from_i64","","",36,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",36,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"new","","",94,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"splat","","",94,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"zero","","",94,{"inputs":[],"output":{"name":"char"}}],[11,"is_zero","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",94,{"inputs":[],"output":{"name":"char"}}],[11,"deref","","",95,null],[11,"deref","","",96,null],[11,"deref","","",97,null],[11,"deref","","",98,null],[11,"deref","","",99,null],[11,"deref","","",100,null],[11,"deref","","",101,null],[11,"deref","","",102,null],[11,"deref","","",103,null],[11,"deref","","",104,null],[11,"deref","","",105,null],[11,"deref","","",106,null],[11,"deref","","",107,null],[11,"deref","","",108,null],[11,"deref","","",109,null],[11,"deref","","",110,null],[11,"deref","","",111,null],[11,"deref","","",112,null],[11,"deref","","",113,null],[11,"deref","","",114,null],[11,"deref","","",115,null],[11,"deref","","",116,null],[11,"deref","","",117,null],[11,"deref","","",118,null],[11,"deref","","",119,null],[11,"deref","","",120,null],[11,"deref","","",121,null],[11,"deref","","",122,null],[11,"deref","","",123,null],[11,"deref","","",124,null],[11,"deref","","",125,null],[11,"deref","","",126,null],[11,"deref","","",127,null],[11,"deref","","",128,null],[11,"deref","","",129,null],[11,"deref","","",94,null],[11,"deref","","",130,null],[11,"deref","","",131,null],[11,"deref","","",132,null],[11,"deref","","",133,null],[11,"deref","","",134,null],[11,"deref","","",135,null],[11,"deref","","",136,null],[11,"deref","","",137,null],[11,"deref","","",138,null],[11,"deref","","",139,null],[11,"deref","","",140,null],[11,"deref","","",141,null],[11,"deref","","",142,null],[11,"deref","","",143,null],[11,"deref","","",144,null],[11,"deref","","",145,null],[11,"deref","","",146,null],[11,"deref","","",147,null],[11,"deref","","",148,null],[11,"deref","","",149,null],[11,"deref","","",150,null],[11,"deref","","",151,null],[11,"deref","","",152,null],[11,"deref","","",153,null],[11,"bitxor","","",145,null],[11,"bitxor","","",97,null],[11,"bitxor","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitxor","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitxor","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitxor","","",130,null],[11,"bitxor","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitxor","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitxor","","",151,null],[11,"bitxor","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitxor","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitxor","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitxor","","",110,null],[11,"bitxor","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitxor","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitxor","","",107,null],[11,"bitxor","","",134,null],[11,"bitxor","","",143,null],[11,"bitxor","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitxor","","",94,null],[11,"bitxor","","",120,null],[11,"bitxor","","",105,null],[11,"bitxor","","",142,null],[11,"bitxor","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitxor","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitxor","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitxor","","",135,null],[11,"bitxor","","",100,null],[11,"bitxor","","",96,null],[11,"bitxor","","",112,null],[11,"bitxor","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitxor","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitxor","","",98,null],[11,"bitxor","","",116,null],[11,"bitxor","","",150,null],[11,"bitxor","","",125,null],[11,"bitxor","","",99,null],[11,"bitxor","","",146,null],[11,"bitxor","","",111,null],[11,"bitxor","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitxor","","",137,null],[11,"bitxor","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitxor","","",124,null],[11,"bitxor","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitxor","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitxor","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitxor","","",108,null],[11,"bitxor","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitxor","","",126,null],[11,"bitxor","","",129,null],[11,"bitxor","","",148,null],[11,"bitxor","","",101,null],[11,"bitxor","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitxor","","",118,null],[11,"bitxor","","",113,null],[11,"bitxor","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitxor","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitxor","","",119,null],[11,"bitxor","","",121,null],[11,"bitxor","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitxor","","",103,null],[11,"bitxor","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitxor","","",114,null],[11,"bitxor","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitxor","","",149,null],[11,"bitxor","","",132,null],[11,"bitxor","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitxor","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitxor","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitxor","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitxor","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitxor","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitxor","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitxor","","",127,null],[11,"bitxor","","",102,null],[11,"bitxor","","",136,null],[11,"bitxor","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitxor","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitxor","","",153,null],[11,"bitxor","","",122,null],[11,"bitxor","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitxor","","",95,null],[11,"bitxor","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitxor","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitxor","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitxor","","",133,null],[11,"bitxor","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitxor","","",104,null],[11,"bitxor","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitxor","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitxor","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitxor","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitxor","","",131,null],[11,"bitxor","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitxor","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitxor","","",139,null],[11,"sum","","",133,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"sum","","",112,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"sum","","",152,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"sum","","",135,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"sum","","",116,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"sum","","",144,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"sum","","",96,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"sum","","",150,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"sum","","",105,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"sum","","",133,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"sum","","",137,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"sum","","",110,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"sum","","",95,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"sum","","",129,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"sum","","",113,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"sum","","",115,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"sum","","",139,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"sum","","",136,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"sum","","",120,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"sum","","",124,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"sum","","",125,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"sum","","",151,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"sum","","",121,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"sum","","",108,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"sum","","",116,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"sum","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"sum","","",107,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"sum","","",105,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"sum","","",135,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"sum","","",123,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"sum","","",148,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"sum","","",99,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"sum","","",94,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"sum","","",120,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"sum","","",153,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"sum","","",119,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"sum","","",142,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"sum","","",101,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"sum","","",99,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"sum","","",95,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"sum","","",131,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"sum","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"sum","","",138,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"sum","","",110,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"sum","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"sum","","",101,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"sum","","",129,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"sum","","",94,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"sum","","",114,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"sum","","",141,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"sum","","",128,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"sum","","",149,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"sum","","",113,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"sum","","",128,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"sum","","",148,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"sum","","",146,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"sum","","",122,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"sum","","",127,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"sum","","",151,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"sum","","",139,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"sum","","",109,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"sum","","",145,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"sum","","",152,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"sum","","",147,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"sum","","",97,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"sum","","",98,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"sum","","",103,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"sum","","",123,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"sum","","",119,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"sum","","",132,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"sum","","",103,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"sum","","",149,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"sum","","",132,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"sum","","",146,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"sum","","",118,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"sum","","",115,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"sum","","",96,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"sum","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"sum","","",102,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"sum","","",104,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"sum","","",134,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"sum","","",121,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"sum","","",100,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"sum","","",140,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"sum","","",147,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"sum","","",104,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"sum","","",111,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"sum","","",141,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"sum","","",145,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"sum","","",153,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"sum","","",126,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"sum","","",122,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"sum","","",102,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"sum","","",124,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"sum","","",118,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"sum","","",150,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"sum","","",97,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"sum","","",136,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"sum","","",106,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"sum","","",111,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"sum","","",100,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"sum","","",127,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"sum","","",144,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"sum","","",108,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"sum","","",126,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"sum","","",131,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"sum","","",107,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"sum","","",98,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"sum","","",106,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"sum","","",137,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"sum","","",109,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"sum","","",114,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"sum","","",112,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"sum","","",134,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"sum","","",130,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"sum","","",130,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"sum","","",138,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"sum","","",140,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"sum","","",125,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"sum","","",142,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"div_assign","","",128,null],[11,"div_assign","","",143,null],[11,"div_assign","","",100,null],[11,"div_assign","","",123,null],[11,"div_assign","","",116,null],[11,"div_assign","","",115,null],[11,"div_assign","","",105,null],[11,"div_assign","","",141,null],[11,"div_assign","","",124,null],[11,"div_assign","","",147,null],[11,"div_assign","","",127,null],[11,"div_assign","","",153,null],[11,"div_assign","","",104,null],[11,"div_assign","","",110,null],[11,"div_assign","","",140,null],[11,"div_assign","","",139,null],[11,"div_assign","","",118,null],[11,"div_assign","","",95,null],[11,"div_assign","","",135,null],[11,"div_assign","","",149,null],[11,"div_assign","","",113,null],[11,"div_assign","","",102,null],[11,"div_assign","","",125,null],[11,"div_assign","","",106,null],[11,"div_assign","","",138,null],[11,"div_assign","","",117,null],[11,"div_assign","","",126,null],[11,"div_assign","","",133,null],[11,"div_assign","","",132,null],[11,"div_assign","","",101,null],[11,"div_assign","","",137,null],[11,"div_assign","","",103,null],[11,"div_assign","","",148,null],[11,"div_assign","","",136,null],[11,"div_assign","","",121,null],[11,"div_assign","","",94,null],[11,"div_assign","","",96,null],[11,"div_assign","","",112,null],[11,"div_assign","","",134,null],[11,"div_assign","","",107,null],[11,"div_assign","","",151,null],[11,"div_assign","","",99,null],[11,"div_assign","","",146,null],[11,"div_assign","","",114,null],[11,"div_assign","","",119,null],[11,"div_assign","","",98,null],[11,"div_assign","","",152,null],[11,"div_assign","","",150,null],[11,"div_assign","","",142,null],[11,"div_assign","","",131,null],[11,"div_assign","","",145,null],[11,"div_assign","","",130,null],[11,"div_assign","","",120,null],[11,"div_assign","","",129,null],[11,"div_assign","","",144,null],[11,"div_assign","","",122,null],[11,"div_assign","","",108,null],[11,"div_assign","","",111,null],[11,"div_assign","","",109,null],[11,"div_assign","","",97,null],[11,"partial_cmp","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"le","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"gt","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"ge","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"le","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"gt","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"ge","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"le","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"gt","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"ge","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"le","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"gt","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"ge","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"le","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"gt","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"ge","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"le","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"gt","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"ge","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"le","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"gt","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"ge","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"le","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"gt","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"ge","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"le","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"gt","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"ge","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"le","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"gt","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"ge","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"le","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"gt","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"ge","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"le","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"gt","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"ge","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"le","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"gt","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"ge","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"le","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"gt","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"ge","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"le","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"gt","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"ge","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"le","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"gt","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"ge","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"le","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"gt","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"ge","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"le","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"gt","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"ge","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"le","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"gt","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"ge","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"le","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"gt","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"ge","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"le","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"gt","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"ge","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"le","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"gt","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"ge","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"le","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"gt","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"ge","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"le","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"gt","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"ge","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"le","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"gt","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"ge","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"le","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"gt","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"ge","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"le","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"gt","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"ge","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"le","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"gt","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"ge","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"le","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"gt","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"ge","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"not","","",130,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"not","","",139,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"not","","",108,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"not","","",149,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"not","","",134,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"not","","",114,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"not","","",121,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"not","","",116,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"not","","",133,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"not","","",96,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"not","","",142,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"not","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"not","","",135,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"not","","",151,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"not","","",100,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"not","","",132,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"not","","",118,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"not","","",97,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"not","","",137,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"not","","",122,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"not","","",98,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"not","","",113,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"not","","",126,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"not","","",153,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"not","","",102,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"not","","",101,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"not","","",99,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"not","","",124,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"not","","",127,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"not","","",104,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"not","","",125,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"not","","",136,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"not","","",150,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"not","","",120,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"not","","",146,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"not","","",119,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"not","","",110,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"not","","",105,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"not","","",129,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"not","","",145,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"not","","",103,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"not","","",95,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"not","","",148,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"not","","",131,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"not","","",94,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"not","","",111,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"not","","",112,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"not","","",107,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"bitxor_assign","","",124,null],[11,"bitxor_assign","","",132,null],[11,"bitxor_assign","","",142,null],[11,"bitxor_assign","","",150,null],[11,"bitxor_assign","","",96,null],[11,"bitxor_assign","","",148,null],[11,"bitxor_assign","","",151,null],[11,"bitxor_assign","","",149,null],[11,"bitxor_assign","","",153,null],[11,"bitxor_assign","","",118,null],[11,"bitxor_assign","","",112,null],[11,"bitxor_assign","","",125,null],[11,"bitxor_assign","","",133,null],[11,"bitxor_assign","","",127,null],[11,"bitxor_assign","","",120,null],[11,"bitxor_assign","","",143,null],[11,"bitxor_assign","","",105,null],[11,"bitxor_assign","","",114,null],[11,"bitxor_assign","","",122,null],[11,"bitxor_assign","","",126,null],[11,"bitxor_assign","","",139,null],[11,"bitxor_assign","","",113,null],[11,"bitxor_assign","","",98,null],[11,"bitxor_assign","","",119,null],[11,"bitxor_assign","","",146,null],[11,"bitxor_assign","","",111,null],[11,"bitxor_assign","","",116,null],[11,"bitxor_assign","","",134,null],[11,"bitxor_assign","","",97,null],[11,"bitxor_assign","","",145,null],[11,"bitxor_assign","","",121,null],[11,"bitxor_assign","","",102,null],[11,"bitxor_assign","","",108,null],[11,"bitxor_assign","","",110,null],[11,"bitxor_assign","","",104,null],[11,"bitxor_assign","","",136,null],[11,"bitxor_assign","","",135,null],[11,"bitxor_assign","","",100,null],[11,"bitxor_assign","","",95,null],[11,"bitxor_assign","","",130,null],[11,"bitxor_assign","","",107,null],[11,"bitxor_assign","","",101,null],[11,"bitxor_assign","","",129,null],[11,"bitxor_assign","","",103,null],[11,"bitxor_assign","","",99,null],[11,"bitxor_assign","","",94,null],[11,"bitxor_assign","","",131,null],[11,"bitxor_assign","","",137,null],[11,"div","","",96,null],[11,"div","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"div","","",130,null],[11,"div","","",104,null],[11,"div","","",143,null],[11,"div","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"div","","",126,null],[11,"div","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"div","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"div","","",117,null],[11,"div","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"div","","",135,null],[11,"div","","",103,null],[11,"div","","",98,null],[11,"div","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"div","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"div","","",131,null],[11,"div","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"div","","",102,null],[11,"div","","",149,null],[11,"div","","",113,null],[11,"div","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"div","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"div","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"div","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"div","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"div","","",115,null],[11,"div","","",107,null],[11,"div","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"div","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"div","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"div","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"div","","",153,null],[11,"div","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"div","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"div","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"div","","",146,null],[11,"div","","",152,null],[11,"div","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"div","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"div","","",148,null],[11,"div","","",122,null],[11,"div","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"div","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"div","","",136,null],[11,"div","","",101,null],[11,"div","","",140,null],[11,"div","","",120,null],[11,"div","","",105,null],[11,"div","","",100,null],[11,"div","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"div","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"div","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"div","","",94,null],[11,"div","","",110,null],[11,"div","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"div","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"div","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"div","","",139,null],[11,"div","","",112,null],[11,"div","","",125,null],[11,"div","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"div","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"div","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"div","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"div","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"div","","",129,null],[11,"div","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"div","","",111,null],[11,"div","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"div","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"div","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"div","","",132,null],[11,"div","","",141,null],[11,"div","","",109,null],[11,"div","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"div","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"div","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"div","","",145,null],[11,"div","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"div","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"div","","",106,null],[11,"div","","",118,null],[11,"div","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"div","","",134,null],[11,"div","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"div","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"div","","",99,null],[11,"div","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"div","","",137,null],[11,"div","","",150,null],[11,"div","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"div","","",116,null],[11,"div","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"div","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"div","","",123,null],[11,"div","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"div","","",138,null],[11,"div","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"div","","",142,null],[11,"div","","",108,null],[11,"div","","",127,null],[11,"div","","",144,null],[11,"div","","",133,null],[11,"div","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"div","","",121,null],[11,"div","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"div","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"div","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"div","","",128,null],[11,"div","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"div","","",147,null],[11,"div","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"div","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"div","","",124,null],[11,"div","","",114,null],[11,"div","","",97,null],[11,"div","","",119,null],[11,"div","","",151,null],[11,"div","","",95,null],[11,"bitor_assign","","",127,null],[11,"bitor_assign","","",151,null],[11,"bitor_assign","","",119,null],[11,"bitor_assign","","",114,null],[11,"bitor_assign","","",118,null],[11,"bitor_assign","","",101,null],[11,"bitor_assign","","",146,null],[11,"bitor_assign","","",137,null],[11,"bitor_assign","","",130,null],[11,"bitor_assign","","",132,null],[11,"bitor_assign","","",100,null],[11,"bitor_assign","","",102,null],[11,"bitor_assign","","",149,null],[11,"bitor_assign","","",108,null],[11,"bitor_assign","","",134,null],[11,"bitor_assign","","",131,null],[11,"bitor_assign","","",95,null],[11,"bitor_assign","","",153,null],[11,"bitor_assign","","",121,null],[11,"bitor_assign","","",135,null],[11,"bitor_assign","","",105,null],[11,"bitor_assign","","",103,null],[11,"bitor_assign","","",110,null],[11,"bitor_assign","","",111,null],[11,"bitor_assign","","",125,null],[11,"bitor_assign","","",104,null],[11,"bitor_assign","","",148,null],[11,"bitor_assign","","",94,null],[11,"bitor_assign","","",97,null],[11,"bitor_assign","","",139,null],[11,"bitor_assign","","",122,null],[11,"bitor_assign","","",145,null],[11,"bitor_assign","","",98,null],[11,"bitor_assign","","",150,null],[11,"bitor_assign","","",116,null],[11,"bitor_assign","","",129,null],[11,"bitor_assign","","",96,null],[11,"bitor_assign","","",143,null],[11,"bitor_assign","","",136,null],[11,"bitor_assign","","",113,null],[11,"bitor_assign","","",120,null],[11,"bitor_assign","","",142,null],[11,"bitor_assign","","",124,null],[11,"bitor_assign","","",107,null],[11,"bitor_assign","","",126,null],[11,"bitor_assign","","",99,null],[11,"bitor_assign","","",133,null],[11,"bitor_assign","","",112,null],[11,"default","","",135,{"inputs":[],"output":{"name":"uchar2"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"uint3"}}],[11,"default","","",143,{"inputs":[],"output":{"name":"uchar16"}}],[11,"default","","",142,{"inputs":[],"output":{"name":"short"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"ushort16"}}],[11,"default","","",95,{"inputs":[],"output":{"name":"int"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"uint4"}}],[11,"default","","",137,{"inputs":[],"output":{"name":"long4"}}],[11,"default","","",127,{"inputs":[],"output":{"name":"ushort8"}}],[11,"default","","",136,{"inputs":[],"output":{"name":"short4"}}],[11,"default","","",121,{"inputs":[],"output":{"name":"char4"}}],[11,"default","","",151,{"inputs":[],"output":{"name":"uint2"}}],[11,"default","","",153,{"inputs":[],"output":{"name":"ulong16"}}],[11,"default","","",108,{"inputs":[],"output":{"name":"char16"}}],[11,"default","","",123,{"inputs":[],"output":{"name":"double16"}}],[11,"default","","",116,{"inputs":[],"output":{"name":"uchar8"}}],[11,"default","","",141,{"inputs":[],"output":{"name":"float"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"double2"}}],[11,"default","","",133,{"inputs":[],"output":{"name":"short3"}}],[11,"default","","",139,{"inputs":[],"output":{"name":"ushort4"}}],[11,"default","","",144,{"inputs":[],"output":{"name":"float8"}}],[11,"default","","",145,{"inputs":[],"output":{"name":"char3"}}],[11,"default","","",125,{"inputs":[],"output":{"name":"long2"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"int16"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"ulong2"}}],[11,"default","","",114,{"inputs":[],"output":{"name":"ushort"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"float4"}}],[11,"default","","",113,{"inputs":[],"output":{"name":"char2"}}],[11,"default","","",115,{"inputs":[],"output":{"name":"float2"}}],[11,"default","","",122,{"inputs":[],"output":{"name":"uchar3"}}],[11,"default","","",97,{"inputs":[],"output":{"name":"long3"}}],[11,"default","","",129,{"inputs":[],"output":{"name":"ulong8"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"long8"}}],[11,"default","","",103,{"inputs":[],"output":{"name":"uchar4"}}],[11,"default","","",128,{"inputs":[],"output":{"name":"float16"}}],[11,"default","","",124,{"inputs":[],"output":{"name":"int4"}}],[11,"default","","",99,{"inputs":[],"output":{"name":"short2"}}],[11,"default","","",110,{"inputs":[],"output":{"name":"uint16"}}],[11,"default","","",98,{"inputs":[],"output":{"name":"ulong3"}}],[11,"default","","",105,{"inputs":[],"output":{"name":"ushort3"}}],[11,"default","","",119,{"inputs":[],"output":{"name":"ushort2"}}],[11,"default","","",132,{"inputs":[],"output":{"name":"short8"}}],[11,"default","","",100,{"inputs":[],"output":{"name":"uchar"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"int2"}}],[11,"default","","",152,{"inputs":[],"output":{"name":"double"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"char"}}],[11,"default","","",140,{"inputs":[],"output":{"name":"float3"}}],[11,"default","","",120,{"inputs":[],"output":{"name":"long16"}}],[11,"default","","",102,{"inputs":[],"output":{"name":"ulong"}}],[11,"default","","",117,{"inputs":[],"output":{"name":"double4"}}],[11,"default","","",111,{"inputs":[],"output":{"name":"long"}}],[11,"default","","",131,{"inputs":[],"output":{"name":"uint"}}],[11,"default","","",130,{"inputs":[],"output":{"name":"int8"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"char8"}}],[11,"default","","",96,{"inputs":[],"output":{"name":"short16"}}],[11,"default","","",109,{"inputs":[],"output":{"name":"double3"}}],[11,"default","","",134,{"inputs":[],"output":{"name":"ulong4"}}],[11,"default","","",138,{"inputs":[],"output":{"name":"double8"}}],[11,"default","","",146,{"inputs":[],"output":{"name":"uint8"}}],[11,"default","","",148,{"inputs":[],"output":{"name":"int3"}}],[11,"shl_assign","","",114,null],[11,"shl_assign","","",143,null],[11,"shl_assign","","",102,null],[11,"shl_assign","","",148,null],[11,"shl_assign","","",100,null],[11,"shl_assign","","",116,null],[11,"shl_assign","","",95,null],[11,"shl_assign","","",112,null],[11,"shl_assign","","",99,null],[11,"shl_assign","","",150,null],[11,"shl_assign","","",139,null],[11,"shl_assign","","",137,null],[11,"shl_assign","","",125,null],[11,"shl_assign","","",134,null],[11,"shl_assign","","",127,null],[11,"shl_assign","","",101,null],[11,"shl_assign","","",121,null],[11,"shl_assign","","",120,null],[11,"shl_assign","","",151,null],[11,"shl_assign","","",129,null],[11,"shl_assign","","",146,null],[11,"shl_assign","","",119,null],[11,"shl_assign","","",118,null],[11,"shl_assign","","",135,null],[11,"shl_assign","","",153,null],[11,"shl_assign","","",133,null],[11,"shl_assign","","",113,null],[11,"shl_assign","","",149,null],[11,"shl_assign","","",110,null],[11,"shl_assign","","",104,null],[11,"shl_assign","","",126,null],[11,"shl_assign","","",103,null],[11,"shl_assign","","",98,null],[11,"shl_assign","","",132,null],[11,"shl_assign","","",108,null],[11,"shl_assign","","",111,null],[11,"shl_assign","","",107,null],[11,"shl_assign","","",131,null],[11,"shl_assign","","",122,null],[11,"shl_assign","","",130,null],[11,"shl_assign","","",105,null],[11,"shl_assign","","",124,null],[11,"shl_assign","","",136,null],[11,"shl_assign","","",142,null],[11,"shl_assign","","",145,null],[11,"shl_assign","","",96,null],[11,"shl_assign","","",94,null],[11,"shl_assign","","",97,null],[11,"bitand","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitand","","",103,null],[11,"bitand","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitand","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitand","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitand","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitand","","",101,null],[11,"bitand","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitand","","",137,null],[11,"bitand","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitand","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitand","","",124,null],[11,"bitand","","",125,null],[11,"bitand","","",136,null],[11,"bitand","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitand","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitand","","",129,null],[11,"bitand","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitand","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitand","","",96,null],[11,"bitand","","",130,null],[11,"bitand","","",135,null],[11,"bitand","","",105,null],[11,"bitand","","",143,null],[11,"bitand","","",126,null],[11,"bitand","","",131,null],[11,"bitand","","",145,null],[11,"bitand","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitand","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitand","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitand","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitand","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitand","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitand","","",111,null],[11,"bitand","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitand","","",120,null],[11,"bitand","","",108,null],[11,"bitand","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitand","","",118,null],[11,"bitand","","",148,null],[11,"bitand","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitand","","",97,null],[11,"bitand","","",94,null],[11,"bitand","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitand","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitand","","",121,null],[11,"bitand","","",132,null],[11,"bitand","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitand","","",139,null],[11,"bitand","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitand","","",151,null],[11,"bitand","","",149,null],[11,"bitand","","",110,null],[11,"bitand","","",119,null],[11,"bitand","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitand","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitand","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitand","","",99,null],[11,"bitand","","",112,null],[11,"bitand","","",150,null],[11,"bitand","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitand","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitand","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitand","","",142,null],[11,"bitand","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitand","","",114,null],[11,"bitand","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitand","","",122,null],[11,"bitand","","",153,null],[11,"bitand","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitand","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitand","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitand","","",146,null],[11,"bitand","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitand","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitand","","",95,null],[11,"bitand","","",104,null],[11,"bitand","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitand","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitand","","",107,null],[11,"bitand","","",102,null],[11,"bitand","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitand","","",98,null],[11,"bitand","","",100,null],[11,"bitand","","",134,null],[11,"bitand","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitand","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitand","","",133,null],[11,"bitand","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitand","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitand","","",113,null],[11,"bitand","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitand","","",116,null],[11,"bitand","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitand","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitand","","",127,null],[11,"neg","","",131,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"neg","","",120,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"neg","","",129,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"neg","","",100,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"neg","","",119,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"neg","","",148,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"neg","","",121,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"neg","","",109,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"neg","","",145,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"neg","","",123,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}],[11,"neg","","",137,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"neg","","",141,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"neg","","",106,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"neg","","",97,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"neg","","",96,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"neg","","",139,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"neg","","",104,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"neg","","",98,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"neg","","",128,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"neg","","",142,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"neg","","",144,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"neg","","",149,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"neg","","",127,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"neg","","",118,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"neg","","",103,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"neg","","",112,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"neg","","",117,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"neg","","",124,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"neg","","",108,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"neg","","",146,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"neg","","",102,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"neg","","",134,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"neg","","",122,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"neg","","",136,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"neg","","",126,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"neg","","",140,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"neg","","",132,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"neg","","",113,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"neg","","",114,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"neg","","",147,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"neg","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"neg","","",116,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"neg","","",107,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"neg","","",105,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"neg","","",133,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"neg","","",95,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"neg","","",110,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"neg","","",130,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"neg","","",101,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"neg","","",111,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"neg","","",138,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"neg","","",150,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"neg","","",125,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"neg","","",115,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"neg","","",151,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"neg","","",135,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"neg","","",94,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"neg","","",152,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"neg","","",153,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"neg","","",99,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"sub","","",139,null],[11,"sub","","",95,null],[11,"sub","","",151,null],[11,"sub","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"sub","","",124,null],[11,"sub","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"sub","","",128,null],[11,"sub","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"sub","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"sub","","",150,null],[11,"sub","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"sub","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"sub","","",153,null],[11,"sub","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"sub","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"sub","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"sub","","",129,null],[11,"sub","","",112,null],[11,"sub","","",142,null],[11,"sub","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"sub","","",137,null],[11,"sub","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"sub","","",100,null],[11,"sub","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"sub","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"sub","","",105,null],[11,"sub","","",116,null],[11,"sub","","",97,null],[11,"sub","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"sub","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"sub","","",103,null],[11,"sub","","",101,null],[11,"sub","","",134,null],[11,"sub","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"sub","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"sub","","",96,null],[11,"sub","","",113,null],[11,"sub","","",148,null],[11,"sub","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"sub","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"sub","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"sub","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"sub","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"sub","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"sub","","",132,null],[11,"sub","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"sub","","",143,null],[11,"sub","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"sub","","",119,null],[11,"sub","","",108,null],[11,"sub","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"sub","","",104,null],[11,"sub","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"sub","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"sub","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"sub","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"sub","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"sub","","",118,null],[11,"sub","","",99,null],[11,"sub","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"sub","","",115,null],[11,"sub","","",144,null],[11,"sub","","",138,null],[11,"sub","","",145,null],[11,"sub","","",120,null],[11,"sub","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"sub","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"sub","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"sub","","",141,null],[11,"sub","","",131,null],[11,"sub","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"sub","","",109,null],[11,"sub","","",127,null],[11,"sub","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"sub","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"sub","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"sub","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"sub","","",94,null],[11,"sub","","",121,null],[11,"sub","","",135,null],[11,"sub","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"sub","","",125,null],[11,"sub","","",146,null],[11,"sub","","",110,null],[11,"sub","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"sub","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"sub","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"sub","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"sub","","",140,null],[11,"sub","","",122,null],[11,"sub","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"sub","","",152,null],[11,"sub","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"sub","","",133,null],[11,"sub","","",111,null],[11,"sub","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"sub","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"sub","","",147,null],[11,"sub","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"sub","","",149,null],[11,"sub","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"sub","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"sub","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"sub","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"sub","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"sub","","",107,null],[11,"sub","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"sub","","",126,null],[11,"sub","","",130,null],[11,"sub","","",114,null],[11,"sub","","",123,null],[11,"sub","","",136,null],[11,"sub","","",117,null],[11,"sub","","",98,null],[11,"sub","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"sub","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"sub","","",102,null],[11,"sub","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"sub","","",106,null],[11,"sub","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"deref_mut","","",142,null],[11,"deref_mut","","",97,null],[11,"deref_mut","","",99,null],[11,"deref_mut","","",126,null],[11,"deref_mut","","",146,null],[11,"deref_mut","","",121,null],[11,"deref_mut","","",112,null],[11,"deref_mut","","",152,null],[11,"deref_mut","","",150,null],[11,"deref_mut","","",118,null],[11,"deref_mut","","",100,null],[11,"deref_mut","","",123,null],[11,"deref_mut","","",138,null],[11,"deref_mut","","",96,null],[11,"deref_mut","","",95,null],[11,"deref_mut","","",107,null],[11,"deref_mut","","",132,null],[11,"deref_mut","","",139,null],[11,"deref_mut","","",114,null],[11,"deref_mut","","",122,null],[11,"deref_mut","","",120,null],[11,"deref_mut","","",127,null],[11,"deref_mut","","",129,null],[11,"deref_mut","","",143,null],[11,"deref_mut","","",103,null],[11,"deref_mut","","",136,null],[11,"deref_mut","","",101,null],[11,"deref_mut","","",148,null],[11,"deref_mut","","",108,null],[11,"deref_mut","","",117,null],[11,"deref_mut","","",111,null],[11,"deref_mut","","",116,null],[11,"deref_mut","","",151,null],[11,"deref_mut","","",141,null],[11,"deref_mut","","",104,null],[11,"deref_mut","","",153,null],[11,"deref_mut","","",119,null],[11,"deref_mut","","",130,null],[11,"deref_mut","","",135,null],[11,"deref_mut","","",105,null],[11,"deref_mut","","",109,null],[11,"deref_mut","","",149,null],[11,"deref_mut","","",134,null],[11,"deref_mut","","",131,null],[11,"deref_mut","","",106,null],[11,"deref_mut","","",128,null],[11,"deref_mut","","",94,null],[11,"deref_mut","","",133,null],[11,"deref_mut","","",147,null],[11,"deref_mut","","",110,null],[11,"deref_mut","","",115,null],[11,"deref_mut","","",124,null],[11,"deref_mut","","",140,null],[11,"deref_mut","","",137,null],[11,"deref_mut","","",113,null],[11,"deref_mut","","",102,null],[11,"deref_mut","","",144,null],[11,"deref_mut","","",145,null],[11,"deref_mut","","",98,null],[11,"deref_mut","","",125,null],[11,"shr","","",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shr","","",153,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shr","","",145,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shr","","",142,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shr","","",108,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shr","","",120,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shr","","",124,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shr","","",116,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shr","","",136,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shr","","",137,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shr","","",96,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shr","","",104,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"shr","","",126,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shr","","",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shr","","",133,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shr","","",107,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shr","","",127,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shr","","",148,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shr","","",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shr","","",118,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shr","","",125,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shr","","",146,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shr","","",130,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shr","","",101,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shr","","",119,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shr","","",129,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shr","","",134,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shr","","",113,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shr","","",151,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shr","","",97,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shr","","",150,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shr","","",98,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shr","","",100,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shr","","",139,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shr","","",105,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shr","","",110,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shr","","",135,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shr","","",132,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shr","","",111,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shr","","",149,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shr","","",94,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shr","","",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shr","","",131,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shr","","",114,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shr","","",122,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shr","","",143,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shr","","",112,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shr","","",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"product","","",150,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",125,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",103,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",118,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",98,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",146,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",145,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",121,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",121,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",100,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",147,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",115,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",131,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",126,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",130,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",101,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",98,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",145,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",99,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",151,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"product","","",124,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",115,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",138,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",122,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",153,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",144,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",133,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",104,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",138,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",152,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",118,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",114,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",120,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",99,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",149,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",106,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",140,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",142,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",108,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",147,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",132,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",148,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",127,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",105,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",96,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",117,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",94,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",129,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",141,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",123,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",128,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",136,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",110,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",97,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",103,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",113,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",114,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",95,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",129,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",120,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",104,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",136,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",100,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",108,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",123,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",113,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",137,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",141,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",143,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",139,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",96,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",111,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",132,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",101,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",152,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",146,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",122,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",135,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",124,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",128,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",116,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",107,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",97,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",105,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",94,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",126,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",134,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",144,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",148,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",107,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",149,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",130,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",139,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",135,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",102,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",125,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",119,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",150,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",127,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",134,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",112,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",102,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",131,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",116,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",119,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",110,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",111,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",140,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",95,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",153,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",142,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",137,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",133,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",109,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",109,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",112,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",106,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",151,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"mul","","",96,null],[11,"mul","","",149,null],[11,"mul","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"mul","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"mul","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"mul","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"mul","","",129,null],[11,"mul","","",112,null],[11,"mul","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"mul","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"mul","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"mul","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"mul","","",119,null],[11,"mul","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"mul","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"mul","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"mul","","",137,null],[11,"mul","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"mul","","",110,null],[11,"mul","","",113,null],[11,"mul","","",111,null],[11,"mul","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"mul","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"mul","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"mul","","",108,null],[11,"mul","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"mul","","",117,null],[11,"mul","","",114,null],[11,"mul","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"mul","","",99,null],[11,"mul","","",109,null],[11,"mul","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"mul","","",100,null],[11,"mul","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"mul","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"mul","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"mul","","",123,null],[11,"mul","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"mul","","",103,null],[11,"mul","","",116,null],[11,"mul","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"mul","","",143,null],[11,"mul","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"mul","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"mul","","",107,null],[11,"mul","","",147,null],[11,"mul","","",125,null],[11,"mul","","",115,null],[11,"mul","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"mul","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"mul","","",94,null],[11,"mul","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"mul","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"mul","","",124,null],[11,"mul","","",148,null],[11,"mul","","",126,null],[11,"mul","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"mul","","",150,null],[11,"mul","","",136,null],[11,"mul","","",142,null],[11,"mul","","",128,null],[11,"mul","","",138,null],[11,"mul","","",132,null],[11,"mul","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"mul","","",134,null],[11,"mul","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"mul","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"mul","","",118,null],[11,"mul","","",120,null],[11,"mul","","",139,null],[11,"mul","","",122,null],[11,"mul","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"mul","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"mul","","",151,null],[11,"mul","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"mul","","",106,null],[11,"mul","","",152,null],[11,"mul","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"mul","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"mul","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"mul","","",97,null],[11,"mul","","",98,null],[11,"mul","","",153,null],[11,"mul","","",101,null],[11,"mul","","",104,null],[11,"mul","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"mul","","",135,null],[11,"mul","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"mul","","",140,null],[11,"mul","","",130,null],[11,"mul","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"mul","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"mul","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"mul","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"mul","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"mul","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"mul","","",145,null],[11,"mul","","",102,null],[11,"mul","","",133,null],[11,"mul","","",95,null],[11,"mul","","",105,null],[11,"mul","","",141,null],[11,"mul","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"mul","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"mul","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"mul","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"mul","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"mul","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"mul","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"mul","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"mul","","",144,null],[11,"mul","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"mul","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"mul","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"mul","","",146,null],[11,"mul","","",131,null],[11,"mul","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"mul","","",121,null],[11,"mul","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"mul","","",127,null],[11,"rem_assign","","",141,null],[11,"rem_assign","","",130,null],[11,"rem_assign","","",98,null],[11,"rem_assign","","",105,null],[11,"rem_assign","","",122,null],[11,"rem_assign","","",151,null],[11,"rem_assign","","",137,null],[11,"rem_assign","","",123,null],[11,"rem_assign","","",117,null],[11,"rem_assign","","",138,null],[11,"rem_assign","","",148,null],[11,"rem_assign","","",131,null],[11,"rem_assign","","",106,null],[11,"rem_assign","","",109,null],[11,"rem_assign","","",134,null],[11,"rem_assign","","",126,null],[11,"rem_assign","","",128,null],[11,"rem_assign","","",152,null],[11,"rem_assign","","",116,null],[11,"rem_assign","","",124,null],[11,"rem_assign","","",113,null],[11,"rem_assign","","",119,null],[11,"rem_assign","","",125,null],[11,"rem_assign","","",115,null],[11,"rem_assign","","",132,null],[11,"rem_assign","","",114,null],[11,"rem_assign","","",102,null],[11,"rem_assign","","",111,null],[11,"rem_assign","","",99,null],[11,"rem_assign","","",135,null],[11,"rem_assign","","",96,null],[11,"rem_assign","","",133,null],[11,"rem_assign","","",120,null],[11,"rem_assign","","",146,null],[11,"rem_assign","","",107,null],[11,"rem_assign","","",149,null],[11,"rem_assign","","",127,null],[11,"rem_assign","","",136,null],[11,"rem_assign","","",101,null],[11,"rem_assign","","",142,null],[11,"rem_assign","","",103,null],[11,"rem_assign","","",97,null],[11,"rem_assign","","",118,null],[11,"rem_assign","","",100,null],[11,"rem_assign","","",147,null],[11,"rem_assign","","",104,null],[11,"rem_assign","","",139,null],[11,"rem_assign","","",145,null],[11,"rem_assign","","",112,null],[11,"rem_assign","","",144,null],[11,"rem_assign","","",140,null],[11,"rem_assign","","",95,null],[11,"rem_assign","","",108,null],[11,"rem_assign","","",153,null],[11,"rem_assign","","",110,null],[11,"rem_assign","","",94,null],[11,"rem_assign","","",150,null],[11,"rem_assign","","",143,null],[11,"rem_assign","","",121,null],[11,"rem_assign","","",129,null],[11,"cmp","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"ordering"}}],[11,"cmp","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"ordering"}}],[11,"cmp","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"ordering"}}],[11,"cmp","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"ordering"}}],[11,"cmp","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"ordering"}}],[11,"cmp","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"ordering"}}],[11,"cmp","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"ordering"}}],[11,"cmp","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"ordering"}}],[11,"cmp","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ordering"}}],[11,"cmp","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"ordering"}}],[11,"cmp","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ordering"}}],[11,"cmp","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ordering"}}],[11,"cmp","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"cmp","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"ordering"}}],[11,"cmp","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"ordering"}}],[11,"cmp","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"ordering"}}],[11,"cmp","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"ordering"}}],[11,"cmp","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"ordering"}}],[11,"cmp","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"ordering"}}],[11,"cmp","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"ordering"}}],[11,"cmp","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ordering"}}],[11,"cmp","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"ordering"}}],[11,"cmp","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"ordering"}}],[11,"cmp","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ordering"}}],[11,"cmp","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"ordering"}}],[11,"cmp","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"ordering"}}],[11,"cmp","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"ordering"}}],[11,"cmp","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"ordering"}}],[11,"cmp","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ordering"}}],[11,"cmp","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"ordering"}}],[11,"cmp","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"ordering"}}],[11,"cmp","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"ordering"}}],[11,"cmp","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"ordering"}}],[11,"cmp","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ordering"}}],[11,"cmp","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"ordering"}}],[11,"cmp","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"ordering"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"ordering"}}],[11,"cmp","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ordering"}}],[11,"cmp","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"ordering"}}],[11,"cmp","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ordering"}}],[11,"cmp","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"cmp","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"ordering"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ordering"}}],[11,"cmp","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"ordering"}}],[11,"cmp","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ordering"}}],[11,"cmp","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"ordering"}}],[11,"cmp","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"ordering"}}],[11,"cmp","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ordering"}}],[11,"add_assign","","",107,null],[11,"add_assign","","",97,null],[11,"add_assign","","",128,null],[11,"add_assign","","",149,null],[11,"add_assign","","",144,null],[11,"add_assign","","",153,null],[11,"add_assign","","",118,null],[11,"add_assign","","",140,null],[11,"add_assign","","",98,null],[11,"add_assign","","",94,null],[11,"add_assign","","",113,null],[11,"add_assign","","",115,null],[11,"add_assign","","",125,null],[11,"add_assign","","",131,null],[11,"add_assign","","",127,null],[11,"add_assign","","",134,null],[11,"add_assign","","",103,null],[11,"add_assign","","",96,null],[11,"add_assign","","",112,null],[11,"add_assign","","",119,null],[11,"add_assign","","",139,null],[11,"add_assign","","",135,null],[11,"add_assign","","",148,null],[11,"add_assign","","",132,null],[11,"add_assign","","",124,null],[11,"add_assign","","",99,null],[11,"add_assign","","",95,null],[11,"add_assign","","",108,null],[11,"add_assign","","",117,null],[11,"add_assign","","",142,null],[11,"add_assign","","",101,null],[11,"add_assign","","",110,null],[11,"add_assign","","",111,null],[11,"add_assign","","",146,null],[11,"add_assign","","",126,null],[11,"add_assign","","",137,null],[11,"add_assign","","",151,null],[11,"add_assign","","",120,null],[11,"add_assign","","",114,null],[11,"add_assign","","",136,null],[11,"add_assign","","",152,null],[11,"add_assign","","",102,null],[11,"add_assign","","",145,null],[11,"add_assign","","",133,null],[11,"add_assign","","",129,null],[11,"add_assign","","",104,null],[11,"add_assign","","",147,null],[11,"add_assign","","",143,null],[11,"add_assign","","",116,null],[11,"add_assign","","",141,null],[11,"add_assign","","",105,null],[11,"add_assign","","",106,null],[11,"add_assign","","",150,null],[11,"add_assign","","",100,null],[11,"add_assign","","",130,null],[11,"add_assign","","",109,null],[11,"add_assign","","",123,null],[11,"add_assign","","",121,null],[11,"add_assign","","",122,null],[11,"add_assign","","",138,null],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",114,null],[11,"from","","",148,null],[11,"from","","",126,null],[11,"from","","",107,null],[11,"from","","",94,null],[11,"from","","",120,null],[11,"from","","",108,null],[11,"from","","",112,null],[11,"from","","",105,null],[11,"from","","",97,null],[11,"from","","",117,null],[11,"from","","",121,null],[11,"from","","",94,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"from","","",103,null],[11,"from","","",149,null],[11,"from","","",100,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"from","","",140,null],[11,"from","","",115,null],[11,"from","","",128,null],[11,"from","","",101,null],[11,"from","","",119,null],[11,"from","","",146,null],[11,"from","","",96,null],[11,"from","","",109,null],[11,"from","","",110,null],[11,"from","","",95,null],[11,"from","","",138,null],[11,"from","","",144,null],[11,"from","","",145,null],[11,"from","","",95,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"from","","",122,null],[11,"from","","",98,null],[11,"from","","",99,null],[11,"from","","",131,null],[11,"from","","",111,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"from","","",147,null],[11,"from","","",150,null],[11,"from","","",111,null],[11,"from","","",127,null],[11,"from","","",123,null],[11,"from","","",118,null],[11,"from","","",106,null],[11,"from","","",131,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"from","","",104,null],[11,"from","","",137,null],[11,"from","","",143,null],[11,"from","","",102,null],[11,"from","","",152,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"from","","",136,null],[11,"from","","",133,null],[11,"from","","",134,null],[11,"from","","",113,null],[11,"from","","",102,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"from","","",135,null],[11,"from","","",151,null],[11,"from","","",142,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"from","","",129,null],[11,"from","","",132,null],[11,"from","","",114,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"from","","",141,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"from","","",116,null],[11,"from","","",153,null],[11,"from","","",152,null],[11,"from","","",124,null],[11,"from","","",142,null],[11,"from","","",141,null],[11,"from","","",130,null],[11,"from","","",139,null],[11,"from","","",125,null],[11,"from","","",100,null],[11,"shl","","",118,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shl","","",130,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shl","","",149,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shl","","",135,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shl","","",108,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shl","","",122,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shl","","",132,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shl","","",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"shl","","",99,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shl","","",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shl","","",148,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shl","","",134,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shl","","",100,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shl","","",94,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shl","","",124,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shl","","",107,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shl","","",120,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shl","","",133,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shl","","",127,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shl","","",131,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shl","","",150,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shl","","",112,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shl","","",125,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shl","","",110,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shl","","",98,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shl","","",137,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shl","","",113,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shl","","",103,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shl","","",101,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shl","","",96,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shl","","",116,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shl","","",146,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shl","","",136,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shl","","",102,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shl","","",105,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shl","","",151,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shl","","",129,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shl","","",114,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shl","","",111,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shl","","",119,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shl","","",142,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shl","","",126,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shl","","",143,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shl","","",139,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shl","","",97,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shl","","",145,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shl","","",153,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shl","","",104,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"mul_assign","","",149,null],[11,"mul_assign","","",112,null],[11,"mul_assign","","",132,null],[11,"mul_assign","","",143,null],[11,"mul_assign","","",117,null],[11,"mul_assign","","",107,null],[11,"mul_assign","","",106,null],[11,"mul_assign","","",130,null],[11,"mul_assign","","",142,null],[11,"mul_assign","","",152,null],[11,"mul_assign","","",114,null],[11,"mul_assign","","",102,null],[11,"mul_assign","","",134,null],[11,"mul_assign","","",146,null],[11,"mul_assign","","",144,null],[11,"mul_assign","","",126,null],[11,"mul_assign","","",148,null],[11,"mul_assign","","",136,null],[11,"mul_assign","","",108,null],[11,"mul_assign","","",119,null],[11,"mul_assign","","",139,null],[11,"mul_assign","","",122,null],[11,"mul_assign","","",124,null],[11,"mul_assign","","",94,null],[11,"mul_assign","","",120,null],[11,"mul_assign","","",100,null],[11,"mul_assign","","",125,null],[11,"mul_assign","","",109,null],[11,"mul_assign","","",95,null],[11,"mul_assign","","",110,null],[11,"mul_assign","","",123,null],[11,"mul_assign","","",145,null],[11,"mul_assign","","",101,null],[11,"mul_assign","","",151,null],[11,"mul_assign","","",111,null],[11,"mul_assign","","",153,null],[11,"mul_assign","","",137,null],[11,"mul_assign","","",116,null],[11,"mul_assign","","",121,null],[11,"mul_assign","","",96,null],[11,"mul_assign","","",115,null],[11,"mul_assign","","",98,null],[11,"mul_assign","","",105,null],[11,"mul_assign","","",104,null],[11,"mul_assign","","",133,null],[11,"mul_assign","","",138,null],[11,"mul_assign","","",129,null],[11,"mul_assign","","",113,null],[11,"mul_assign","","",128,null],[11,"mul_assign","","",99,null],[11,"mul_assign","","",118,null],[11,"mul_assign","","",97,null],[11,"mul_assign","","",127,null],[11,"mul_assign","","",131,null],[11,"mul_assign","","",103,null],[11,"mul_assign","","",141,null],[11,"mul_assign","","",147,null],[11,"mul_assign","","",140,null],[11,"mul_assign","","",135,null],[11,"mul_assign","","",150,null],[11,"zero","","",137,{"inputs":[],"output":{"name":"long4"}}],[11,"is_zero","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",94,{"inputs":[],"output":{"name":"char"}}],[11,"is_zero","","",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",107,{"inputs":[],"output":{"name":"int16"}}],[11,"is_zero","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",123,{"inputs":[],"output":{"name":"double16"}}],[11,"is_zero","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",140,{"inputs":[],"output":{"name":"float3"}}],[11,"is_zero","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",109,{"inputs":[],"output":{"name":"double3"}}],[11,"is_zero","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",122,{"inputs":[],"output":{"name":"uchar3"}}],[11,"is_zero","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",131,{"inputs":[],"output":{"name":"uint"}}],[11,"is_zero","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",130,{"inputs":[],"output":{"name":"int8"}}],[11,"is_zero","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",129,{"inputs":[],"output":{"name":"ulong8"}}],[11,"is_zero","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",132,{"inputs":[],"output":{"name":"short8"}}],[11,"is_zero","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",117,{"inputs":[],"output":{"name":"double4"}}],[11,"is_zero","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",135,{"inputs":[],"output":{"name":"uchar2"}}],[11,"is_zero","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",134,{"inputs":[],"output":{"name":"ulong4"}}],[11,"is_zero","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",108,{"inputs":[],"output":{"name":"char16"}}],[11,"is_zero","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",98,{"inputs":[],"output":{"name":"ulong3"}}],[11,"is_zero","","",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",136,{"inputs":[],"output":{"name":"short4"}}],[11,"is_zero","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",95,{"inputs":[],"output":{"name":"int"}}],[11,"is_zero","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",106,{"inputs":[],"output":{"name":"double2"}}],[11,"is_zero","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",96,{"inputs":[],"output":{"name":"short16"}}],[11,"is_zero","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",104,{"inputs":[],"output":{"name":"ulong2"}}],[11,"is_zero","","",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",116,{"inputs":[],"output":{"name":"uchar8"}}],[11,"is_zero","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",115,{"inputs":[],"output":{"name":"float2"}}],[11,"is_zero","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",148,{"inputs":[],"output":{"name":"int3"}}],[11,"is_zero","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",102,{"inputs":[],"output":{"name":"ulong"}}],[11,"is_zero","","",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",142,{"inputs":[],"output":{"name":"short"}}],[11,"is_zero","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",147,{"inputs":[],"output":{"name":"float4"}}],[11,"is_zero","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",128,{"inputs":[],"output":{"name":"float16"}}],[11,"is_zero","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",105,{"inputs":[],"output":{"name":"ushort3"}}],[11,"is_zero","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",100,{"inputs":[],"output":{"name":"uchar"}}],[11,"is_zero","","",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",150,{"inputs":[],"output":{"name":"char8"}}],[11,"is_zero","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",113,{"inputs":[],"output":{"name":"char2"}}],[11,"is_zero","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",144,{"inputs":[],"output":{"name":"float8"}}],[11,"is_zero","","",144,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",138,{"inputs":[],"output":{"name":"double8"}}],[11,"is_zero","","",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",143,{"inputs":[],"output":{"name":"uchar16"}}],[11,"is_zero","","",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",145,{"inputs":[],"output":{"name":"char3"}}],[11,"is_zero","","",145,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",133,{"inputs":[],"output":{"name":"short3"}}],[11,"is_zero","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",103,{"inputs":[],"output":{"name":"uchar4"}}],[11,"is_zero","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",110,{"inputs":[],"output":{"name":"uint16"}}],[11,"is_zero","","",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",97,{"inputs":[],"output":{"name":"long3"}}],[11,"is_zero","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",124,{"inputs":[],"output":{"name":"int4"}}],[11,"is_zero","","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",126,{"inputs":[],"output":{"name":"uint3"}}],[11,"is_zero","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",127,{"inputs":[],"output":{"name":"ushort8"}}],[11,"is_zero","","",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",149,{"inputs":[],"output":{"name":"int2"}}],[11,"is_zero","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",119,{"inputs":[],"output":{"name":"ushort2"}}],[11,"is_zero","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",101,{"inputs":[],"output":{"name":"long8"}}],[11,"is_zero","","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",139,{"inputs":[],"output":{"name":"ushort4"}}],[11,"is_zero","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",99,{"inputs":[],"output":{"name":"short2"}}],[11,"is_zero","","",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",111,{"inputs":[],"output":{"name":"long"}}],[11,"is_zero","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",120,{"inputs":[],"output":{"name":"long16"}}],[11,"is_zero","","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",121,{"inputs":[],"output":{"name":"char4"}}],[11,"is_zero","","",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",125,{"inputs":[],"output":{"name":"long2"}}],[11,"is_zero","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",151,{"inputs":[],"output":{"name":"uint2"}}],[11,"is_zero","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",112,{"inputs":[],"output":{"name":"ushort16"}}],[11,"is_zero","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",152,{"inputs":[],"output":{"name":"double"}}],[11,"is_zero","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",118,{"inputs":[],"output":{"name":"uint4"}}],[11,"is_zero","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",114,{"inputs":[],"output":{"name":"ushort"}}],[11,"is_zero","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",153,{"inputs":[],"output":{"name":"ulong16"}}],[11,"is_zero","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",141,{"inputs":[],"output":{"name":"float"}}],[11,"is_zero","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"zero","","",146,{"inputs":[],"output":{"name":"uint8"}}],[11,"is_zero","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"sub_assign","","",120,null],[11,"sub_assign","","",147,null],[11,"sub_assign","","",140,null],[11,"sub_assign","","",112,null],[11,"sub_assign","","",130,null],[11,"sub_assign","","",98,null],[11,"sub_assign","","",94,null],[11,"sub_assign","","",135,null],[11,"sub_assign","","",121,null],[11,"sub_assign","","",106,null],[11,"sub_assign","","",107,null],[11,"sub_assign","","",96,null],[11,"sub_assign","","",137,null],[11,"sub_assign","","",113,null],[11,"sub_assign","","",110,null],[11,"sub_assign","","",142,null],[11,"sub_assign","","",104,null],[11,"sub_assign","","",111,null],[11,"sub_assign","","",114,null],[11,"sub_assign","","",119,null],[11,"sub_assign","","",141,null],[11,"sub_assign","","",125,null],[11,"sub_assign","","",118,null],[11,"sub_assign","","",149,null],[11,"sub_assign","","",127,null],[11,"sub_assign","","",102,null],[11,"sub_assign","","",145,null],[11,"sub_assign","","",109,null],[11,"sub_assign","","",100,null],[11,"sub_assign","","",101,null],[11,"sub_assign","","",123,null],[11,"sub_assign","","",151,null],[11,"sub_assign","","",126,null],[11,"sub_assign","","",128,null],[11,"sub_assign","","",138,null],[11,"sub_assign","","",122,null],[11,"sub_assign","","",105,null],[11,"sub_assign","","",143,null],[11,"sub_assign","","",134,null],[11,"sub_assign","","",116,null],[11,"sub_assign","","",133,null],[11,"sub_assign","","",124,null],[11,"sub_assign","","",131,null],[11,"sub_assign","","",132,null],[11,"sub_assign","","",115,null],[11,"sub_assign","","",117,null],[11,"sub_assign","","",103,null],[11,"sub_assign","","",146,null],[11,"sub_assign","","",153,null],[11,"sub_assign","","",150,null],[11,"sub_assign","","",152,null],[11,"sub_assign","","",95,null],[11,"sub_assign","","",139,null],[11,"sub_assign","","",136,null],[11,"sub_assign","","",99,null],[11,"sub_assign","","",148,null],[11,"sub_assign","","",108,null],[11,"sub_assign","","",97,null],[11,"sub_assign","","",129,null],[11,"sub_assign","","",144,null],[11,"add","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"add","","",143,null],[11,"add","","",121,null],[11,"add","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"add","","",105,null],[11,"add","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"add","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"add","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"add","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"add","","",136,null],[11,"add","","",147,null],[11,"add","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"add","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"add","","",151,null],[11,"add","","",120,null],[11,"add","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"add","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"add","","",98,null],[11,"add","","",95,null],[11,"add","","",126,null],[11,"add","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"add","","",104,null],[11,"add","","",140,null],[11,"add","","",112,null],[11,"add","","",129,null],[11,"add","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"add","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"add","","",131,null],[11,"add","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"add","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"add","","",111,null],[11,"add","","",117,null],[11,"add","","",137,null],[11,"add","","",152,null],[11,"add","","",103,null],[11,"add","","",145,null],[11,"add","","",115,null],[11,"add","","",142,null],[11,"add","","",114,null],[11,"add","","",148,null],[11,"add","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"add","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"add","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"add","","",141,null],[11,"add","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"add","","",130,null],[11,"add","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"add","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"add","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"add","","",149,null],[11,"add","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"add","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"add","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"add","","",124,null],[11,"add","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"add","","",110,null],[11,"add","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"add","","",108,null],[11,"add","","",132,null],[11,"add","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"add","","",102,null],[11,"add","","",133,null],[11,"add","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"add","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"add","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"add","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"add","","",109,null],[11,"add","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"add","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"add","","",119,null],[11,"add","","",106,null],[11,"add","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"add","","",94,null],[11,"add","","",122,null],[11,"add","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"add","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"add","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"add","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"add","","",128,null],[11,"add","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"add","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"add","","",135,null],[11,"add","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"add","","",144,null],[11,"add","","",146,null],[11,"add","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"add","","",96,null],[11,"add","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"add","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"add","","",107,null],[11,"add","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"add","","",101,null],[11,"add","","",127,null],[11,"add","","",97,null],[11,"add","","",125,null],[11,"add","","",116,null],[11,"add","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"add","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"add","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"add","","",150,null],[11,"add","","",123,null],[11,"add","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"add","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"add","","",113,null],[11,"add","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"add","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"add","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"add","","",118,null],[11,"add","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"add","","",134,null],[11,"add","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"add","","",100,null],[11,"add","","",139,null],[11,"add","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"add","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"add","","",153,null],[11,"add","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"add","","",99,null],[11,"add","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"add","","",138,null],[11,"one","","",126,{"inputs":[],"output":{"name":"uint3"}}],[11,"one","","",130,{"inputs":[],"output":{"name":"int8"}}],[11,"one","","",107,{"inputs":[],"output":{"name":"int16"}}],[11,"one","","",145,{"inputs":[],"output":{"name":"char3"}}],[11,"one","","",136,{"inputs":[],"output":{"name":"short4"}}],[11,"one","","",112,{"inputs":[],"output":{"name":"ushort16"}}],[11,"one","","",139,{"inputs":[],"output":{"name":"ushort4"}}],[11,"one","","",138,{"inputs":[],"output":{"name":"double8"}}],[11,"one","","",108,{"inputs":[],"output":{"name":"char16"}}],[11,"one","","",129,{"inputs":[],"output":{"name":"ulong8"}}],[11,"one","","",134,{"inputs":[],"output":{"name":"ulong4"}}],[11,"one","","",113,{"inputs":[],"output":{"name":"char2"}}],[11,"one","","",117,{"inputs":[],"output":{"name":"double4"}}],[11,"one","","",116,{"inputs":[],"output":{"name":"uchar8"}}],[11,"one","","",118,{"inputs":[],"output":{"name":"uint4"}}],[11,"one","","",102,{"inputs":[],"output":{"name":"ulong"}}],[11,"one","","",104,{"inputs":[],"output":{"name":"ulong2"}}],[11,"one","","",119,{"inputs":[],"output":{"name":"ushort2"}}],[11,"one","","",153,{"inputs":[],"output":{"name":"ulong16"}}],[11,"one","","",143,{"inputs":[],"output":{"name":"uchar16"}}],[11,"one","","",151,{"inputs":[],"output":{"name":"uint2"}}],[11,"one","","",135,{"inputs":[],"output":{"name":"uchar2"}}],[11,"one","","",101,{"inputs":[],"output":{"name":"long8"}}],[11,"one","","",140,{"inputs":[],"output":{"name":"float3"}}],[11,"one","","",127,{"inputs":[],"output":{"name":"ushort8"}}],[11,"one","","",99,{"inputs":[],"output":{"name":"short2"}}],[11,"one","","",106,{"inputs":[],"output":{"name":"double2"}}],[11,"one","","",133,{"inputs":[],"output":{"name":"short3"}}],[11,"one","","",114,{"inputs":[],"output":{"name":"ushort"}}],[11,"one","","",125,{"inputs":[],"output":{"name":"long2"}}],[11,"one","","",96,{"inputs":[],"output":{"name":"short16"}}],[11,"one","","",121,{"inputs":[],"output":{"name":"char4"}}],[11,"one","","",147,{"inputs":[],"output":{"name":"float4"}}],[11,"one","","",111,{"inputs":[],"output":{"name":"long"}}],[11,"one","","",95,{"inputs":[],"output":{"name":"int"}}],[11,"one","","",109,{"inputs":[],"output":{"name":"double3"}}],[11,"one","","",115,{"inputs":[],"output":{"name":"float2"}}],[11,"one","","",150,{"inputs":[],"output":{"name":"char8"}}],[11,"one","","",103,{"inputs":[],"output":{"name":"uchar4"}}],[11,"one","","",132,{"inputs":[],"output":{"name":"short8"}}],[11,"one","","",152,{"inputs":[],"output":{"name":"double"}}],[11,"one","","",123,{"inputs":[],"output":{"name":"double16"}}],[11,"one","","",97,{"inputs":[],"output":{"name":"long3"}}],[11,"one","","",98,{"inputs":[],"output":{"name":"ulong3"}}],[11,"one","","",124,{"inputs":[],"output":{"name":"int4"}}],[11,"one","","",142,{"inputs":[],"output":{"name":"short"}}],[11,"one","","",148,{"inputs":[],"output":{"name":"int3"}}],[11,"one","","",110,{"inputs":[],"output":{"name":"uint16"}}],[11,"one","","",128,{"inputs":[],"output":{"name":"float16"}}],[11,"one","","",144,{"inputs":[],"output":{"name":"float8"}}],[11,"one","","",120,{"inputs":[],"output":{"name":"long16"}}],[11,"one","","",122,{"inputs":[],"output":{"name":"uchar3"}}],[11,"one","","",94,{"inputs":[],"output":{"name":"char"}}],[11,"one","","",131,{"inputs":[],"output":{"name":"uint"}}],[11,"one","","",105,{"inputs":[],"output":{"name":"ushort3"}}],[11,"one","","",100,{"inputs":[],"output":{"name":"uchar"}}],[11,"one","","",141,{"inputs":[],"output":{"name":"float"}}],[11,"one","","",149,{"inputs":[],"output":{"name":"int2"}}],[11,"one","","",146,{"inputs":[],"output":{"name":"uint8"}}],[11,"one","","",137,{"inputs":[],"output":{"name":"long4"}}],[11,"hash","","",102,null],[11,"hash","","",101,null],[11,"hash","","",121,null],[11,"hash","","",118,null],[11,"hash","","",132,null],[11,"hash","","",127,null],[11,"hash","","",151,null],[11,"hash","","",113,null],[11,"hash","","",133,null],[11,"hash","","",142,null],[11,"hash","","",125,null],[11,"hash","","",131,null],[11,"hash","","",134,null],[11,"hash","","",126,null],[11,"hash","","",97,null],[11,"hash","","",124,null],[11,"hash","","",103,null],[11,"hash","","",149,null],[11,"hash","","",137,null],[11,"hash","","",145,null],[11,"hash","","",108,null],[11,"hash","","",112,null],[11,"hash","","",122,null],[11,"hash","","",143,null],[11,"hash","","",136,null],[11,"hash","","",110,null],[11,"hash","","",95,null],[11,"hash","","",96,null],[11,"hash","","",114,null],[11,"hash","","",146,null],[11,"hash","","",120,null],[11,"hash","","",153,null],[11,"hash","","",94,null],[11,"hash","","",100,null],[11,"hash","","",135,null],[11,"hash","","",148,null],[11,"hash","","",130,null],[11,"hash","","",111,null],[11,"hash","","",129,null],[11,"hash","","",116,null],[11,"hash","","",139,null],[11,"hash","","",150,null],[11,"hash","","",104,null],[11,"hash","","",107,null],[11,"hash","","",105,null],[11,"hash","","",98,null],[11,"hash","","",119,null],[11,"hash","","",99,null],[11,"bitand_assign","","",124,null],[11,"bitand_assign","","",131,null],[11,"bitand_assign","","",107,null],[11,"bitand_assign","","",103,null],[11,"bitand_assign","","",95,null],[11,"bitand_assign","","",98,null],[11,"bitand_assign","","",150,null],[11,"bitand_assign","","",151,null],[11,"bitand_assign","","",99,null],[11,"bitand_assign","","",114,null],[11,"bitand_assign","","",97,null],[11,"bitand_assign","","",129,null],[11,"bitand_assign","","",148,null],[11,"bitand_assign","","",120,null],[11,"bitand_assign","","",111,null],[11,"bitand_assign","","",126,null],[11,"bitand_assign","","",135,null],[11,"bitand_assign","","",116,null],[11,"bitand_assign","","",142,null],[11,"bitand_assign","","",96,null],[11,"bitand_assign","","",119,null],[11,"bitand_assign","","",130,null],[11,"bitand_assign","","",136,null],[11,"bitand_assign","","",113,null],[11,"bitand_assign","","",105,null],[11,"bitand_assign","","",104,null],[11,"bitand_assign","","",127,null],[11,"bitand_assign","","",102,null],[11,"bitand_assign","","",118,null],[11,"bitand_assign","","",94,null],[11,"bitand_assign","","",133,null],[11,"bitand_assign","","",134,null],[11,"bitand_assign","","",139,null],[11,"bitand_assign","","",146,null],[11,"bitand_assign","","",137,null],[11,"bitand_assign","","",121,null],[11,"bitand_assign","","",101,null],[11,"bitand_assign","","",110,null],[11,"bitand_assign","","",112,null],[11,"bitand_assign","","",125,null],[11,"bitand_assign","","",149,null],[11,"bitand_assign","","",132,null],[11,"bitand_assign","","",153,null],[11,"bitand_assign","","",100,null],[11,"bitand_assign","","",143,null],[11,"bitand_assign","","",108,null],[11,"bitand_assign","","",145,null],[11,"bitand_assign","","",122,null],[11,"shr_assign","","",112,null],[11,"shr_assign","","",96,null],[11,"shr_assign","","",114,null],[11,"shr_assign","","",135,null],[11,"shr_assign","","",119,null],[11,"shr_assign","","",111,null],[11,"shr_assign","","",131,null],[11,"shr_assign","","",139,null],[11,"shr_assign","","",98,null],[11,"shr_assign","","",101,null],[11,"shr_assign","","",148,null],[11,"shr_assign","","",129,null],[11,"shr_assign","","",121,null],[11,"shr_assign","","",100,null],[11,"shr_assign","","",118,null],[11,"shr_assign","","",104,null],[11,"shr_assign","","",150,null],[11,"shr_assign","","",103,null],[11,"shr_assign","","",130,null],[11,"shr_assign","","",126,null],[11,"shr_assign","","",110,null],[11,"shr_assign","","",125,null],[11,"shr_assign","","",134,null],[11,"shr_assign","","",120,null],[11,"shr_assign","","",151,null],[11,"shr_assign","","",108,null],[11,"shr_assign","","",153,null],[11,"shr_assign","","",143,null],[11,"shr_assign","","",127,null],[11,"shr_assign","","",124,null],[11,"shr_assign","","",149,null],[11,"shr_assign","","",122,null],[11,"shr_assign","","",132,null],[11,"shr_assign","","",99,null],[11,"shr_assign","","",94,null],[11,"shr_assign","","",105,null],[11,"shr_assign","","",142,null],[11,"shr_assign","","",95,null],[11,"shr_assign","","",113,null],[11,"shr_assign","","",102,null],[11,"shr_assign","","",107,null],[11,"shr_assign","","",145,null],[11,"shr_assign","","",146,null],[11,"shr_assign","","",136,null],[11,"shr_assign","","",97,null],[11,"shr_assign","","",133,null],[11,"shr_assign","","",116,null],[11,"shr_assign","","",137,null],[11,"bitor","","",151,null],[11,"bitor","","",120,null],[11,"bitor","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitor","","",124,null],[11,"bitor","","",113,null],[11,"bitor","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitor","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitor","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitor","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitor","","",99,null],[11,"bitor","","",98,null],[11,"bitor","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitor","","",119,null],[11,"bitor","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitor","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitor","","",130,null],[11,"bitor","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitor","","",110,null],[11,"bitor","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitor","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitor","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitor","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitor","","",112,null],[11,"bitor","","",104,null],[11,"bitor","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitor","","",135,null],[11,"bitor","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitor","","",116,null],[11,"bitor","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitor","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitor","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitor","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitor","","",153,null],[11,"bitor","","",127,null],[11,"bitor","","",139,null],[11,"bitor","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitor","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitor","","",148,null],[11,"bitor","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitor","","",103,null],[11,"bitor","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitor","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitor","","",121,null],[11,"bitor","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitor","","",111,null],[11,"bitor","","",136,null],[11,"bitor","","",134,null],[11,"bitor","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitor","","",118,null],[11,"bitor","","",145,null],[11,"bitor","","",107,null],[11,"bitor","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitor","","",137,null],[11,"bitor","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitor","","",94,null],[11,"bitor","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitor","","",142,null],[11,"bitor","","",149,null],[11,"bitor","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitor","","",143,null],[11,"bitor","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitor","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitor","","",96,null],[11,"bitor","","",108,null],[11,"bitor","","",131,null],[11,"bitor","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitor","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitor","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitor","","",102,null],[11,"bitor","","",133,null],[11,"bitor","","",125,null],[11,"bitor","","",97,null],[11,"bitor","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitor","","",132,null],[11,"bitor","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitor","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitor","","",122,null],[11,"bitor","","",100,null],[11,"bitor","","",95,null],[11,"bitor","","",129,null],[11,"bitor","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitor","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitor","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitor","","",101,null],[11,"bitor","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitor","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitor","","",126,null],[11,"bitor","","",105,null],[11,"bitor","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitor","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitor","","",150,null],[11,"bitor","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitor","","",146,null],[11,"bitor","","",114,null],[11,"bitor","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitor","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"rem","","",151,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"rem","","",144,null],[11,"rem","","",136,null],[11,"rem","","",103,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"rem","","",115,null],[11,"rem","","",142,null],[11,"rem","","",129,null],[11,"rem","","",115,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"rem","","",117,null],[11,"rem","","",141,null],[11,"rem","","",130,null],[11,"rem","","",126,null],[11,"rem","","",137,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"rem","","",152,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"rem","","",108,null],[11,"rem","","",149,null],[11,"rem","","",123,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"rem","","",118,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"rem","","",126,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"rem","","",112,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"rem","","",135,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"rem","","",106,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"rem","","",96,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"rem","","",117,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"rem","","",147,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"rem","","",101,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"rem","","",125,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"rem","","",124,null],[11,"rem","","",125,null],[11,"rem","","",119,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"rem","","",153,null],[11,"rem","","",118,null],[11,"rem","","",113,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"rem","","",145,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"rem","","",96,null],[11,"rem","","",134,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"rem","","",111,null],[11,"rem","","",150,null],[11,"rem","","",133,null],[11,"rem","","",119,null],[11,"rem","","",143,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"rem","","",120,null],[11,"rem","","",102,null],[11,"rem","","",112,null],[11,"rem","","",104,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"rem","","",97,null],[11,"rem","","",121,null],[11,"rem","","",111,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"rem","","",105,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"rem","","",129,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"rem","","",132,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"rem","","",138,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"rem","","",107,null],[11,"rem","","",113,null],[11,"rem","","",146,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"rem","","",120,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"rem","","",106,null],[11,"rem","","",102,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"rem","","",104,null],[11,"rem","","",131,null],[11,"rem","","",116,null],[11,"rem","","",114,null],[11,"rem","","",121,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"rem","","",140,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"rem","","",100,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"rem","","",110,null],[11,"rem","","",99,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"rem","","",95,null],[11,"rem","","",109,null],[11,"rem","","",122,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"rem","","",132,null],[11,"rem","","",130,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"rem","","",150,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"rem","","",98,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"rem","","",99,null],[11,"rem","","",100,null],[11,"rem","","",143,null],[11,"rem","","",108,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"rem","","",153,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"rem","","",147,null],[11,"rem","","",152,null],[11,"rem","","",101,null],[11,"rem","","",151,null],[11,"rem","","",146,null],[11,"rem","","",122,null],[11,"rem","","",97,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"rem","","",136,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"rem","","",109,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"rem","","",131,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"rem","","",135,null],[11,"rem","","",128,null],[11,"rem","","",137,null],[11,"rem","","",98,null],[11,"rem","","",142,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"rem","","",127,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"rem","","",128,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"rem","","",116,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"rem","","",141,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"rem","","",149,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"rem","","",105,null],[11,"rem","","",133,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"rem","","",110,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"rem","","",114,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"rem","","",94,null],[11,"rem","","",148,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"rem","","",127,null],[11,"rem","","",124,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"rem","","",107,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"rem","","",138,null],[11,"rem","","",94,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"rem","","",103,null],[11,"rem","","",140,null],[11,"rem","","",139,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"rem","","",134,null],[11,"rem","","",148,null],[11,"rem","","",145,null],[11,"rem","","",95,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"rem","","",144,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"rem","","",123,null],[11,"rem","","",139,null],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"new","","",113,{"inputs":[{"name":"i8"},{"name":"i8"}],"output":{"name":"char2"}}],[11,"splat","","",113,{"inputs":[{"name":"i8"}],"output":{"name":"char2"}}],[11,"zero","","",113,{"inputs":[],"output":{"name":"char2"}}],[11,"is_zero","","",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",113,{"inputs":[],"output":{"name":"char2"}}],[11,"new","","",145,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char3"}}],[11,"splat","","",145,{"inputs":[{"name":"i8"}],"output":{"name":"char3"}}],[11,"zero","","",145,{"inputs":[],"output":{"name":"char3"}}],[11,"is_zero","","",145,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",145,{"inputs":[],"output":{"name":"char3"}}],[11,"new","","",121,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char4"}}],[11,"splat","","",121,{"inputs":[{"name":"i8"}],"output":{"name":"char4"}}],[11,"zero","","",121,{"inputs":[],"output":{"name":"char4"}}],[11,"is_zero","","",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",121,{"inputs":[],"output":{"name":"char4"}}],[11,"new","","",150,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char8"}}],[11,"splat","","",150,{"inputs":[{"name":"i8"}],"output":{"name":"char8"}}],[11,"zero","","",150,{"inputs":[],"output":{"name":"char8"}}],[11,"is_zero","","",150,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",150,{"inputs":[],"output":{"name":"char8"}}],[11,"new","","",108,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char16"}}],[11,"splat","","",108,{"inputs":[{"name":"i8"}],"output":{"name":"char16"}}],[11,"zero","","",108,{"inputs":[],"output":{"name":"char16"}}],[11,"is_zero","","",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",108,{"inputs":[],"output":{"name":"char16"}}],[11,"new","","",100,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"splat","","",100,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"zero","","",100,{"inputs":[],"output":{"name":"uchar"}}],[11,"is_zero","","",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",100,{"inputs":[],"output":{"name":"uchar"}}],[11,"new","","",135,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar2"}}],[11,"splat","","",135,{"inputs":[{"name":"u8"}],"output":{"name":"uchar2"}}],[11,"zero","","",135,{"inputs":[],"output":{"name":"uchar2"}}],[11,"is_zero","","",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",135,{"inputs":[],"output":{"name":"uchar2"}}],[11,"new","","",122,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar3"}}],[11,"splat","","",122,{"inputs":[{"name":"u8"}],"output":{"name":"uchar3"}}],[11,"zero","","",122,{"inputs":[],"output":{"name":"uchar3"}}],[11,"is_zero","","",122,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",122,{"inputs":[],"output":{"name":"uchar3"}}],[11,"new","","",103,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar4"}}],[11,"splat","","",103,{"inputs":[{"name":"u8"}],"output":{"name":"uchar4"}}],[11,"zero","","",103,{"inputs":[],"output":{"name":"uchar4"}}],[11,"is_zero","","",103,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",103,{"inputs":[],"output":{"name":"uchar4"}}],[11,"new","","",116,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar8"}}],[11,"splat","","",116,{"inputs":[{"name":"u8"}],"output":{"name":"uchar8"}}],[11,"zero","","",116,{"inputs":[],"output":{"name":"uchar8"}}],[11,"is_zero","","",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",116,{"inputs":[],"output":{"name":"uchar8"}}],[11,"new","","",143,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar16"}}],[11,"splat","","",143,{"inputs":[{"name":"u8"}],"output":{"name":"uchar16"}}],[11,"zero","","",143,{"inputs":[],"output":{"name":"uchar16"}}],[11,"is_zero","","",143,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",143,{"inputs":[],"output":{"name":"uchar16"}}],[11,"new","","",142,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"splat","","",142,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"zero","","",142,{"inputs":[],"output":{"name":"short"}}],[11,"is_zero","","",142,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",142,{"inputs":[],"output":{"name":"short"}}],[11,"new","","",99,{"inputs":[{"name":"i16"},{"name":"i16"}],"output":{"name":"short2"}}],[11,"splat","","",99,{"inputs":[{"name":"i16"}],"output":{"name":"short2"}}],[11,"zero","","",99,{"inputs":[],"output":{"name":"short2"}}],[11,"is_zero","","",99,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",99,{"inputs":[],"output":{"name":"short2"}}],[11,"new","","",133,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short3"}}],[11,"splat","","",133,{"inputs":[{"name":"i16"}],"output":{"name":"short3"}}],[11,"zero","","",133,{"inputs":[],"output":{"name":"short3"}}],[11,"is_zero","","",133,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",133,{"inputs":[],"output":{"name":"short3"}}],[11,"new","","",136,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short4"}}],[11,"splat","","",136,{"inputs":[{"name":"i16"}],"output":{"name":"short4"}}],[11,"zero","","",136,{"inputs":[],"output":{"name":"short4"}}],[11,"is_zero","","",136,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",136,{"inputs":[],"output":{"name":"short4"}}],[11,"new","","",132,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short8"}}],[11,"splat","","",132,{"inputs":[{"name":"i16"}],"output":{"name":"short8"}}],[11,"zero","","",132,{"inputs":[],"output":{"name":"short8"}}],[11,"is_zero","","",132,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",132,{"inputs":[],"output":{"name":"short8"}}],[11,"new","","",96,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short16"}}],[11,"splat","","",96,{"inputs":[{"name":"i16"}],"output":{"name":"short16"}}],[11,"zero","","",96,{"inputs":[],"output":{"name":"short16"}}],[11,"is_zero","","",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",96,{"inputs":[],"output":{"name":"short16"}}],[11,"new","","",114,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"splat","","",114,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"zero","","",114,{"inputs":[],"output":{"name":"ushort"}}],[11,"is_zero","","",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",114,{"inputs":[],"output":{"name":"ushort"}}],[11,"new","","",119,{"inputs":[{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort2"}}],[11,"splat","","",119,{"inputs":[{"name":"u16"}],"output":{"name":"ushort2"}}],[11,"zero","","",119,{"inputs":[],"output":{"name":"ushort2"}}],[11,"is_zero","","",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",119,{"inputs":[],"output":{"name":"ushort2"}}],[11,"new","","",105,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort3"}}],[11,"splat","","",105,{"inputs":[{"name":"u16"}],"output":{"name":"ushort3"}}],[11,"zero","","",105,{"inputs":[],"output":{"name":"ushort3"}}],[11,"is_zero","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",105,{"inputs":[],"output":{"name":"ushort3"}}],[11,"new","","",139,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort4"}}],[11,"splat","","",139,{"inputs":[{"name":"u16"}],"output":{"name":"ushort4"}}],[11,"zero","","",139,{"inputs":[],"output":{"name":"ushort4"}}],[11,"is_zero","","",139,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",139,{"inputs":[],"output":{"name":"ushort4"}}],[11,"new","","",127,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort8"}}],[11,"splat","","",127,{"inputs":[{"name":"u16"}],"output":{"name":"ushort8"}}],[11,"zero","","",127,{"inputs":[],"output":{"name":"ushort8"}}],[11,"is_zero","","",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",127,{"inputs":[],"output":{"name":"ushort8"}}],[11,"new","","",112,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort16"}}],[11,"splat","","",112,{"inputs":[{"name":"u16"}],"output":{"name":"ushort16"}}],[11,"zero","","",112,{"inputs":[],"output":{"name":"ushort16"}}],[11,"is_zero","","",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",112,{"inputs":[],"output":{"name":"ushort16"}}],[11,"new","","",95,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"splat","","",95,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"zero","","",95,{"inputs":[],"output":{"name":"int"}}],[11,"is_zero","","",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",95,{"inputs":[],"output":{"name":"int"}}],[11,"new","","",149,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"int2"}}],[11,"splat","","",149,{"inputs":[{"name":"i32"}],"output":{"name":"int2"}}],[11,"zero","","",149,{"inputs":[],"output":{"name":"int2"}}],[11,"is_zero","","",149,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",149,{"inputs":[],"output":{"name":"int2"}}],[11,"new","","",148,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int3"}}],[11,"splat","","",148,{"inputs":[{"name":"i32"}],"output":{"name":"int3"}}],[11,"zero","","",148,{"inputs":[],"output":{"name":"int3"}}],[11,"is_zero","","",148,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",148,{"inputs":[],"output":{"name":"int3"}}],[11,"new","","",124,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int4"}}],[11,"splat","","",124,{"inputs":[{"name":"i32"}],"output":{"name":"int4"}}],[11,"zero","","",124,{"inputs":[],"output":{"name":"int4"}}],[11,"is_zero","","",124,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",124,{"inputs":[],"output":{"name":"int4"}}],[11,"new","","",130,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int8"}}],[11,"splat","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"int8"}}],[11,"zero","","",130,{"inputs":[],"output":{"name":"int8"}}],[11,"is_zero","","",130,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",130,{"inputs":[],"output":{"name":"int8"}}],[11,"new","","",107,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int16"}}],[11,"splat","","",107,{"inputs":[{"name":"i32"}],"output":{"name":"int16"}}],[11,"zero","","",107,{"inputs":[],"output":{"name":"int16"}}],[11,"is_zero","","",107,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",107,{"inputs":[],"output":{"name":"int16"}}],[11,"new","","",131,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"splat","","",131,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"zero","","",131,{"inputs":[],"output":{"name":"uint"}}],[11,"is_zero","","",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",131,{"inputs":[],"output":{"name":"uint"}}],[11,"new","","",151,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"uint2"}}],[11,"splat","","",151,{"inputs":[{"name":"u32"}],"output":{"name":"uint2"}}],[11,"zero","","",151,{"inputs":[],"output":{"name":"uint2"}}],[11,"is_zero","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",151,{"inputs":[],"output":{"name":"uint2"}}],[11,"new","","",126,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint3"}}],[11,"splat","","",126,{"inputs":[{"name":"u32"}],"output":{"name":"uint3"}}],[11,"zero","","",126,{"inputs":[],"output":{"name":"uint3"}}],[11,"is_zero","","",126,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",126,{"inputs":[],"output":{"name":"uint3"}}],[11,"new","","",118,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint4"}}],[11,"splat","","",118,{"inputs":[{"name":"u32"}],"output":{"name":"uint4"}}],[11,"zero","","",118,{"inputs":[],"output":{"name":"uint4"}}],[11,"is_zero","","",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",118,{"inputs":[],"output":{"name":"uint4"}}],[11,"new","","",146,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"uint8"}}],[11,"splat","","",146,{"inputs":[{"name":"i8"}],"output":{"name":"uint8"}}],[11,"zero","","",146,{"inputs":[],"output":{"name":"uint8"}}],[11,"is_zero","","",146,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",146,{"inputs":[],"output":{"name":"uint8"}}],[11,"new","","",110,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint16"}}],[11,"splat","","",110,{"inputs":[{"name":"u32"}],"output":{"name":"uint16"}}],[11,"zero","","",110,{"inputs":[],"output":{"name":"uint16"}}],[11,"is_zero","","",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",110,{"inputs":[],"output":{"name":"uint16"}}],[11,"new","","",111,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"splat","","",111,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"zero","","",111,{"inputs":[],"output":{"name":"long"}}],[11,"is_zero","","",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",111,{"inputs":[],"output":{"name":"long"}}],[11,"new","","",125,{"inputs":[{"name":"i64"},{"name":"i64"}],"output":{"name":"long2"}}],[11,"splat","","",125,{"inputs":[{"name":"i64"}],"output":{"name":"long2"}}],[11,"zero","","",125,{"inputs":[],"output":{"name":"long2"}}],[11,"is_zero","","",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",125,{"inputs":[],"output":{"name":"long2"}}],[11,"new","","",97,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long3"}}],[11,"splat","","",97,{"inputs":[{"name":"i64"}],"output":{"name":"long3"}}],[11,"zero","","",97,{"inputs":[],"output":{"name":"long3"}}],[11,"is_zero","","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",97,{"inputs":[],"output":{"name":"long3"}}],[11,"new","","",137,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long4"}}],[11,"splat","","",137,{"inputs":[{"name":"i64"}],"output":{"name":"long4"}}],[11,"zero","","",137,{"inputs":[],"output":{"name":"long4"}}],[11,"is_zero","","",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",137,{"inputs":[],"output":{"name":"long4"}}],[11,"new","","",101,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long8"}}],[11,"splat","","",101,{"inputs":[{"name":"i64"}],"output":{"name":"long8"}}],[11,"zero","","",101,{"inputs":[],"output":{"name":"long8"}}],[11,"is_zero","","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",101,{"inputs":[],"output":{"name":"long8"}}],[11,"new","","",120,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long16"}}],[11,"splat","","",120,{"inputs":[{"name":"i64"}],"output":{"name":"long16"}}],[11,"zero","","",120,{"inputs":[],"output":{"name":"long16"}}],[11,"is_zero","","",120,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",120,{"inputs":[],"output":{"name":"long16"}}],[11,"new","","",102,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"splat","","",102,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"zero","","",102,{"inputs":[],"output":{"name":"ulong"}}],[11,"is_zero","","",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",102,{"inputs":[],"output":{"name":"ulong"}}],[11,"new","","",104,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong2"}}],[11,"splat","","",104,{"inputs":[{"name":"u64"}],"output":{"name":"ulong2"}}],[11,"zero","","",104,{"inputs":[],"output":{"name":"ulong2"}}],[11,"is_zero","","",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",104,{"inputs":[],"output":{"name":"ulong2"}}],[11,"new","","",98,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong3"}}],[11,"splat","","",98,{"inputs":[{"name":"u64"}],"output":{"name":"ulong3"}}],[11,"zero","","",98,{"inputs":[],"output":{"name":"ulong3"}}],[11,"is_zero","","",98,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",98,{"inputs":[],"output":{"name":"ulong3"}}],[11,"new","","",134,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong4"}}],[11,"splat","","",134,{"inputs":[{"name":"u64"}],"output":{"name":"ulong4"}}],[11,"zero","","",134,{"inputs":[],"output":{"name":"ulong4"}}],[11,"is_zero","","",134,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",134,{"inputs":[],"output":{"name":"ulong4"}}],[11,"new","","",129,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong8"}}],[11,"splat","","",129,{"inputs":[{"name":"u64"}],"output":{"name":"ulong8"}}],[11,"zero","","",129,{"inputs":[],"output":{"name":"ulong8"}}],[11,"is_zero","","",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",129,{"inputs":[],"output":{"name":"ulong8"}}],[11,"new","","",153,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong16"}}],[11,"splat","","",153,{"inputs":[{"name":"u64"}],"output":{"name":"ulong16"}}],[11,"zero","","",153,{"inputs":[],"output":{"name":"ulong16"}}],[11,"is_zero","","",153,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",153,{"inputs":[],"output":{"name":"ulong16"}}],[11,"new","","",141,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"splat","","",141,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"zero","","",141,{"inputs":[],"output":{"name":"float"}}],[11,"is_zero","","",141,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",141,{"inputs":[],"output":{"name":"float"}}],[11,"new","","",115,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"float2"}}],[11,"splat","","",115,{"inputs":[{"name":"f32"}],"output":{"name":"float2"}}],[11,"zero","","",115,{"inputs":[],"output":{"name":"float2"}}],[11,"is_zero","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",115,{"inputs":[],"output":{"name":"float2"}}],[11,"new","","",140,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float3"}}],[11,"splat","","",140,{"inputs":[{"name":"f32"}],"output":{"name":"float3"}}],[11,"zero","","",140,{"inputs":[],"output":{"name":"float3"}}],[11,"is_zero","","",140,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",140,{"inputs":[],"output":{"name":"float3"}}],[11,"new","","",147,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float4"}}],[11,"splat","","",147,{"inputs":[{"name":"f32"}],"output":{"name":"float4"}}],[11,"zero","","",147,{"inputs":[],"output":{"name":"float4"}}],[11,"is_zero","","",147,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",147,{"inputs":[],"output":{"name":"float4"}}],[11,"new","","",144,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float8"}}],[11,"splat","","",144,{"inputs":[{"name":"f32"}],"output":{"name":"float8"}}],[11,"zero","","",144,{"inputs":[],"output":{"name":"float8"}}],[11,"is_zero","","",144,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",144,{"inputs":[],"output":{"name":"float8"}}],[11,"new","","",128,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float16"}}],[11,"splat","","",128,{"inputs":[{"name":"f32"}],"output":{"name":"float16"}}],[11,"zero","","",128,{"inputs":[],"output":{"name":"float16"}}],[11,"is_zero","","",128,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",128,{"inputs":[],"output":{"name":"float16"}}],[11,"new","","",152,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"splat","","",152,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"zero","","",152,{"inputs":[],"output":{"name":"double"}}],[11,"is_zero","","",152,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",152,{"inputs":[],"output":{"name":"double"}}],[11,"new","","",106,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"double2"}}],[11,"splat","","",106,{"inputs":[{"name":"f64"}],"output":{"name":"double2"}}],[11,"zero","","",106,{"inputs":[],"output":{"name":"double2"}}],[11,"is_zero","","",106,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",106,{"inputs":[],"output":{"name":"double2"}}],[11,"new","","",109,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double3"}}],[11,"splat","","",109,{"inputs":[{"name":"f64"}],"output":{"name":"double3"}}],[11,"zero","","",109,{"inputs":[],"output":{"name":"double3"}}],[11,"is_zero","","",109,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",109,{"inputs":[],"output":{"name":"double3"}}],[11,"new","","",117,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double4"}}],[11,"splat","","",117,{"inputs":[{"name":"f64"}],"output":{"name":"double4"}}],[11,"zero","","",117,{"inputs":[],"output":{"name":"double4"}}],[11,"is_zero","","",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",117,{"inputs":[],"output":{"name":"double4"}}],[11,"new","","",138,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double8"}}],[11,"splat","","",138,{"inputs":[{"name":"f64"}],"output":{"name":"double8"}}],[11,"zero","","",138,{"inputs":[],"output":{"name":"double8"}}],[11,"is_zero","","",138,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",138,{"inputs":[],"output":{"name":"double8"}}],[11,"new","","",123,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double16"}}],[11,"splat","","",123,{"inputs":[{"name":"f64"}],"output":{"name":"double16"}}],[11,"zero","","",123,{"inputs":[],"output":{"name":"double16"}}],[11,"is_zero","","",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",123,{"inputs":[],"output":{"name":"double16"}}]],"paths":[[4,"Status"],[4,"GlTextureTarget"],[4,"ClGlObjectType"],[4,"ImageChannelOrder"],[4,"ImageChannelDataType"],[4,"Cbool"],[4,"Polling"],[4,"PlatformInfo"],[4,"DeviceInfo"],[4,"DeviceMemCacheType"],[4,"DeviceLocalMemType"],[4,"ContextInfo"],[4,"GlContextInfo"],[4,"ContextProperty"],[4,"ContextInfoOrPropertiesPointerType"],[4,"DevicePartitionProperty"],[4,"CommandQueueInfo"],[4,"ChannelType"],[4,"MemObjectType"],[4,"MemInfo"],[4,"ImageInfo"],[4,"AddressingMode"],[4,"FilterMode"],[4,"SamplerInfo"],[4,"ProgramInfo"],[4,"ProgramBuildInfo"],[4,"ProgramBuildStatus"],[4,"KernelInfo"],[4,"KernelArgInfo"],[4,"KernelArgAddressQualifier"],[4,"KernelArgAccessQualifier"],[4,"KernelWorkGroupInfo"],[4,"EventInfo"],[4,"CommandType"],[4,"CommandExecutionStatus"],[4,"BufferCreateType"],[4,"ProfilingInfo"],[8,"AsMem"],[8,"ClVersions"],[8,"ClEventPtrRef"],[8,"ClNullEventPtr"],[8,"ClWaitListPtr"],[8,"ClPlatformIdPtr"],[8,"ClDeviceIdPtr"],[8,"ClContextPtr"],[3,"EventRefWrapper"],[3,"PlatformId"],[3,"DeviceId"],[3,"Context"],[3,"CommandQueue"],[3,"Mem"],[3,"MemMap"],[3,"Program"],[3,"Kernel"],[3,"Event"],[3,"Sampler"],[4,"EmptyInfoResultError"],[4,"PlatformInfoResult"],[4,"DeviceInfoResult"],[4,"ContextInfoResult"],[4,"GlContextInfoResult"],[4,"CommandQueueInfoResult"],[4,"MemInfoResult"],[4,"ImageInfoResult"],[4,"SamplerInfoResult"],[4,"ProgramInfoResult"],[4,"ProgramBuildInfoResult"],[4,"KernelInfoResult"],[4,"KernelArgInfoResult"],[4,"KernelWorkGroupInfoResult"],[4,"EventInfoResult"],[4,"ProfilingInfoResult"],[3,"ImageFormat"],[3,"ImageDescriptor"],[4,"ContextPropertyValue"],[4,"ImageFormatParseError"],[3,"ArgVal"],[3,"OpenclVersion"],[3,"ContextProperties"],[3,"BufferRegion"],[4,"ErrorKind"],[3,"Error"],[4,"UtilError"],[4,"VecRemoveRebuildError"],[3,"DeviceType"],[3,"DeviceFpConfig"],[3,"DeviceExecCapabilities"],[3,"CommandQueueProperties"],[3,"DeviceAffinityDomain"],[3,"MemFlags"],[3,"MemMigrationFlags"],[3,"MapFlags"],[3,"ProgramBinaryType"],[3,"KernelArgTypeQualifier"],[3,"Char"],[3,"Int"],[3,"Short16"],[3,"Long3"],[3,"Ulong3"],[3,"Short2"],[3,"Uchar"],[3,"Long8"],[3,"Ulong"],[3,"Uchar4"],[3,"Ulong2"],[3,"Ushort3"],[3,"Double2"],[3,"Int16"],[3,"Char16"],[3,"Double3"],[3,"Uint16"],[3,"Long"],[3,"Ushort16"],[3,"Char2"],[3,"Ushort"],[3,"Float2"],[3,"Uchar8"],[3,"Double4"],[3,"Uint4"],[3,"Ushort2"],[3,"Long16"],[3,"Char4"],[3,"Uchar3"],[3,"Double16"],[3,"Int4"],[3,"Long2"],[3,"Uint3"],[3,"Ushort8"],[3,"Float16"],[3,"Ulong8"],[3,"Int8"],[3,"Uint"],[3,"Short8"],[3,"Short3"],[3,"Ulong4"],[3,"Uchar2"],[3,"Short4"],[3,"Long4"],[3,"Double8"],[3,"Ushort4"],[3,"Float3"],[3,"Float"],[3,"Short"],[3,"Uchar16"],[3,"Float8"],[3,"Char3"],[3,"Uint8"],[3,"Float4"],[3,"Int3"],[3,"Int2"],[3,"Char8"],[3,"Uint2"],[3,"Double"],[3,"Ulong16"]]};
searchIndex["ocl_core_vector"] = {"doc":"OpenCL scalar and vector primitive types.","items":[[3,"Char","ocl_core_vector","",null,null],[3,"Char2","","",null,null],[3,"Char3","","",null,null],[3,"Char4","","",null,null],[3,"Char8","","",null,null],[3,"Char16","","",null,null],[3,"Uchar","","",null,null],[3,"Uchar2","","",null,null],[3,"Uchar3","","",null,null],[3,"Uchar4","","",null,null],[3,"Uchar8","","",null,null],[3,"Uchar16","","",null,null],[3,"Short","","",null,null],[3,"Short2","","",null,null],[3,"Short3","","",null,null],[3,"Short4","","",null,null],[3,"Short8","","",null,null],[3,"Short16","","",null,null],[3,"Ushort","","",null,null],[3,"Ushort2","","",null,null],[3,"Ushort3","","",null,null],[3,"Ushort4","","",null,null],[3,"Ushort8","","",null,null],[3,"Ushort16","","",null,null],[3,"Int","","",null,null],[3,"Int2","","",null,null],[3,"Int3","","",null,null],[3,"Int4","","",null,null],[3,"Int8","","",null,null],[3,"Int16","","",null,null],[3,"Uint","","",null,null],[3,"Uint2","","",null,null],[3,"Uint3","","",null,null],[3,"Uint4","","",null,null],[3,"Uint8","","",null,null],[3,"Uint16","","",null,null],[3,"Long","","",null,null],[3,"Long2","","",null,null],[3,"Long3","","",null,null],[3,"Long4","","",null,null],[3,"Long8","","",null,null],[3,"Long16","","",null,null],[3,"Ulong","","",null,null],[3,"Ulong2","","",null,null],[3,"Ulong3","","",null,null],[3,"Ulong4","","",null,null],[3,"Ulong8","","",null,null],[3,"Ulong16","","",null,null],[3,"Float","","",null,null],[3,"Float2","","",null,null],[3,"Float3","","",null,null],[3,"Float4","","",null,null],[3,"Float8","","",null,null],[3,"Float16","","",null,null],[3,"Double","","",null,null],[3,"Double2","","",null,null],[3,"Double3","","",null,null],[3,"Double4","","",null,null],[3,"Double8","","",null,null],[3,"Double16","","",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"char"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"new","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"char"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",0,null],[11,"add_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"sub","","",0,null],[11,"sub_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"mul","","",0,null],[11,"mul_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"div","","",0,null],[11,"div_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"rem","","",0,null],[11,"rem_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"sum","","",0,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",0,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"sum","","",0,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"product","","",0,{"inputs":[{"name":"i"}],"output":{"name":"char"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"ordering"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"sub","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"mul","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"div","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"rem","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"not","","",0,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"bitxor","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"bitor","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"bitand","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"char"}}],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"neg","","",0,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"shl","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shl_assign","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char"}}],[11,"shr_assign","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"char2"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"bool"}}],[11,"new","","",1,{"inputs":[{"name":"i8"},{"name":"i8"}],"output":{"name":"char2"}}],[11,"from","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",1,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"zero","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",1,null],[11,"add_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"sub","","",1,null],[11,"sub_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"mul","","",1,null],[11,"mul_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"div","","",1,null],[11,"div_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"rem","","",1,null],[11,"rem_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"sum","","",1,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",1,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"sum","","",1,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"product","","",1,{"inputs":[{"name":"i"}],"output":{"name":"char2"}}],[11,"hash","","",1,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"ordering"}}],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"div","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"rem","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"not","","",1,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"bitxor","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"bitor","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"bitand","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":{"name":"char2"}}],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,{"inputs":[{"name":"self"},{"name":"char2"}],"output":null}],[11,"neg","","",1,{"inputs":[{"name":"self"}],"output":{"name":"char2"}}],[11,"shl","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shl_assign","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char2"}}],[11,"shr_assign","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"char3"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"bool"}}],[11,"new","","",2,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char3"}}],[11,"from","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",2,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"zero","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",2,null],[11,"add_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"sub","","",2,null],[11,"sub_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"mul","","",2,null],[11,"mul_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"div","","",2,null],[11,"div_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"rem","","",2,null],[11,"rem_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"sum","","",2,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",2,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"sum","","",2,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"product","","",2,{"inputs":[{"name":"i"}],"output":{"name":"char3"}}],[11,"hash","","",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"ordering"}}],[11,"add","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"sub","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"mul","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"div","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"rem","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"not","","",2,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"bitxor","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitxor","","",2,null],[11,"bitxor_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"bitor","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitor","","",2,null],[11,"bitor_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"bitand","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":{"name":"char3"}}],[11,"bitand","","",2,null],[11,"bitand_assign","","",2,{"inputs":[{"name":"self"},{"name":"char3"}],"output":null}],[11,"neg","","",2,{"inputs":[{"name":"self"}],"output":{"name":"char3"}}],[11,"shl","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shl_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char3"}}],[11,"shr_assign","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"char4"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"bool"}}],[11,"new","","",3,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char4"}}],[11,"from","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",3,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"zero","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",3,null],[11,"add_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"sub","","",3,null],[11,"sub_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"mul","","",3,null],[11,"mul_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"div","","",3,null],[11,"div_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"rem","","",3,null],[11,"rem_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"sum","","",3,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",3,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"sum","","",3,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"product","","",3,{"inputs":[{"name":"i"}],"output":{"name":"char4"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"ordering"}}],[11,"add","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"sub","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"mul","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"div","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"rem","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"not","","",3,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"bitxor","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitxor","","",3,null],[11,"bitxor_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"bitor","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitor","","",3,null],[11,"bitor_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"bitand","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":{"name":"char4"}}],[11,"bitand","","",3,null],[11,"bitand_assign","","",3,{"inputs":[{"name":"self"},{"name":"char4"}],"output":null}],[11,"neg","","",3,{"inputs":[{"name":"self"}],"output":{"name":"char4"}}],[11,"shl","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shl_assign","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char4"}}],[11,"shr_assign","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"char8"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"bool"}}],[11,"new","","",4,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char8"}}],[11,"from","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",4,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"zero","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",4,null],[11,"add_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"sub","","",4,null],[11,"sub_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"mul","","",4,null],[11,"mul_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"div","","",4,null],[11,"div_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"rem","","",4,null],[11,"rem_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"sum","","",4,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",4,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"sum","","",4,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"product","","",4,{"inputs":[{"name":"i"}],"output":{"name":"char8"}}],[11,"hash","","",4,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"ordering"}}],[11,"add","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"sub","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"mul","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"div","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"rem","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"not","","",4,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"bitxor","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"bitor","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"bitand","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":{"name":"char8"}}],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,{"inputs":[{"name":"self"},{"name":"char8"}],"output":null}],[11,"neg","","",4,{"inputs":[{"name":"self"}],"output":{"name":"char8"}}],[11,"shl","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shl_assign","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char8"}}],[11,"shr_assign","","",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"char16"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"bool"}}],[11,"new","","",5,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"char16"}}],[11,"from","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",5,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[11,"zero","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",5,null],[11,"add_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"sub","","",5,null],[11,"sub_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"mul","","",5,null],[11,"mul_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"div","","",5,null],[11,"div_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"rem","","",5,null],[11,"rem_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"sum","","",5,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",5,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"sum","","",5,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"product","","",5,{"inputs":[{"name":"i"}],"output":{"name":"char16"}}],[11,"hash","","",5,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"ordering"}}],[11,"add","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"sub","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"mul","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"div","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"rem","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"not","","",5,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"bitxor","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitxor","","",5,null],[11,"bitxor_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"bitor","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitor","","",5,null],[11,"bitor_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"bitand","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":{"name":"char16"}}],[11,"bitand","","",5,null],[11,"bitand_assign","","",5,{"inputs":[{"name":"self"},{"name":"char16"}],"output":null}],[11,"neg","","",5,{"inputs":[{"name":"self"}],"output":{"name":"char16"}}],[11,"shl","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shl_assign","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"char16"}}],[11,"shr_assign","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"uchar"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"bool"}}],[11,"new","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"from","","",6,null],[11,"from","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"uchar"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"zero","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",6,null],[11,"add_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"sub","","",6,null],[11,"sub_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"mul","","",6,null],[11,"mul_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"div","","",6,null],[11,"div_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"rem","","",6,null],[11,"rem_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"sum","","",6,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",6,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"sum","","",6,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"product","","",6,{"inputs":[{"name":"i"}],"output":{"name":"uchar"}}],[11,"hash","","",6,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"ordering"}}],[11,"add","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"sub","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"mul","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"div","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"rem","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"not","","",6,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"bitxor","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"bitor","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"bitand","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":{"name":"uchar"}}],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,{"inputs":[{"name":"self"},{"name":"uchar"}],"output":null}],[11,"neg","","",6,{"inputs":[{"name":"self"}],"output":{"name":"uchar"}}],[11,"shl","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shl_assign","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar"}}],[11,"shr_assign","","",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"uchar2"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"bool"}}],[11,"new","","",7,{"inputs":[{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar2"}}],[11,"from","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",7,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",7,null],[11,"deref_mut","","",7,null],[11,"zero","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",7,null],[11,"add_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"sub","","",7,null],[11,"sub_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"mul","","",7,null],[11,"mul_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"div","","",7,null],[11,"div_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"rem","","",7,null],[11,"rem_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"sum","","",7,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",7,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"sum","","",7,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"product","","",7,{"inputs":[{"name":"i"}],"output":{"name":"uchar2"}}],[11,"hash","","",7,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"ordering"}}],[11,"add","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"sub","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"mul","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"div","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"rem","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"not","","",7,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"bitxor","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitxor","","",7,null],[11,"bitxor_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"bitor","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitor","","",7,null],[11,"bitor_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"bitand","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":{"name":"uchar2"}}],[11,"bitand","","",7,null],[11,"bitand_assign","","",7,{"inputs":[{"name":"self"},{"name":"uchar2"}],"output":null}],[11,"neg","","",7,{"inputs":[{"name":"self"}],"output":{"name":"uchar2"}}],[11,"shl","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shl_assign","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar2"}}],[11,"shr_assign","","",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"uchar3"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"bool"}}],[11,"new","","",8,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar3"}}],[11,"from","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",8,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",8,null],[11,"deref_mut","","",8,null],[11,"zero","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",8,null],[11,"add_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"sub","","",8,null],[11,"sub_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"mul","","",8,null],[11,"mul_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"div","","",8,null],[11,"div_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"rem","","",8,null],[11,"rem_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"sum","","",8,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",8,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"sum","","",8,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"product","","",8,{"inputs":[{"name":"i"}],"output":{"name":"uchar3"}}],[11,"hash","","",8,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"ordering"}}],[11,"add","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"sub","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"mul","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"div","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"rem","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"not","","",8,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"bitxor","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitxor","","",8,null],[11,"bitxor_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"bitor","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitor","","",8,null],[11,"bitor_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"bitand","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":{"name":"uchar3"}}],[11,"bitand","","",8,null],[11,"bitand_assign","","",8,{"inputs":[{"name":"self"},{"name":"uchar3"}],"output":null}],[11,"neg","","",8,{"inputs":[{"name":"self"}],"output":{"name":"uchar3"}}],[11,"shl","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shl_assign","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar3"}}],[11,"shr_assign","","",8,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"uchar4"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"bool"}}],[11,"new","","",9,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar4"}}],[11,"from","","",9,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",9,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",9,null],[11,"deref_mut","","",9,null],[11,"zero","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",9,null],[11,"add_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"sub","","",9,null],[11,"sub_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"mul","","",9,null],[11,"mul_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"div","","",9,null],[11,"div_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"rem","","",9,null],[11,"rem_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"sum","","",9,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",9,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"sum","","",9,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"product","","",9,{"inputs":[{"name":"i"}],"output":{"name":"uchar4"}}],[11,"hash","","",9,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"ordering"}}],[11,"add","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"sub","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"mul","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"div","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"rem","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"not","","",9,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"bitxor","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitxor","","",9,null],[11,"bitxor_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"bitor","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitor","","",9,null],[11,"bitor_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"bitand","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":{"name":"uchar4"}}],[11,"bitand","","",9,null],[11,"bitand_assign","","",9,{"inputs":[{"name":"self"},{"name":"uchar4"}],"output":null}],[11,"neg","","",9,{"inputs":[{"name":"self"}],"output":{"name":"uchar4"}}],[11,"shl","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shl_assign","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar4"}}],[11,"shr_assign","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"uchar8"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"bool"}}],[11,"new","","",10,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar8"}}],[11,"from","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",10,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",10,null],[11,"deref_mut","","",10,null],[11,"zero","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",10,null],[11,"add_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"sub","","",10,null],[11,"sub_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"mul","","",10,null],[11,"mul_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"div","","",10,null],[11,"div_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"rem","","",10,null],[11,"rem_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"sum","","",10,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",10,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"sum","","",10,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"product","","",10,{"inputs":[{"name":"i"}],"output":{"name":"uchar8"}}],[11,"hash","","",10,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"ordering"}}],[11,"add","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"sub","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"mul","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"div","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"rem","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"not","","",10,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"bitxor","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitxor","","",10,null],[11,"bitxor_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"bitor","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitor","","",10,null],[11,"bitor_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"bitand","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":{"name":"uchar8"}}],[11,"bitand","","",10,null],[11,"bitand_assign","","",10,{"inputs":[{"name":"self"},{"name":"uchar8"}],"output":null}],[11,"neg","","",10,{"inputs":[{"name":"self"}],"output":{"name":"uchar8"}}],[11,"shl","","",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shl_assign","","",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar8"}}],[11,"shr_assign","","",10,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"uchar16"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"bool"}}],[11,"new","","",11,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"uchar16"}}],[11,"from","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",11,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"zero","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",11,null],[11,"deref_mut","","",11,null],[11,"zero","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",11,null],[11,"add_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"sub","","",11,null],[11,"sub_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"mul","","",11,null],[11,"mul_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"div","","",11,null],[11,"div_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"rem","","",11,null],[11,"rem_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"sum","","",11,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",11,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"sum","","",11,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"product","","",11,{"inputs":[{"name":"i"}],"output":{"name":"uchar16"}}],[11,"hash","","",11,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"ordering"}}],[11,"add","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"sub","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"mul","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"div","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"rem","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"not","","",11,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"bitxor","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitxor","","",11,null],[11,"bitxor_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"bitor","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitor","","",11,null],[11,"bitor_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"bitand","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":{"name":"uchar16"}}],[11,"bitand","","",11,null],[11,"bitand_assign","","",11,{"inputs":[{"name":"self"},{"name":"uchar16"}],"output":null}],[11,"neg","","",11,{"inputs":[{"name":"self"}],"output":{"name":"uchar16"}}],[11,"shl","","",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shl_assign","","",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uchar16"}}],[11,"shr_assign","","",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"short"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"bool"}}],[11,"new","","",12,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"from","","",12,null],[11,"from","","",12,{"inputs":[{"name":"i16"}],"output":{"name":"short"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",12,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",12,null],[11,"deref_mut","","",12,null],[11,"zero","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",12,null],[11,"add_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"sub","","",12,null],[11,"sub_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"mul","","",12,null],[11,"mul_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"div","","",12,null],[11,"div_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"rem","","",12,null],[11,"rem_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"sum","","",12,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",12,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"sum","","",12,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"product","","",12,{"inputs":[{"name":"i"}],"output":{"name":"short"}}],[11,"hash","","",12,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"ordering"}}],[11,"add","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"sub","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"mul","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"div","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"rem","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"not","","",12,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"bitxor","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitxor","","",12,null],[11,"bitxor_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"bitor","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitor","","",12,null],[11,"bitor_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"bitand","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":{"name":"short"}}],[11,"bitand","","",12,null],[11,"bitand_assign","","",12,{"inputs":[{"name":"self"},{"name":"short"}],"output":null}],[11,"neg","","",12,{"inputs":[{"name":"self"}],"output":{"name":"short"}}],[11,"shl","","",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shl_assign","","",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short"}}],[11,"shr_assign","","",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"short2"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"bool"}}],[11,"new","","",13,{"inputs":[{"name":"i16"},{"name":"i16"}],"output":{"name":"short2"}}],[11,"from","","",13,null],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",13,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",13,null],[11,"deref_mut","","",13,null],[11,"zero","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",13,null],[11,"add_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"sub","","",13,null],[11,"sub_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"mul","","",13,null],[11,"mul_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"div","","",13,null],[11,"div_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"rem","","",13,null],[11,"rem_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"sum","","",13,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",13,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"sum","","",13,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"product","","",13,{"inputs":[{"name":"i"}],"output":{"name":"short2"}}],[11,"hash","","",13,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"ordering"}}],[11,"add","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"sub","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"mul","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"div","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"rem","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"not","","",13,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"bitxor","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitxor","","",13,null],[11,"bitxor_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"bitor","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitor","","",13,null],[11,"bitor_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"bitand","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":{"name":"short2"}}],[11,"bitand","","",13,null],[11,"bitand_assign","","",13,{"inputs":[{"name":"self"},{"name":"short2"}],"output":null}],[11,"neg","","",13,{"inputs":[{"name":"self"}],"output":{"name":"short2"}}],[11,"shl","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shl_assign","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short2"}}],[11,"shr_assign","","",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"short3"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"bool"}}],[11,"new","","",14,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short3"}}],[11,"from","","",14,null],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",14,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",14,null],[11,"deref_mut","","",14,null],[11,"zero","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",14,null],[11,"add_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"sub","","",14,null],[11,"sub_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"mul","","",14,null],[11,"mul_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"div","","",14,null],[11,"div_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"rem","","",14,null],[11,"rem_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"sum","","",14,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",14,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"sum","","",14,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"product","","",14,{"inputs":[{"name":"i"}],"output":{"name":"short3"}}],[11,"hash","","",14,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"ordering"}}],[11,"add","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"sub","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"mul","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"div","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"rem","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"not","","",14,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"bitxor","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitxor","","",14,null],[11,"bitxor_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"bitor","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitor","","",14,null],[11,"bitor_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"bitand","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":{"name":"short3"}}],[11,"bitand","","",14,null],[11,"bitand_assign","","",14,{"inputs":[{"name":"self"},{"name":"short3"}],"output":null}],[11,"neg","","",14,{"inputs":[{"name":"self"}],"output":{"name":"short3"}}],[11,"shl","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shl_assign","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short3"}}],[11,"shr_assign","","",14,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"short4"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"bool"}}],[11,"new","","",15,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short4"}}],[11,"from","","",15,null],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",15,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",15,null],[11,"deref_mut","","",15,null],[11,"zero","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",15,null],[11,"add_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"sub","","",15,null],[11,"sub_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"mul","","",15,null],[11,"mul_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"div","","",15,null],[11,"div_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"rem","","",15,null],[11,"rem_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"sum","","",15,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",15,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"sum","","",15,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"product","","",15,{"inputs":[{"name":"i"}],"output":{"name":"short4"}}],[11,"hash","","",15,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"ordering"}}],[11,"add","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"sub","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"mul","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"div","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"rem","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"not","","",15,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"bitxor","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitxor","","",15,null],[11,"bitxor_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"bitor","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitor","","",15,null],[11,"bitor_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"bitand","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":{"name":"short4"}}],[11,"bitand","","",15,null],[11,"bitand_assign","","",15,{"inputs":[{"name":"self"},{"name":"short4"}],"output":null}],[11,"neg","","",15,{"inputs":[{"name":"self"}],"output":{"name":"short4"}}],[11,"shl","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shl_assign","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short4"}}],[11,"shr_assign","","",15,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"short8"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"bool"}}],[11,"new","","",16,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short8"}}],[11,"from","","",16,null],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",16,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",16,null],[11,"deref_mut","","",16,null],[11,"zero","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",16,null],[11,"add_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"sub","","",16,null],[11,"sub_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"mul","","",16,null],[11,"mul_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"div","","",16,null],[11,"div_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"rem","","",16,null],[11,"rem_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"sum","","",16,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",16,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"sum","","",16,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"product","","",16,{"inputs":[{"name":"i"}],"output":{"name":"short8"}}],[11,"hash","","",16,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"ordering"}}],[11,"add","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"sub","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"mul","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"div","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"rem","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"not","","",16,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"bitxor","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitxor","","",16,null],[11,"bitxor_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"bitor","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitor","","",16,null],[11,"bitor_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"bitand","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":{"name":"short8"}}],[11,"bitand","","",16,null],[11,"bitand_assign","","",16,{"inputs":[{"name":"self"},{"name":"short8"}],"output":null}],[11,"neg","","",16,{"inputs":[{"name":"self"}],"output":{"name":"short8"}}],[11,"shl","","",16,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shl_assign","","",16,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",16,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short8"}}],[11,"shr_assign","","",16,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"short16"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"bool"}}],[11,"new","","",17,{"inputs":[{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"}],"output":{"name":"short16"}}],[11,"from","","",17,null],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",17,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"zero","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",17,null],[11,"deref_mut","","",17,null],[11,"zero","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",17,null],[11,"add_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"sub","","",17,null],[11,"sub_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"mul","","",17,null],[11,"mul_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"div","","",17,null],[11,"div_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"rem","","",17,null],[11,"rem_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"sum","","",17,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",17,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"sum","","",17,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"product","","",17,{"inputs":[{"name":"i"}],"output":{"name":"short16"}}],[11,"hash","","",17,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"ordering"}}],[11,"add","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"sub","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"mul","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"div","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"rem","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"not","","",17,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"bitxor","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitxor","","",17,null],[11,"bitxor_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"bitor","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitor","","",17,null],[11,"bitor_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"bitand","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":{"name":"short16"}}],[11,"bitand","","",17,null],[11,"bitand_assign","","",17,{"inputs":[{"name":"self"},{"name":"short16"}],"output":null}],[11,"neg","","",17,{"inputs":[{"name":"self"}],"output":{"name":"short16"}}],[11,"shl","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shl_assign","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"short16"}}],[11,"shr_assign","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"ushort"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"bool"}}],[11,"new","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"from","","",18,null],[11,"from","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"ushort"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",18,null],[11,"deref_mut","","",18,null],[11,"zero","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",18,null],[11,"add_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"sub","","",18,null],[11,"sub_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"mul","","",18,null],[11,"mul_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"div","","",18,null],[11,"div_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"rem","","",18,null],[11,"rem_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"sum","","",18,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",18,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"sum","","",18,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"product","","",18,{"inputs":[{"name":"i"}],"output":{"name":"ushort"}}],[11,"hash","","",18,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ordering"}}],[11,"add","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"sub","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"mul","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"div","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"rem","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"not","","",18,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"bitxor","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitxor","","",18,null],[11,"bitxor_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"bitor","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitor","","",18,null],[11,"bitor_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"bitand","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":{"name":"ushort"}}],[11,"bitand","","",18,null],[11,"bitand_assign","","",18,{"inputs":[{"name":"self"},{"name":"ushort"}],"output":null}],[11,"neg","","",18,{"inputs":[{"name":"self"}],"output":{"name":"ushort"}}],[11,"shl","","",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shl_assign","","",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort"}}],[11,"shr_assign","","",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"ushort2"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"bool"}}],[11,"new","","",19,{"inputs":[{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort2"}}],[11,"from","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",19,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",19,null],[11,"deref_mut","","",19,null],[11,"zero","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",19,null],[11,"add_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"sub","","",19,null],[11,"sub_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"mul","","",19,null],[11,"mul_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"div","","",19,null],[11,"div_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"rem","","",19,null],[11,"rem_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"sum","","",19,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",19,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"sum","","",19,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"product","","",19,{"inputs":[{"name":"i"}],"output":{"name":"ushort2"}}],[11,"hash","","",19,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ordering"}}],[11,"add","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"sub","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"mul","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"div","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"rem","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"not","","",19,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"bitxor","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitxor","","",19,null],[11,"bitxor_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"bitor","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitor","","",19,null],[11,"bitor_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"bitand","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":{"name":"ushort2"}}],[11,"bitand","","",19,null],[11,"bitand_assign","","",19,{"inputs":[{"name":"self"},{"name":"ushort2"}],"output":null}],[11,"neg","","",19,{"inputs":[{"name":"self"}],"output":{"name":"ushort2"}}],[11,"shl","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shl_assign","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort2"}}],[11,"shr_assign","","",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"ushort3"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"bool"}}],[11,"new","","",20,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort3"}}],[11,"from","","",20,null],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",20,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",20,null],[11,"deref_mut","","",20,null],[11,"zero","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",20,null],[11,"add_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"sub","","",20,null],[11,"sub_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"mul","","",20,null],[11,"mul_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"div","","",20,null],[11,"div_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"rem","","",20,null],[11,"rem_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"sum","","",20,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",20,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"sum","","",20,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"product","","",20,{"inputs":[{"name":"i"}],"output":{"name":"ushort3"}}],[11,"hash","","",20,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ordering"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"sub","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"mul","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"div","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"rem","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"not","","",20,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"bitxor","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitxor","","",20,null],[11,"bitxor_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"bitor","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitor","","",20,null],[11,"bitor_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"bitand","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":{"name":"ushort3"}}],[11,"bitand","","",20,null],[11,"bitand_assign","","",20,{"inputs":[{"name":"self"},{"name":"ushort3"}],"output":null}],[11,"neg","","",20,{"inputs":[{"name":"self"}],"output":{"name":"ushort3"}}],[11,"shl","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shl_assign","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort3"}}],[11,"shr_assign","","",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"ushort4"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"bool"}}],[11,"new","","",21,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort4"}}],[11,"from","","",21,null],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",21,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",21,null],[11,"deref_mut","","",21,null],[11,"zero","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",21,null],[11,"add_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"sub","","",21,null],[11,"sub_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"mul","","",21,null],[11,"mul_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"div","","",21,null],[11,"div_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"rem","","",21,null],[11,"rem_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"sum","","",21,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",21,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"sum","","",21,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"product","","",21,{"inputs":[{"name":"i"}],"output":{"name":"ushort4"}}],[11,"hash","","",21,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ordering"}}],[11,"add","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"sub","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"mul","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"div","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"rem","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"not","","",21,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"bitxor","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitxor","","",21,null],[11,"bitxor_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"bitor","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitor","","",21,null],[11,"bitor_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"bitand","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":{"name":"ushort4"}}],[11,"bitand","","",21,null],[11,"bitand_assign","","",21,{"inputs":[{"name":"self"},{"name":"ushort4"}],"output":null}],[11,"neg","","",21,{"inputs":[{"name":"self"}],"output":{"name":"ushort4"}}],[11,"shl","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shl_assign","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort4"}}],[11,"shr_assign","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"ushort8"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"bool"}}],[11,"new","","",22,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort8"}}],[11,"from","","",22,null],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",22,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"zero","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",22,null],[11,"add_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"sub","","",22,null],[11,"sub_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"mul","","",22,null],[11,"mul_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"div","","",22,null],[11,"div_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"rem","","",22,null],[11,"rem_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"sum","","",22,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",22,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"sum","","",22,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"product","","",22,{"inputs":[{"name":"i"}],"output":{"name":"ushort8"}}],[11,"hash","","",22,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ordering"}}],[11,"add","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"sub","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"mul","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"div","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"rem","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"not","","",22,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"bitxor","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitxor","","",22,null],[11,"bitxor_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"bitor","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitor","","",22,null],[11,"bitor_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"bitand","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":{"name":"ushort8"}}],[11,"bitand","","",22,null],[11,"bitand_assign","","",22,{"inputs":[{"name":"self"},{"name":"ushort8"}],"output":null}],[11,"neg","","",22,{"inputs":[{"name":"self"}],"output":{"name":"ushort8"}}],[11,"shl","","",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shl_assign","","",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort8"}}],[11,"shr_assign","","",22,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"ushort16"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"bool"}}],[11,"new","","",23,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ushort16"}}],[11,"from","","",23,null],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",23,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"zero","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"zero","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",23,null],[11,"add_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"sub","","",23,null],[11,"sub_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"mul","","",23,null],[11,"mul_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"div","","",23,null],[11,"div_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"rem","","",23,null],[11,"rem_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"sum","","",23,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",23,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"sum","","",23,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"product","","",23,{"inputs":[{"name":"i"}],"output":{"name":"ushort16"}}],[11,"hash","","",23,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ordering"}}],[11,"add","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"sub","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"mul","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"div","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"rem","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"not","","",23,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"bitxor","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"bitor","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"bitand","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":{"name":"ushort16"}}],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,{"inputs":[{"name":"self"},{"name":"ushort16"}],"output":null}],[11,"neg","","",23,{"inputs":[{"name":"self"}],"output":{"name":"ushort16"}}],[11,"shl","","",23,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shl_assign","","",23,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",23,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ushort16"}}],[11,"shr_assign","","",23,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"default","","",24,{"inputs":[],"output":{"name":"int"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"bool"}}],[11,"new","","",24,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"from","","",24,null],[11,"from","","",24,{"inputs":[{"name":"i32"}],"output":{"name":"int"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",24,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"zero","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",24,null],[11,"add_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"sub","","",24,null],[11,"sub_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"mul","","",24,null],[11,"mul_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"div","","",24,null],[11,"div_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"rem","","",24,null],[11,"rem_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"sum","","",24,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",24,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"sum","","",24,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"product","","",24,{"inputs":[{"name":"i"}],"output":{"name":"int"}}],[11,"hash","","",24,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"ordering"}}],[11,"add","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"sub","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"mul","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"div","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"rem","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"not","","",24,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"bitxor","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitxor","","",24,null],[11,"bitxor_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"bitor","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitor","","",24,null],[11,"bitor_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"bitand","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":{"name":"int"}}],[11,"bitand","","",24,null],[11,"bitand_assign","","",24,{"inputs":[{"name":"self"},{"name":"int"}],"output":null}],[11,"neg","","",24,{"inputs":[{"name":"self"}],"output":{"name":"int"}}],[11,"shl","","",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"shl_assign","","",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int"}}],[11,"shr_assign","","",24,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"int2"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"bool"}}],[11,"new","","",25,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"int2"}}],[11,"from","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",25,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"zero","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",25,null],[11,"add_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"sub","","",25,null],[11,"sub_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"mul","","",25,null],[11,"mul_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"div","","",25,null],[11,"div_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"rem","","",25,null],[11,"rem_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"sum","","",25,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",25,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"sum","","",25,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"product","","",25,{"inputs":[{"name":"i"}],"output":{"name":"int2"}}],[11,"hash","","",25,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"ordering"}}],[11,"add","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"sub","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"mul","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"div","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"rem","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"not","","",25,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"bitxor","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitxor","","",25,null],[11,"bitxor_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"bitor","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitor","","",25,null],[11,"bitor_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"bitand","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":{"name":"int2"}}],[11,"bitand","","",25,null],[11,"bitand_assign","","",25,{"inputs":[{"name":"self"},{"name":"int2"}],"output":null}],[11,"neg","","",25,{"inputs":[{"name":"self"}],"output":{"name":"int2"}}],[11,"shl","","",25,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shl_assign","","",25,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",25,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int2"}}],[11,"shr_assign","","",25,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"int3"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"bool"}}],[11,"new","","",26,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int3"}}],[11,"from","","",26,null],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",26,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"zero","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",26,null],[11,"add_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"sub","","",26,null],[11,"sub_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"mul","","",26,null],[11,"mul_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"div","","",26,null],[11,"div_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"rem","","",26,null],[11,"rem_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"sum","","",26,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",26,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"sum","","",26,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"product","","",26,{"inputs":[{"name":"i"}],"output":{"name":"int3"}}],[11,"hash","","",26,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"ordering"}}],[11,"add","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"sub","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"mul","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"div","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"rem","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"not","","",26,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"bitxor","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitxor","","",26,null],[11,"bitxor_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"bitor","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitor","","",26,null],[11,"bitor_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"bitand","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":{"name":"int3"}}],[11,"bitand","","",26,null],[11,"bitand_assign","","",26,{"inputs":[{"name":"self"},{"name":"int3"}],"output":null}],[11,"neg","","",26,{"inputs":[{"name":"self"}],"output":{"name":"int3"}}],[11,"shl","","",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shl_assign","","",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int3"}}],[11,"shr_assign","","",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"int4"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"bool"}}],[11,"new","","",27,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int4"}}],[11,"from","","",27,null],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",27,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"zero","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",27,null],[11,"add_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"sub","","",27,null],[11,"sub_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"mul","","",27,null],[11,"mul_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"div","","",27,null],[11,"div_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"rem","","",27,null],[11,"rem_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"sum","","",27,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",27,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"sum","","",27,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"product","","",27,{"inputs":[{"name":"i"}],"output":{"name":"int4"}}],[11,"hash","","",27,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"ordering"}}],[11,"add","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"sub","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"mul","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"div","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"rem","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"not","","",27,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"bitxor","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitxor","","",27,null],[11,"bitxor_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"bitor","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitor","","",27,null],[11,"bitor_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"bitand","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":{"name":"int4"}}],[11,"bitand","","",27,null],[11,"bitand_assign","","",27,{"inputs":[{"name":"self"},{"name":"int4"}],"output":null}],[11,"neg","","",27,{"inputs":[{"name":"self"}],"output":{"name":"int4"}}],[11,"shl","","",27,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shl_assign","","",27,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",27,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int4"}}],[11,"shr_assign","","",27,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"int8"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"bool"}}],[11,"new","","",28,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int8"}}],[11,"from","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",28,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"zero","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",28,null],[11,"add_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"sub","","",28,null],[11,"sub_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"mul","","",28,null],[11,"mul_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"div","","",28,null],[11,"div_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"rem","","",28,null],[11,"rem_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"sum","","",28,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",28,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"sum","","",28,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"product","","",28,{"inputs":[{"name":"i"}],"output":{"name":"int8"}}],[11,"hash","","",28,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"ordering"}}],[11,"add","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"sub","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"mul","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"div","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"rem","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"not","","",28,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"bitxor","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitxor","","",28,null],[11,"bitxor_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"bitor","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitor","","",28,null],[11,"bitor_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"bitand","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":{"name":"int8"}}],[11,"bitand","","",28,null],[11,"bitand_assign","","",28,{"inputs":[{"name":"self"},{"name":"int8"}],"output":null}],[11,"neg","","",28,{"inputs":[{"name":"self"}],"output":{"name":"int8"}}],[11,"shl","","",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shl_assign","","",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int8"}}],[11,"shr_assign","","",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"int16"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"bool"}}],[11,"new","","",29,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"int16"}}],[11,"from","","",29,null],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",29,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"zero","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"zero","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",29,null],[11,"add_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"sub","","",29,null],[11,"sub_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"mul","","",29,null],[11,"mul_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"div","","",29,null],[11,"div_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"rem","","",29,null],[11,"rem_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"sum","","",29,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",29,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"sum","","",29,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"product","","",29,{"inputs":[{"name":"i"}],"output":{"name":"int16"}}],[11,"hash","","",29,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"ordering"}}],[11,"add","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"sub","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"mul","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"div","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"rem","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"not","","",29,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"bitxor","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitxor","","",29,null],[11,"bitxor_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"bitor","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitor","","",29,null],[11,"bitor_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"bitand","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":{"name":"int16"}}],[11,"bitand","","",29,null],[11,"bitand_assign","","",29,{"inputs":[{"name":"self"},{"name":"int16"}],"output":null}],[11,"neg","","",29,{"inputs":[{"name":"self"}],"output":{"name":"int16"}}],[11,"shl","","",29,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shl_assign","","",29,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",29,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"int16"}}],[11,"shr_assign","","",29,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"uint"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"bool"}}],[11,"new","","",30,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"from","","",30,null],[11,"from","","",30,{"inputs":[{"name":"u32"}],"output":{"name":"uint"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",30,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"zero","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"zero","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",30,null],[11,"add_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"sub","","",30,null],[11,"sub_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"mul","","",30,null],[11,"mul_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"div","","",30,null],[11,"div_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"rem","","",30,null],[11,"rem_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"sum","","",30,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",30,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"sum","","",30,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"product","","",30,{"inputs":[{"name":"i"}],"output":{"name":"uint"}}],[11,"hash","","",30,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"ordering"}}],[11,"add","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"sub","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"mul","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"div","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"rem","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"not","","",30,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"bitxor","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitxor","","",30,null],[11,"bitxor_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"bitor","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitor","","",30,null],[11,"bitor_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"bitand","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":{"name":"uint"}}],[11,"bitand","","",30,null],[11,"bitand_assign","","",30,{"inputs":[{"name":"self"},{"name":"uint"}],"output":null}],[11,"neg","","",30,{"inputs":[{"name":"self"}],"output":{"name":"uint"}}],[11,"shl","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shl_assign","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint"}}],[11,"shr_assign","","",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"uint2"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"bool"}}],[11,"new","","",31,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"uint2"}}],[11,"from","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",31,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"zero","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"zero","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",31,null],[11,"add_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"sub","","",31,null],[11,"sub_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"mul","","",31,null],[11,"mul_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"div","","",31,null],[11,"div_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"rem","","",31,null],[11,"rem_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"sum","","",31,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"product","","",31,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"sum","","",31,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"product","","",31,{"inputs":[{"name":"i"}],"output":{"name":"uint2"}}],[11,"hash","","",31,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"ordering"}}],[11,"add","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"sub","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"mul","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"div","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"rem","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"not","","",31,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"bitxor","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitxor","","",31,null],[11,"bitxor_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"bitor","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitor","","",31,null],[11,"bitor_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"bitand","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":{"name":"uint2"}}],[11,"bitand","","",31,null],[11,"bitand_assign","","",31,{"inputs":[{"name":"self"},{"name":"uint2"}],"output":null}],[11,"neg","","",31,{"inputs":[{"name":"self"}],"output":{"name":"uint2"}}],[11,"shl","","",31,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shl_assign","","",31,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",31,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint2"}}],[11,"shr_assign","","",31,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"uint3"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"bool"}}],[11,"new","","",32,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint3"}}],[11,"from","","",32,null],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",32,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"zero","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"zero","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",32,null],[11,"add_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"sub","","",32,null],[11,"sub_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"mul","","",32,null],[11,"mul_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"div","","",32,null],[11,"div_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"rem","","",32,null],[11,"rem_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"sum","","",32,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",32,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"sum","","",32,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"product","","",32,{"inputs":[{"name":"i"}],"output":{"name":"uint3"}}],[11,"hash","","",32,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"ordering"}}],[11,"add","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"sub","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"mul","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"div","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"rem","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"not","","",32,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"bitxor","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitxor","","",32,null],[11,"bitxor_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"bitor","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitor","","",32,null],[11,"bitor_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"bitand","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":{"name":"uint3"}}],[11,"bitand","","",32,null],[11,"bitand_assign","","",32,{"inputs":[{"name":"self"},{"name":"uint3"}],"output":null}],[11,"neg","","",32,{"inputs":[{"name":"self"}],"output":{"name":"uint3"}}],[11,"shl","","",32,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shl_assign","","",32,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",32,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint3"}}],[11,"shr_assign","","",32,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"uint4"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"bool"}}],[11,"new","","",33,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint4"}}],[11,"from","","",33,null],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",33,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"zero","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",33,null],[11,"deref_mut","","",33,null],[11,"zero","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",33,null],[11,"add_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"sub","","",33,null],[11,"sub_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"mul","","",33,null],[11,"mul_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"div","","",33,null],[11,"div_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"rem","","",33,null],[11,"rem_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"sum","","",33,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",33,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"sum","","",33,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"product","","",33,{"inputs":[{"name":"i"}],"output":{"name":"uint4"}}],[11,"hash","","",33,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"ordering"}}],[11,"add","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"sub","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"mul","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"div","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"rem","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"not","","",33,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"bitxor","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitxor","","",33,null],[11,"bitxor_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"bitor","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitor","","",33,null],[11,"bitor_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"bitand","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":{"name":"uint4"}}],[11,"bitand","","",33,null],[11,"bitand_assign","","",33,{"inputs":[{"name":"self"},{"name":"uint4"}],"output":null}],[11,"neg","","",33,{"inputs":[{"name":"self"}],"output":{"name":"uint4"}}],[11,"shl","","",33,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shl_assign","","",33,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",33,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint4"}}],[11,"shr_assign","","",33,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"uint8"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"bool"}}],[11,"new","","",34,{"inputs":[{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"},{"name":"i8"}],"output":{"name":"uint8"}}],[11,"from","","",34,null],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",34,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"zero","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",34,null],[11,"deref_mut","","",34,null],[11,"zero","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",34,null],[11,"add_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"sub","","",34,null],[11,"sub_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"mul","","",34,null],[11,"mul_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"div","","",34,null],[11,"div_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"rem","","",34,null],[11,"rem_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"sum","","",34,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",34,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"sum","","",34,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"product","","",34,{"inputs":[{"name":"i"}],"output":{"name":"uint8"}}],[11,"hash","","",34,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"ordering"}}],[11,"add","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"sub","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"mul","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"div","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"rem","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"not","","",34,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"bitxor","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitxor","","",34,null],[11,"bitxor_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"bitor","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitor","","",34,null],[11,"bitor_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"bitand","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":{"name":"uint8"}}],[11,"bitand","","",34,null],[11,"bitand_assign","","",34,{"inputs":[{"name":"self"},{"name":"uint8"}],"output":null}],[11,"neg","","",34,{"inputs":[{"name":"self"}],"output":{"name":"uint8"}}],[11,"shl","","",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shl_assign","","",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint8"}}],[11,"shr_assign","","",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"uint16"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"bool"}}],[11,"new","","",35,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"uint16"}}],[11,"from","","",35,null],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"zero","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"zero","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",35,null],[11,"add_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"sub","","",35,null],[11,"sub_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"mul","","",35,null],[11,"mul_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"div","","",35,null],[11,"div_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"rem","","",35,null],[11,"rem_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"sum","","",35,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",35,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"sum","","",35,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"product","","",35,{"inputs":[{"name":"i"}],"output":{"name":"uint16"}}],[11,"hash","","",35,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"ordering"}}],[11,"add","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"sub","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"mul","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"div","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"rem","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"not","","",35,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"bitxor","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitxor","","",35,null],[11,"bitxor_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"bitor","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitor","","",35,null],[11,"bitor_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"bitand","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":{"name":"uint16"}}],[11,"bitand","","",35,null],[11,"bitand_assign","","",35,{"inputs":[{"name":"self"},{"name":"uint16"}],"output":null}],[11,"neg","","",35,{"inputs":[{"name":"self"}],"output":{"name":"uint16"}}],[11,"shl","","",35,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shl_assign","","",35,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",35,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"uint16"}}],[11,"shr_assign","","",35,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"long"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"from","","",36,null],[11,"from","","",36,{"inputs":[{"name":"i64"}],"output":{"name":"long"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",36,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"zero","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",36,null],[11,"add_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"sub","","",36,null],[11,"sub_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"mul","","",36,null],[11,"mul_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"div","","",36,null],[11,"div_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"rem","","",36,null],[11,"rem_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"sum","","",36,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",36,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"sum","","",36,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"product","","",36,{"inputs":[{"name":"i"}],"output":{"name":"long"}}],[11,"hash","","",36,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"ordering"}}],[11,"add","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"sub","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"mul","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"div","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"rem","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"not","","",36,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"bitxor","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitxor","","",36,null],[11,"bitxor_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"bitor","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitor","","",36,null],[11,"bitor_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"bitand","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":{"name":"long"}}],[11,"bitand","","",36,null],[11,"bitand_assign","","",36,{"inputs":[{"name":"self"},{"name":"long"}],"output":null}],[11,"neg","","",36,{"inputs":[{"name":"self"}],"output":{"name":"long"}}],[11,"shl","","",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shl_assign","","",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long"}}],[11,"shr_assign","","",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"long2"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"le","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"gt","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"ge","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"bool"}}],[11,"new","","",37,{"inputs":[{"name":"i64"},{"name":"i64"}],"output":{"name":"long2"}}],[11,"from","","",37,null],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",37,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"zero","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",37,null],[11,"add_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"sub","","",37,null],[11,"sub_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"mul","","",37,null],[11,"mul_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"div","","",37,null],[11,"div_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"rem","","",37,null],[11,"rem_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"sum","","",37,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",37,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"sum","","",37,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"product","","",37,{"inputs":[{"name":"i"}],"output":{"name":"long2"}}],[11,"hash","","",37,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"ordering"}}],[11,"add","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"sub","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"mul","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"div","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"rem","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"not","","",37,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"bitxor","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitxor","","",37,null],[11,"bitxor_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"bitor","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitor","","",37,null],[11,"bitor_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"bitand","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":{"name":"long2"}}],[11,"bitand","","",37,null],[11,"bitand_assign","","",37,{"inputs":[{"name":"self"},{"name":"long2"}],"output":null}],[11,"neg","","",37,{"inputs":[{"name":"self"}],"output":{"name":"long2"}}],[11,"shl","","",37,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shl_assign","","",37,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",37,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long2"}}],[11,"shr_assign","","",37,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"long3"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"le","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"gt","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"ge","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"bool"}}],[11,"new","","",38,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long3"}}],[11,"from","","",38,null],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",38,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",38,null],[11,"deref_mut","","",38,null],[11,"zero","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",38,null],[11,"add_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"sub","","",38,null],[11,"sub_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"mul","","",38,null],[11,"mul_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"div","","",38,null],[11,"div_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"rem","","",38,null],[11,"rem_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"sum","","",38,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",38,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"sum","","",38,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"product","","",38,{"inputs":[{"name":"i"}],"output":{"name":"long3"}}],[11,"hash","","",38,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"ordering"}}],[11,"add","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"sub","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"mul","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"div","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"rem","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"not","","",38,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"bitxor","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitxor","","",38,null],[11,"bitxor_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"bitor","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitor","","",38,null],[11,"bitor_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"bitand","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":{"name":"long3"}}],[11,"bitand","","",38,null],[11,"bitand_assign","","",38,{"inputs":[{"name":"self"},{"name":"long3"}],"output":null}],[11,"neg","","",38,{"inputs":[{"name":"self"}],"output":{"name":"long3"}}],[11,"shl","","",38,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shl_assign","","",38,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",38,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long3"}}],[11,"shr_assign","","",38,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"long4"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"le","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"gt","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"ge","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"bool"}}],[11,"new","","",39,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long4"}}],[11,"from","","",39,null],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",39,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"zero","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",39,null],[11,"add_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"sub","","",39,null],[11,"sub_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"mul","","",39,null],[11,"mul_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"div","","",39,null],[11,"div_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"rem","","",39,null],[11,"rem_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"sum","","",39,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",39,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"sum","","",39,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"product","","",39,{"inputs":[{"name":"i"}],"output":{"name":"long4"}}],[11,"hash","","",39,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"ordering"}}],[11,"add","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"sub","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"mul","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"div","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"rem","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"not","","",39,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"bitxor","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitxor","","",39,null],[11,"bitxor_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"bitor","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitor","","",39,null],[11,"bitor_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"bitand","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":{"name":"long4"}}],[11,"bitand","","",39,null],[11,"bitand_assign","","",39,{"inputs":[{"name":"self"},{"name":"long4"}],"output":null}],[11,"neg","","",39,{"inputs":[{"name":"self"}],"output":{"name":"long4"}}],[11,"shl","","",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shl_assign","","",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long4"}}],[11,"shr_assign","","",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"long8"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"bool"}}],[11,"new","","",40,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long8"}}],[11,"from","","",40,null],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",40,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"zero","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",40,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",40,null],[11,"add_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"sub","","",40,null],[11,"sub_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"mul","","",40,null],[11,"mul_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"div","","",40,null],[11,"div_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"rem","","",40,null],[11,"rem_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"sum","","",40,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",40,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"sum","","",40,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"product","","",40,{"inputs":[{"name":"i"}],"output":{"name":"long8"}}],[11,"hash","","",40,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"ordering"}}],[11,"add","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"sub","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"mul","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"div","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"rem","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"not","","",40,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"bitxor","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitxor","","",40,null],[11,"bitxor_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"bitor","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitor","","",40,null],[11,"bitor_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"bitand","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":{"name":"long8"}}],[11,"bitand","","",40,null],[11,"bitand_assign","","",40,{"inputs":[{"name":"self"},{"name":"long8"}],"output":null}],[11,"neg","","",40,{"inputs":[{"name":"self"}],"output":{"name":"long8"}}],[11,"shl","","",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shl_assign","","",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long8"}}],[11,"shr_assign","","",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"long16"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"bool"}}],[11,"new","","",41,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"},{"name":"i64"}],"output":{"name":"long16"}}],[11,"from","","",41,null],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",41,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"zero","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"zero","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",41,null],[11,"add_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"sub","","",41,null],[11,"sub_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"mul","","",41,null],[11,"mul_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"div","","",41,null],[11,"div_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"rem","","",41,null],[11,"rem_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"sum","","",41,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",41,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"sum","","",41,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"product","","",41,{"inputs":[{"name":"i"}],"output":{"name":"long16"}}],[11,"hash","","",41,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"ordering"}}],[11,"add","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"sub","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"mul","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"div","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"rem","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"not","","",41,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"bitxor","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitxor","","",41,null],[11,"bitxor_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"bitor","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitor","","",41,null],[11,"bitor_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"bitand","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":{"name":"long16"}}],[11,"bitand","","",41,null],[11,"bitand_assign","","",41,{"inputs":[{"name":"self"},{"name":"long16"}],"output":null}],[11,"neg","","",41,{"inputs":[{"name":"self"}],"output":{"name":"long16"}}],[11,"shl","","",41,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shl_assign","","",41,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",41,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"long16"}}],[11,"shr_assign","","",41,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"ulong"}}],[11,"partial_cmp","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"le","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"gt","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"ge","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"bool"}}],[11,"new","","",42,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"from","","",42,null],[11,"from","","",42,{"inputs":[{"name":"u64"}],"output":{"name":"ulong"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",42,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"zero","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",42,null],[11,"add_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"sub","","",42,null],[11,"sub_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"mul","","",42,null],[11,"mul_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"div","","",42,null],[11,"div_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"rem","","",42,null],[11,"rem_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"sum","","",42,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",42,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"sum","","",42,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"product","","",42,{"inputs":[{"name":"i"}],"output":{"name":"ulong"}}],[11,"hash","","",42,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ordering"}}],[11,"add","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"sub","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"mul","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"div","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"rem","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"not","","",42,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"bitxor","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitxor","","",42,null],[11,"bitxor_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"bitor","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitor","","",42,null],[11,"bitor_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"bitand","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":{"name":"ulong"}}],[11,"bitand","","",42,null],[11,"bitand_assign","","",42,{"inputs":[{"name":"self"},{"name":"ulong"}],"output":null}],[11,"neg","","",42,{"inputs":[{"name":"self"}],"output":{"name":"ulong"}}],[11,"shl","","",42,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shl_assign","","",42,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",42,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong"}}],[11,"shr_assign","","",42,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"ulong2"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"bool"}}],[11,"new","","",43,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong2"}}],[11,"from","","",43,null],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",43,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"zero","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",43,null],[11,"add_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"sub","","",43,null],[11,"sub_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"mul","","",43,null],[11,"mul_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"div","","",43,null],[11,"div_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"rem","","",43,null],[11,"rem_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"sum","","",43,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",43,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"sum","","",43,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"product","","",43,{"inputs":[{"name":"i"}],"output":{"name":"ulong2"}}],[11,"hash","","",43,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ordering"}}],[11,"add","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"sub","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"mul","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"div","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"rem","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"not","","",43,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"bitxor","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitxor","","",43,null],[11,"bitxor_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"bitor","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitor","","",43,null],[11,"bitor_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"bitand","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":{"name":"ulong2"}}],[11,"bitand","","",43,null],[11,"bitand_assign","","",43,{"inputs":[{"name":"self"},{"name":"ulong2"}],"output":null}],[11,"neg","","",43,{"inputs":[{"name":"self"}],"output":{"name":"ulong2"}}],[11,"shl","","",43,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"shl_assign","","",43,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",43,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong2"}}],[11,"shr_assign","","",43,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"ulong3"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"bool"}}],[11,"new","","",44,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong3"}}],[11,"from","","",44,null],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",44,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"zero","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",44,null],[11,"add_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"sub","","",44,null],[11,"sub_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"mul","","",44,null],[11,"mul_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"div","","",44,null],[11,"div_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"rem","","",44,null],[11,"rem_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"sum","","",44,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",44,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"sum","","",44,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"product","","",44,{"inputs":[{"name":"i"}],"output":{"name":"ulong3"}}],[11,"hash","","",44,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ordering"}}],[11,"add","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"sub","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"mul","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"div","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"rem","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"not","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"bitxor","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"bitor","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"bitand","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":{"name":"ulong3"}}],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,{"inputs":[{"name":"self"},{"name":"ulong3"}],"output":null}],[11,"neg","","",44,{"inputs":[{"name":"self"}],"output":{"name":"ulong3"}}],[11,"shl","","",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shl_assign","","",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong3"}}],[11,"shr_assign","","",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"ulong4"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"bool"}}],[11,"new","","",45,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong4"}}],[11,"from","","",45,null],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",45,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"zero","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",45,null],[11,"add_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"sub","","",45,null],[11,"sub_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"mul","","",45,null],[11,"mul_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"div","","",45,null],[11,"div_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"rem","","",45,null],[11,"rem_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"sum","","",45,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",45,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"sum","","",45,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"product","","",45,{"inputs":[{"name":"i"}],"output":{"name":"ulong4"}}],[11,"hash","","",45,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ordering"}}],[11,"add","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"sub","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"mul","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"div","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"rem","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"not","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"bitxor","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitxor","","",45,null],[11,"bitxor_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"bitor","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitor","","",45,null],[11,"bitor_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"bitand","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":{"name":"ulong4"}}],[11,"bitand","","",45,null],[11,"bitand_assign","","",45,{"inputs":[{"name":"self"},{"name":"ulong4"}],"output":null}],[11,"neg","","",45,{"inputs":[{"name":"self"}],"output":{"name":"ulong4"}}],[11,"shl","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shl_assign","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong4"}}],[11,"shr_assign","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"ulong8"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"bool"}}],[11,"new","","",46,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong8"}}],[11,"from","","",46,null],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",46,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"zero","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",46,null],[11,"add_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"sub","","",46,null],[11,"sub_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"mul","","",46,null],[11,"mul_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"div","","",46,null],[11,"div_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"rem","","",46,null],[11,"rem_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"sum","","",46,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",46,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"sum","","",46,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"product","","",46,{"inputs":[{"name":"i"}],"output":{"name":"ulong8"}}],[11,"hash","","",46,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ordering"}}],[11,"add","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"sub","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"mul","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"div","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"rem","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"not","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"bitxor","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitxor","","",46,null],[11,"bitxor_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"bitor","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitor","","",46,null],[11,"bitor_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"bitand","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":{"name":"ulong8"}}],[11,"bitand","","",46,null],[11,"bitand_assign","","",46,{"inputs":[{"name":"self"},{"name":"ulong8"}],"output":null}],[11,"neg","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ulong8"}}],[11,"shl","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shl_assign","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong8"}}],[11,"shr_assign","","",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"ulong16"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"bool"}}],[11,"new","","",47,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"ulong16"}}],[11,"from","","",47,null],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",47,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"zero","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"zero","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",47,null],[11,"add_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"sub","","",47,null],[11,"sub_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"mul","","",47,null],[11,"mul_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"div","","",47,null],[11,"div_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"rem","","",47,null],[11,"rem_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"sum","","",47,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",47,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"sum","","",47,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"product","","",47,{"inputs":[{"name":"i"}],"output":{"name":"ulong16"}}],[11,"hash","","",47,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"cmp","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ordering"}}],[11,"add","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"sub","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"mul","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"div","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"rem","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"not","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"bitxor","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitxor","","",47,null],[11,"bitxor_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"bitor","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitor","","",47,null],[11,"bitor_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"bitand","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":{"name":"ulong16"}}],[11,"bitand","","",47,null],[11,"bitand_assign","","",47,{"inputs":[{"name":"self"},{"name":"ulong16"}],"output":null}],[11,"neg","","",47,{"inputs":[{"name":"self"}],"output":{"name":"ulong16"}}],[11,"shl","","",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shl_assign","","",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shr","","",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ulong16"}}],[11,"shr_assign","","",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"float"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"bool"}}],[11,"new","","",48,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"from","","",48,null],[11,"from","","",48,{"inputs":[{"name":"f32"}],"output":{"name":"float"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",48,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"zero","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",48,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",48,null],[11,"add_assign","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":null}],[11,"sub","","",48,null],[11,"sub_assign","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":null}],[11,"mul","","",48,null],[11,"mul_assign","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":null}],[11,"div","","",48,null],[11,"div_assign","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":null}],[11,"rem","","",48,null],[11,"rem_assign","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":null}],[11,"sum","","",48,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",48,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"sum","","",48,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"product","","",48,{"inputs":[{"name":"i"}],"output":{"name":"float"}}],[11,"add","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"sub","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"mul","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"div","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"rem","","",48,{"inputs":[{"name":"self"},{"name":"float"}],"output":{"name":"float"}}],[11,"neg","","",48,{"inputs":[{"name":"self"}],"output":{"name":"float"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"float2"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"bool"}}],[11,"new","","",49,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"float2"}}],[11,"from","","",49,null],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",49,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"zero","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",49,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",49,null],[11,"add_assign","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":null}],[11,"sub","","",49,null],[11,"sub_assign","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":null}],[11,"mul","","",49,null],[11,"mul_assign","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":null}],[11,"div","","",49,null],[11,"div_assign","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":null}],[11,"rem","","",49,null],[11,"rem_assign","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":null}],[11,"sum","","",49,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",49,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"sum","","",49,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"product","","",49,{"inputs":[{"name":"i"}],"output":{"name":"float2"}}],[11,"add","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"sub","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"mul","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"div","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"rem","","",49,{"inputs":[{"name":"self"},{"name":"float2"}],"output":{"name":"float2"}}],[11,"neg","","",49,{"inputs":[{"name":"self"}],"output":{"name":"float2"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"default","","",50,{"inputs":[],"output":{"name":"float3"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"bool"}}],[11,"new","","",50,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float3"}}],[11,"from","","",50,null],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",50,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",50,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"zero","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",50,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",50,null],[11,"add_assign","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":null}],[11,"sub","","",50,null],[11,"sub_assign","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":null}],[11,"mul","","",50,null],[11,"mul_assign","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":null}],[11,"div","","",50,null],[11,"div_assign","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":null}],[11,"rem","","",50,null],[11,"rem_assign","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":null}],[11,"sum","","",50,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",50,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"sum","","",50,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"product","","",50,{"inputs":[{"name":"i"}],"output":{"name":"float3"}}],[11,"add","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"sub","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"mul","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"div","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"rem","","",50,{"inputs":[{"name":"self"},{"name":"float3"}],"output":{"name":"float3"}}],[11,"neg","","",50,{"inputs":[{"name":"self"}],"output":{"name":"float3"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"float4"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"bool"}}],[11,"new","","",51,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float4"}}],[11,"from","","",51,null],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",51,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"zero","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",51,null],[11,"add_assign","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":null}],[11,"sub","","",51,null],[11,"sub_assign","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":null}],[11,"mul","","",51,null],[11,"mul_assign","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":null}],[11,"div","","",51,null],[11,"div_assign","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":null}],[11,"rem","","",51,null],[11,"rem_assign","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":null}],[11,"sum","","",51,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",51,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"sum","","",51,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"product","","",51,{"inputs":[{"name":"i"}],"output":{"name":"float4"}}],[11,"add","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"sub","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"mul","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"div","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"rem","","",51,{"inputs":[{"name":"self"},{"name":"float4"}],"output":{"name":"float4"}}],[11,"neg","","",51,{"inputs":[{"name":"self"}],"output":{"name":"float4"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"float8"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"bool"}}],[11,"new","","",52,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float8"}}],[11,"from","","",52,null],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",52,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"zero","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",52,null],[11,"add_assign","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":null}],[11,"sub","","",52,null],[11,"sub_assign","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":null}],[11,"mul","","",52,null],[11,"mul_assign","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":null}],[11,"div","","",52,null],[11,"div_assign","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":null}],[11,"rem","","",52,null],[11,"rem_assign","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":null}],[11,"sum","","",52,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",52,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"sum","","",52,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"product","","",52,{"inputs":[{"name":"i"}],"output":{"name":"float8"}}],[11,"add","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"sub","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"mul","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"div","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"rem","","",52,{"inputs":[{"name":"self"},{"name":"float8"}],"output":{"name":"float8"}}],[11,"neg","","",52,{"inputs":[{"name":"self"}],"output":{"name":"float8"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"default","","",53,{"inputs":[],"output":{"name":"float16"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"bool"}}],[11,"new","","",53,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"float16"}}],[11,"from","","",53,null],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",53,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"zero","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",53,null],[11,"deref_mut","","",53,null],[11,"zero","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",53,null],[11,"add_assign","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":null}],[11,"sub","","",53,null],[11,"sub_assign","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":null}],[11,"mul","","",53,null],[11,"mul_assign","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":null}],[11,"div","","",53,null],[11,"div_assign","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":null}],[11,"rem","","",53,null],[11,"rem_assign","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":null}],[11,"sum","","",53,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",53,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"sum","","",53,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"product","","",53,{"inputs":[{"name":"i"}],"output":{"name":"float16"}}],[11,"add","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"sub","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"mul","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"div","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"rem","","",53,{"inputs":[{"name":"self"},{"name":"float16"}],"output":{"name":"float16"}}],[11,"neg","","",53,{"inputs":[{"name":"self"}],"output":{"name":"float16"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"double"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"bool"}}],[11,"new","","",54,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"from","","",54,null],[11,"from","","",54,{"inputs":[{"name":"f64"}],"output":{"name":"double"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",54,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"zero","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",54,null],[11,"add_assign","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":null}],[11,"sub","","",54,null],[11,"sub_assign","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":null}],[11,"mul","","",54,null],[11,"mul_assign","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":null}],[11,"div","","",54,null],[11,"div_assign","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":null}],[11,"rem","","",54,null],[11,"rem_assign","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":null}],[11,"sum","","",54,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",54,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"sum","","",54,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"product","","",54,{"inputs":[{"name":"i"}],"output":{"name":"double"}}],[11,"add","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"sub","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"mul","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"div","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"rem","","",54,{"inputs":[{"name":"self"},{"name":"double"}],"output":{"name":"double"}}],[11,"neg","","",54,{"inputs":[{"name":"self"}],"output":{"name":"double"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"double2"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"bool"}}],[11,"new","","",55,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"double2"}}],[11,"from","","",55,null],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",55,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"zero","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",55,null],[11,"add_assign","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":null}],[11,"sub","","",55,null],[11,"sub_assign","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":null}],[11,"mul","","",55,null],[11,"mul_assign","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":null}],[11,"div","","",55,null],[11,"div_assign","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":null}],[11,"rem","","",55,null],[11,"rem_assign","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":null}],[11,"sum","","",55,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",55,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"sum","","",55,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"product","","",55,{"inputs":[{"name":"i"}],"output":{"name":"double2"}}],[11,"add","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"sub","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"mul","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"div","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"rem","","",55,{"inputs":[{"name":"self"},{"name":"double2"}],"output":{"name":"double2"}}],[11,"neg","","",55,{"inputs":[{"name":"self"}],"output":{"name":"double2"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"double3"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"bool"}}],[11,"new","","",56,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double3"}}],[11,"from","","",56,null],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",56,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",56,null],[11,"deref_mut","","",56,null],[11,"zero","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",56,null],[11,"add_assign","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":null}],[11,"sub","","",56,null],[11,"sub_assign","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":null}],[11,"mul","","",56,null],[11,"mul_assign","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":null}],[11,"div","","",56,null],[11,"div_assign","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":null}],[11,"rem","","",56,null],[11,"rem_assign","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":null}],[11,"sum","","",56,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",56,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"sum","","",56,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"product","","",56,{"inputs":[{"name":"i"}],"output":{"name":"double3"}}],[11,"add","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"sub","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"mul","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"div","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"rem","","",56,{"inputs":[{"name":"self"},{"name":"double3"}],"output":{"name":"double3"}}],[11,"neg","","",56,{"inputs":[{"name":"self"}],"output":{"name":"double3"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"double4"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double4"}}],[11,"from","","",57,null],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",57,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"zero","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",57,null],[11,"add_assign","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":null}],[11,"sub","","",57,null],[11,"sub_assign","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":null}],[11,"mul","","",57,null],[11,"mul_assign","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":null}],[11,"div","","",57,null],[11,"div_assign","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":null}],[11,"rem","","",57,null],[11,"rem_assign","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":null}],[11,"sum","","",57,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",57,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"sum","","",57,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"product","","",57,{"inputs":[{"name":"i"}],"output":{"name":"double4"}}],[11,"add","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"sub","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"mul","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"div","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"rem","","",57,{"inputs":[{"name":"self"},{"name":"double4"}],"output":{"name":"double4"}}],[11,"neg","","",57,{"inputs":[{"name":"self"}],"output":{"name":"double4"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"double8"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"bool"}}],[11,"new","","",58,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double8"}}],[11,"from","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",58,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"zero","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",58,null],[11,"add_assign","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":null}],[11,"sub","","",58,null],[11,"sub_assign","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":null}],[11,"mul","","",58,null],[11,"mul_assign","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":null}],[11,"div","","",58,null],[11,"div_assign","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":null}],[11,"rem","","",58,null],[11,"rem_assign","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":null}],[11,"sum","","",58,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",58,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"sum","","",58,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"product","","",58,{"inputs":[{"name":"i"}],"output":{"name":"double8"}}],[11,"add","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"sub","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"mul","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"div","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"rem","","",58,{"inputs":[{"name":"self"},{"name":"double8"}],"output":{"name":"double8"}}],[11,"neg","","",58,{"inputs":[{"name":"self"}],"output":{"name":"double8"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"double16"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"bool"}}],[11,"new","","",59,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"double16"}}],[11,"from","","",59,null],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"splat","","",59,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"zero","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",59,null],[11,"deref_mut","","",59,null],[11,"zero","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"is_zero","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"one","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"add","","",59,null],[11,"add_assign","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":null}],[11,"sub","","",59,null],[11,"sub_assign","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":null}],[11,"mul","","",59,null],[11,"mul_assign","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":null}],[11,"div","","",59,null],[11,"div_assign","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":null}],[11,"rem","","",59,null],[11,"rem_assign","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":null}],[11,"sum","","",59,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",59,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"sum","","",59,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"product","","",59,{"inputs":[{"name":"i"}],"output":{"name":"double16"}}],[11,"add","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"sub","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"mul","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"div","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"rem","","",59,{"inputs":[{"name":"self"},{"name":"double16"}],"output":{"name":"double16"}}],[11,"neg","","",59,{"inputs":[{"name":"self"}],"output":{"name":"double16"}}]],"paths":[[3,"Char"],[3,"Char2"],[3,"Char3"],[3,"Char4"],[3,"Char8"],[3,"Char16"],[3,"Uchar"],[3,"Uchar2"],[3,"Uchar3"],[3,"Uchar4"],[3,"Uchar8"],[3,"Uchar16"],[3,"Short"],[3,"Short2"],[3,"Short3"],[3,"Short4"],[3,"Short8"],[3,"Short16"],[3,"Ushort"],[3,"Ushort2"],[3,"Ushort3"],[3,"Ushort4"],[3,"Ushort8"],[3,"Ushort16"],[3,"Int"],[3,"Int2"],[3,"Int3"],[3,"Int4"],[3,"Int8"],[3,"Int16"],[3,"Uint"],[3,"Uint2"],[3,"Uint3"],[3,"Uint4"],[3,"Uint8"],[3,"Uint16"],[3,"Long"],[3,"Long2"],[3,"Long3"],[3,"Long4"],[3,"Long8"],[3,"Long16"],[3,"Ulong"],[3,"Ulong2"],[3,"Ulong3"],[3,"Ulong4"],[3,"Ulong8"],[3,"Ulong16"],[3,"Float"],[3,"Float2"],[3,"Float3"],[3,"Float4"],[3,"Float8"],[3,"Float16"],[3,"Double"],[3,"Double2"],[3,"Double3"],[3,"Double4"],[3,"Double8"],[3,"Double16"]]};
searchIndex["qcgpu"] = {"doc":"","items":[[3,"Simulator","qcgpu","",null,null],[0,"error","","",null,null],[0,"gate","","",null,null],[3,"Gate","qcgpu::gate","Representation of a gate",null,null],[12,"a","","",0,null],[12,"b","","",0,null],[12,"c","","",0,null],[12,"d","","",0,null],[5,"h","","Hadamard Gate",null,{"inputs":[],"output":{"name":"gate"}}],[5,"x","","Pauli X / NOT Gate",null,{"inputs":[],"output":{"name":"gate"}}],[5,"y","","Pauli Y Gate",null,{"inputs":[],"output":{"name":"gate"}}],[5,"z","","Pauli Z Gate",null,{"inputs":[],"output":{"name":"gate"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"gate"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"traits","qcgpu","",null,null],[8,"Backend","qcgpu::traits","",null,null],[10,"num_qubits","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[10,"apply_gate","","",1,{"inputs":[{"name":"self"},{"name":"gate"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[10,"apply_controlled_gate","","",1,{"inputs":[{"name":"self"},{"name":"gate"},{"name":"u8"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[10,"measure_qubit","","",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["u8","error"],"name":"result"}}],[11,"measure","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["u8","error"],"name":"result"}}],[0,"backends","qcgpu","",null,null],[3,"OpenCL","qcgpu::backends","",null,null],[12,"buffer","","OpenCL Buffer for the state vector",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initialize a new OpenCL Backend",2,{"inputs":[{"name":"u8"}],"output":{"generics":["opencl","error"],"name":"result"}}],[11,"apply_gate","","",2,{"inputs":[{"name":"self"},{"name":"gate"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"apply_controlled_gate","","",2,{"inputs":[{"name":"self"},{"name":"gate"},{"name":"u8"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"measure","","Measure the whole register, leaving the register in the measured state",2,{"inputs":[{"name":"self"}],"output":{"generics":["u8","error"],"name":"result"}}],[11,"measure_qubit","","Measure the value of a single qubit, leaving the register in the state where only that qubit (or any entangled qubits) have been collapsed",2,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["u8","error"],"name":"result"}}],[11,"num_qubits","","Get the number of qubits that this backend was initialized for",2,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","qcgpu","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_opencl","","",3,{"inputs":[{"name":"u8"}],"output":{"generics":["simulator","error"],"name":"result"}}],[11,"apply_gate","","",3,{"inputs":[{"name":"self"},{"name":"gate"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"apply_all","","",3,{"inputs":[{"name":"self"},{"name":"gate"}],"output":{"generics":["error"],"name":"result"}}],[11,"x","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"y","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"z","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"h","","",3,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"cx","","",3,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u8"}],"output":{"generics":["error"],"name":"result"}}],[11,"measure","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["u8","error"],"name":"result"}}],[11,"num_qubits","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Gate"],[8,"Backend"],[3,"OpenCL"],[3,"Simulator"]]};
searchIndex["quote"] = {"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",null,null],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",null,null],[12,"0","","",0,null],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",null,null],[12,"0","","",1,null],[3,"Ident","","An identifier that should be interpolated without quotes.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":{"name":"bool"}}],[11,"new","","Empty tokens.",2,{"inputs":[],"output":{"name":"self"}}],[11,"append","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"append_all","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"append_separated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"append_terminated","","For use by `ToTokens` implementations.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"s"}],"output":null}],[11,"as_str","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"into_string","","",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"parse","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",3,null],[11,"new","","",3,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"as_ref","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[14,"quote","","The whole point.",null,null]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["qutex"] = {"doc":"A collection of locking data structures, both thread-safe and single-thread-optimized, which use Rust futures instead of thread-blocking.","items":[[3,"Guard","qutex","Allows access to the data contained within a lock just like a mutex guard.",null,null],[3,"FutureGuard","","A future which resolves to a `Guard`.",null,null],[3,"Request","","A request to lock the qutex for exclusive access.",null,null],[3,"Qutex","","A lock-free-queue-backed exclusive data lock.",null,null],[3,"ReadGuard","","Allows read-only access to the data contained within a lock.",null,null],[3,"WriteGuard","","Allows read or write access to the data contained within a lock.",null,null],[3,"FutureReadGuard","","A future which resolves to a `ReadGuard`.",null,null],[3,"FutureWriteGuard","","A future which resolves to a `WriteGuard`.",null,null],[3,"QrwRequest","","A request to lock the lock for either read or write access.",null,null],[3,"QrwLock","","A queue-backed read/write data lock.",null,null],[4,"RequestKind","","Specifies whether a `QrwRequest` is a read or write request.",null,null],[13,"Read","","",0,null],[13,"Write","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Releases the lock held by a `Guard` and returns the original `Qutex`.",1,{"inputs":[{"name":"guard"}],"output":{"name":"qutex"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"wait","","Blocks the current thread until this future resolves.",2,{"inputs":[{"name":"self"}],"output":{"generics":["guard","canceled"],"name":"result"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","Gracefully unlock if this guard has a lock acquired.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new `Request`.",3,{"inputs":[{"name":"sender"}],"output":{"name":"request"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and returns a new `Qutex`.",4,{"inputs":[{"name":"t"}],"output":{"name":"qutex"}}],[11,"lock","","Returns a new `FutureGuard` which can be used as a future and will resolve into a `Guard`.",4,{"inputs":[{"name":"self"}],"output":{"name":"futureguard"}}],[11,"push_request","","Pushes a lock request onto the queue.",4,{"inputs":[{"name":"self"},{"name":"request"}],"output":null}],[11,"get_mut","","Returns a mutable reference to the inner `Vec` if there are currently no other copies of this `Qutex`.",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ptr","","Returns a reference to the inner value.",4,null],[11,"as_mut_ptr","","Returns a mutable reference to the inner value.",4,null],[11,"process_queue","","Pops the next lock request in the queue if this (the caller's) lock is unlocked.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"direct_unlock","","Unlocks this (the caller's) lock and wakes up the next task in the queue.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",4,{"inputs":[{"name":"t"}],"output":{"name":"qutex"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"qutex"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","",5,{"inputs":[{"name":"readguard"}],"output":{"name":"futureupgrade"}}],[11,"release","","Releases the lock held by this `ReadGuard` and returns the original `QrwLock`.",5,{"inputs":[{"name":"readguard"}],"output":{"name":"qrwlock"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"downgrade","","Converts this `WriteGuard` into a `ReadGuard` and fulfills any other pending read requests.",6,{"inputs":[{"name":"writeguard"}],"output":{"name":"readguard"}}],[11,"release","","Releases the lock held by this `WriteGuard` and returns the original `QrwLock`.",6,{"inputs":[{"name":"writeguard"}],"output":{"name":"qrwlock"}}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"wait","","Blocks the current thread until this future resolves.",7,{"inputs":[{"name":"self"}],"output":{"generics":["readguard","canceled"],"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","Gracefully unlock if this guard has a lock acquired.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"wait","","Blocks the current thread until this future resolves.",8,{"inputs":[{"name":"self"}],"output":{"generics":["writeguard","canceled"],"name":"result"}}],[11,"poll","","",8,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"drop","","Gracefully unlock if this guard has a lock acquired.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"requestkind"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"requestkind"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new `QrwRequest`.",9,{"inputs":[{"name":"sender"},{"name":"requestkind"}],"output":{"name":"qrwrequest"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and returns a new `QrwLock`.",10,{"inputs":[{"name":"t"}],"output":{"name":"qrwlock"}}],[11,"read","","Returns a new `FutureReadGuard` which can be used as a future and will resolve into a `ReadGuard`.",10,{"inputs":[{"name":"self"}],"output":{"name":"futurereadguard"}}],[11,"write","","Returns a new `FutureWriteGuard` which can be used as a future and will resolve into a `WriteGuard`.",10,{"inputs":[{"name":"self"}],"output":{"name":"futurewriteguard"}}],[11,"enqueue_lock_request","","Pushes a lock request onto the queue.",10,{"inputs":[{"name":"self"},{"name":"qrwrequest"}],"output":null}],[11,"get_mut","","Returns a mutable reference to the inner `Vec` if there are currently no other copies of this `QrwLock`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ptr","","Returns a reference to the inner value.",10,null],[11,"as_mut_ptr","","Returns a mutable reference to the inner value.",10,null],[11,"process_queues","","Pops the next lock request in the queue if possible.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"upgrade_read_lock","","Converts a single read lock (read count of '1') into a write lock.",10,{"inputs":[{"name":"self"}],"output":{"generics":["receiver"],"name":"result"}}],[11,"downgrade_write_lock","","Converts a write lock into a read lock then processes the queue, allowing additional read requests to acquire locks.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"release_read_lock","","Decreases the reader count by one and unparks the next requester task in the queue if possible.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"release_write_lock","","Unlocks this (the caller's) lock and unparks the next requester task in the queue if possible.",10,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",10,{"inputs":[{"name":"t"}],"output":{"name":"qrwlock"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"qrwlock"}}]],"paths":[[4,"RequestKind"],[3,"Guard"],[3,"FutureGuard"],[3,"Request"],[3,"Qutex"],[3,"ReadGuard"],[3,"WriteGuard"],[3,"FutureReadGuard"],[3,"FutureWriteGuard"],[3,"QrwRequest"],[3,"QrwLock"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"next_u64","","Return the next random `u64`.",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"fill_bytes","","Fill `dest` with random data.",0,null],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,null],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,null],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[4,"ErrorKind","","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",2,null],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,null],[13,"Transient","","A transient failure which likely can be resolved or worked around.",2,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,null],[3,"Error","","Error type of random number generators",null,null],[12,"kind","","The error kind",3,null],[12,"msg","","The error message",3,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g. `let mut rng = thread_rng();`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"weak_rng","","DEPRECATED: use [`SmallRng`] instead.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Generating random samples from probability distributions.",null,null],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9.",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly in the half-open interval `(0, 1]`, i.e. including 1 but not 0.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly in the open interval `(0, 1)`, i.e. not including either endpoint.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal distribution `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to `Normal::new(0.0, 1.0)` but faster.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the exponential distribution, with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or sampling with `-rng.gen::<f64>().ln()`, but faster.",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto distribution",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"DistIter","","An iterator that generates random values of `T` with distribution `D`, using `R` as the source of randomness.",null,null],[3,"Standard","","A generic random value distribution, implemented for many primitive types. Usually generates values with a numerically uniform distribution, and with a range appropriate to the type.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",4,null],[12,"item","","The actual item which is being weighted",4,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"uniform","","A distribution uniformly sampling numbers within a given range.",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer types.",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for floating-point types.",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct implementation of [`UniformSampler`] for the sampling type.",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",6,null],[10,"new","","Construct self, with inclusive lower bound and exclusive upper bound `[low, high)`.",6,null],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,null],[10,"sample","","Sample a value.",6,null],[11,"sample_single","","Sample a single value uniformly from a range with inclusive lower bound and exclusive upper bound `[low, high)`.",6,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"uniform"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Uniform` instance which samples uniformly from the half open range `[low, high)` (excluding `high`). Panics if `low >= high`.",7,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"uniform"}}],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly from the closed range `[low, high]` (inclusive). Panics if `low > high`.",7,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"uniform"}}],[11,"sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"x"}}],[11,"from","","",7,{"inputs":[{"name":"range"}],"output":{"name":"uniform"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"uniformint"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"new","","",8,null],[11,"new_inclusive","","",8,null],[11,"sample","","",8,null],[11,"sample_single","","",8,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"uniformfloat"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",9,null],[11,"new_inclusive","","",9,null],[11,"sample","","",9,null],[11,"sample_single","","",9,null],[11,"new","","",9,null],[11,"new_inclusive","","",9,null],[11,"sample","","",9,null],[11,"sample_single","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"uniformduration"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"uniformduration"}}],[11,"new_inclusive","","",10,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"uniformduration"}}],[11,"sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"duration"}}],[11,"clone","rand::distributions","",11,{"inputs":[{"name":"self"}],"output":{"name":"gamma"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"chisquared"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",12,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",12,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"fisherf"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",13,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"studentt"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",14,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"standardnormal"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sample","","",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",16,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"lognormal"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",17,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"exp1"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sample","","",18,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"exp"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",19,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",19,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"pareto"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new Pareto distribution with given `scale` and `shape`.",20,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"pareto"}}],[11,"sample","","",20,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poisson"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Poisson` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",21,{"inputs":[{"name":"f64"}],"output":{"name":"poisson"}}],[11,"sample","","",21,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u64"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"binomial"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Binomial` with the given shape parameters `n` (number of trials) and `p` (probability of success).",22,{"inputs":[{"name":"u64"},{"name":"f64"}],"output":{"name":"binomial"}}],[11,"sample","","",22,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u64"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bernoulli"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Bernoulli` with the given probability of success `p`.",23,{"inputs":[{"name":"f64"}],"output":{"name":"bernoulli"}}],[11,"sample","","",23,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"cauchy"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Cauchy` with the given shape parameters `median` the peak location and `scale` the scale factor. Panics if `scale <= 0`.",24,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"cauchy"}}],[11,"sample","","",24,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"openclosed01"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"open01"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f32"}}],[11,"sample","","",25,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f32"}}],[11,"sample","","",26,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f32"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",25,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",26,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u8"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u16"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u32"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"u64"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"usize"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"i8"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"i16"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"i32"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"i64"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"isize"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"char"}}],[11,"sample","","",28,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"char"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bool"}}],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,null],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"option"}}],[11,"sample","","",27,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"wrapping"}}],[0,"range","","DEPRECATED: Use `distributions::uniform` instead.",null,null],[11,"sample","","",29,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",29,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"sample","rand::distributions::uniform","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"sample","rand::distributions","",19,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",19,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",12,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",12,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",30,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",31,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"Distribution","","Types (distributions) that can be used to create a random instance of `T`.",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source of randomness.",32,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"sample_iter","","Create an iterator that generates random values of `T`, using `rng` as the source of randomness.",32,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"distiter"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"standard"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"weighted"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `WeightedChoice`.",29,null],[11,"sample","","",29,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"prng","","Pseudo-random number generators.",null,null],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",null,null],[0,"chacha","","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that uses the ChaCha algorithm.",null,null],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",null,null],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"chacharng"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null],[11,"try_fill_bytes","","",34,null],[11,"from_seed","","",34,null],[11,"from_rng","","",34,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",34,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_stream","","Set the stream number.",34,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"chachacore"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"generate","","",35,null],[11,"from_seed","","",35,null],[11,"from","","",34,{"inputs":[{"name":"chachacore"}],"output":{"name":"self"}}],[0,"hc128","rand::prng","The HC-128 random number generator.",null,null],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that uses the HC-128 algorithm.",null,null],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",null,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"hc128rng"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",36,null],[11,"try_fill_bytes","","",36,null],[11,"from_seed","","",36,null],[11,"from_rng","","",36,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"hc128core"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"generate","","",37,null],[11,"from_seed","","Create an HC-128 random number generator with a seed. The seed has to be 256 bits in length, matching the 128 bit `key` followed by 128 bit `iv` when HC-128 where to be used as a stream cipher.",37,null],[0,"isaac","rand::prng","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",null,null],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",null,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"isaacrng"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",38,null],[11,"try_fill_bytes","","",38,null],[11,"from_seed","","",38,null],[11,"from_rng","","",38,{"inputs":[{"name":"s"}],"output":{"generics":["error"],"name":"result"}}],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",38,{"inputs":[],"output":{"name":"self"}}],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",38,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"isaaccore"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`IsaacRng`] documentation.",39,{"inputs":[{"name":"self"},{"name":"isaacarray"}],"output":null}],[11,"from_seed","","",39,null],[11,"from_rng","","",39,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",null,null],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit variant of the ISAAC algorithm.",null,null],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",null,null],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"isaac64rng"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",40,null],[11,"try_fill_bytes","","",40,null],[11,"from_seed","","",40,null],[11,"from_rng","","",40,{"inputs":[{"name":"s"}],"output":{"generics":["error"],"name":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",40,{"inputs":[],"output":{"name":"self"}}],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",40,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"isaac64core"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`Isaac64Rng`] documentation.",41,{"inputs":[{"name":"self"},{"name":"isaacarray"}],"output":null}],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",41,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from_seed","","",41,null],[11,"from_rng","","",41,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","rand::prng","",42,{"inputs":[{"name":"self"}],"output":{"name":"xorshiftrng"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",42,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",42,null],[11,"try_fill_bytes","","",42,null],[11,"from_seed","","",42,null],[11,"from_rng","","",42,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[0,"rngs","rand","Random number generators and adapters for common usage:",null,null],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",null,null],[3,"EntropyRng","","An interface returning random data from external source(s), provided specifically for securely seeding algorithmic generators (PRNGs).",null,null],[3,"SmallRng","","An RNG recommended when small state, cheap initialization and good performance are required. The PRNG algorithm in `SmallRng` is chosen to be efficient on the current platform, without consideration for cryptography or security. The size of its state is much smaller than for [`StdRng`].",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient on the current platform, to be statistically strong and unpredictable (meaning a cryptographically secure PRNG).",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a reference to the PRNG in thread-local memory.",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from the operating system.",null,null],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`] fails.",null,null],[13,"NoTimer","","No timer available.",43,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",43,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",43,null],[13,"TinyVariantions","","Variations of deltas of time too small.",43,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",43,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type supporting `std::io::Read`, for example files.",null,null],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying PRNG after it has generated a certain number of random bytes.",null,null],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",44,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",44,null],[11,"try_fill_bytes","","",44,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",45,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"self"}}],[11,"reseed","","Reseed the internal PRNG.",45,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"next_u32","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",45,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",45,null],[11,"try_fill_bytes","","",45,null],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"reseedingrng"}}],[11,"fmt","rand::rngs","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `EntropyRng`.",46,{"inputs":[],"output":{"name":"self"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"next_u32","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",46,null],[11,"try_fill_bytes","","",46,null],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"jitterrng"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"timererror"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"timererror"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",43,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","rand","",3,{"inputs":[{"name":"timererror"}],"output":{"name":"error"}}],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a timer, or a platform-specific function with higher accuracy if necessary and available.",47,{"inputs":[],"output":{"generics":["jitterrng","timererror"],"name":"result"}}],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",47,null],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",47,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",47,{"inputs":[{"name":"self"}],"output":{"generics":["u8","timererror"],"name":"result"}}],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterRng` entropy collector.",47,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"i64"}}],[11,"next_u32","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",47,null],[11,"try_fill_bytes","","",47,null],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"steprng"}}],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence starting with `initial` and incremented by `increment` each time.",48,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"self"}}],[11,"next_u32","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",48,null],[11,"try_fill_bytes","","",48,null],[11,"clone","rand::rngs","",49,{"inputs":[{"name":"self"}],"output":{"name":"smallrng"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",49,null],[11,"try_fill_bytes","","",49,null],[11,"from_seed","","",49,null],[11,"from_rng","","",49,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"stdrng"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",50,null],[11,"try_fill_bytes","","",50,null],[11,"from_seed","","",50,null],[11,"from_rng","","",50,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"threadrng"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_u32","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",51,null],[11,"try_fill_bytes","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"osrng"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `OsRng`.",52,{"inputs":[],"output":{"generics":["osrng","error"],"name":"result"}}],[11,"next_u32","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",52,null],[11,"try_fill_bytes","","",52,null],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"generics":["vec","vec"],"name":"result"}}],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",null,null],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",null,null],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",null,{"inputs":[{"name":"r"},{"name":"usize"},{"name":"usize"}],"output":{"generics":["usize"],"name":"vec"}}],[8,"Rand","rand","A type that can be randomly generated using an [`Rng`].",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",53,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","An automatically-implemented extension trait on [`RngCore`] providing high-level generic methods for sampling values and other convenience methods.",null,null],[11,"gen","","Return a random value supporting the [`Standard`] distribution.",54,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e. inclusive of `low` and exclusive of `high`.",54,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"sample","","Sample a new value, using the given distribution.",54,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"t"}}],[11,"sample_iter","","Create an iterator that generates values using the given distribution.",54,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"distiter"}}],[11,"fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["error"],"name":"result"}}],[11,"gen_bool","","Return a bool with a probability `p` of being true.",54,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"choose","","Return a random element from `values`.",54,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",54,null],[11,"shuffle","","Shuffle a mutable slice in place.",54,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",54,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",54,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",54,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",55,null],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).",55,{"inputs":[{"name":"self"}],"output":null}],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing construction from fresh entropy. This trait is automatically implemented for any PRNG implementing [`SeedableRng`] and is not intended to be implemented by users.",null,null],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh entropy.",56,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",57,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",58,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"read","","",0,null],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"should_retry","","True if this kind of error may resolve itself on retry.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"should_wait","","True if we should retry but wait before retrying",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"description","","A description of this error kind",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Create a new instance, with specified kind and a message.",3,{"inputs":[{"name":"errorkind"},{"name":"str"}],"output":{"name":"error"}}],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",3,{"inputs":[{"name":"errorkind"},{"name":"str"},{"name":"e"}],"output":{"name":"error"}}],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",3,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[8,"SampleUniform"],[8,"UniformSampler"],[3,"Uniform"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[3,"OpenClosed01"],[3,"Open01"],[3,"Standard"],[3,"Alphanumeric"],[3,"WeightedChoice"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"DistIter"],[3,"ChaChaRng"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacRng"],[3,"IsaacCore"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"XorShiftRng"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Generator"],[3,"AsciiGenerator"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","items":[[3,"Error","rand_core","Error type of random number generators",null,null],[12,"kind","","The error kind",0,null],[12,"msg","","The error message",0,null],[4,"ErrorKind","","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",1,null],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",1,null],[13,"Transient","","A transient failure which likely can be resolved or worked around.",1,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"should_retry","","True if this kind of error may resolve itself on retry.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"should_wait","","True if we should retry but wait before retrying",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"description","","A description of this error kind",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new instance, with specified kind and a message.",0,{"inputs":[{"name":"errorkind"},{"name":"str"}],"output":{"name":"self"}}],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",0,{"inputs":[{"name":"errorkind"},{"name":"str"},{"name":"e"}],"output":{"name":"self"}}],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",0,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",null,null],[12,"core","","The core part of the RNG, implementing the `generate` function.",2,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",null,null],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",null,null],[16,"Item","","Results element type, e.g. `u32`.",4,null],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",4,null],[10,"generate","","Generate a new block of results.",4,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"blockrng"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",2,{"inputs":[{"name":"r"}],"output":{"name":"blockrng"}}],[11,"index","","Get the index into the result buffer.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"next_u32","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",2,null],[11,"try_fill_bytes","","",2,null],[11,"from_seed","","",2,null],[11,"from_rng","","",2,{"inputs":[{"name":"s"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"blockrng64"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,{"inputs":[{"name":"r"}],"output":{"name":"blockrng64"}}],[11,"index","","Get the index into the result buffer.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"next_u32","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",3,null],[11,"try_fill_bytes","","",3,null],[11,"from_seed","","",3,null],[11,"from_rng","","",3,{"inputs":[{"name":"s"}],"output":{"generics":["error"],"name":"result"}}],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,{"inputs":[{"name":"r"}],"output":{"name":"u64"}}],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",null,null],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",null,null],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",null,null],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,{"inputs":[{"name":"r"}],"output":{"name":"u32"}}],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,{"inputs":[{"name":"r"}],"output":{"name":"u64"}}],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",null,null],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",null,null],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"next_u64","","Return the next random `u64`.",5,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"fill_bytes","","Fill `dest` with random data.",5,null],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,null],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,null],[10,"from_seed","","Create a new PRNG using the given seed.",6,null],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,{"inputs":[{"name":"r"}],"output":{"generics":["error"],"name":"result"}}],[11,"read","","",5,null]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"str"}],"output":{"name":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"inputs":[{"name":"str"}],"output":{"generics":["demangle","trydemangleerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified format configuration, returning the owned string.",4,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into an owned vector of bytes, returning the vector.",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec","frombase64error"],"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"characterset"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"newline"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned string.",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data, into an owned vector of bytes, returning the vector.",8,{"inputs":[{"name":"self"}],"output":{"generics":["vec","fromhexerror"],"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical structure of the JSON stream. For example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming an iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the StackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"generics":["string"],"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON on-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"json"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"errorcode"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"encodererror"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["stderror"],"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact JSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level. This is safe to set during encoding.",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",17,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",17,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",17,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",17,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",17,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",17,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",17,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",17,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",17,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",17,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",17,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",17,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",17,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",17,{"inputs":[{"name":"self"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",17,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",9,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"generics":["buildererror"],"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"generics":["buildererror"],"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty representation for it via `Display`.",9,{"inputs":[{"name":"self"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key. Otherwise, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["json"],"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`. If any key is found not to exist, find_path will return None. Otherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until a value associated with the provided key is found. If no value is found or the Json value is not an Object, returns None.",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["json"],"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["object"],"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"into_array","","If the Json value is an Array, returns the associated vector. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["array"],"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool. Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns (). Returns None otherwise.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"json"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"stackelement"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index. lower indices are at the bottom of the stack while higher indices are at the top.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as the ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,{"inputs":[{"name":"self"}],"output":{"generics":["stackelement"],"name":"option"}}],[11,"next","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["jsonevent"],"name":"option"}}],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the JSON stream.",19,{"inputs":[{"name":"self"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["json","buildererror"],"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,{"inputs":[{"name":"self"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"decoderesult"}}],[11,"read_u8","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"decoderesult"}}],[11,"read_u16","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"decoderesult"}}],[11,"read_u32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"decoderesult"}}],[11,"read_u64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"decoderesult"}}],[11,"read_isize","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"decoderesult"}}],[11,"read_i8","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"decoderesult"}}],[11,"read_i16","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"decoderesult"}}],[11,"read_i32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"decoderesult"}}],[11,"read_i64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"decoderesult"}}],[11,"read_f32","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"decoderesult"}}],[11,"read_f64","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"decoderesult"}}],[11,"read_bool","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"decoderesult"}}],[11,"read_char","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"decoderesult"}}],[11,"read_str","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"decoderesult"}}],[11,"read_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",21,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",9,{"inputs":[{"name":"self"}],"output":{"name":"json"}}],[11,"fmt","","Encodes a json value into a string",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",24,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"generics":["json","parsererror"],"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"read_usize","","Read a usize value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["usize"],"name":"result"}}],[10,"read_u64","","Read a u64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"result"}}],[10,"read_u32","","Read a u32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u32"],"name":"result"}}],[10,"read_u16","","Read a u16 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u16"],"name":"result"}}],[10,"read_u8","","Read a u8 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"result"}}],[10,"read_isize","","Read a isize value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["isize"],"name":"result"}}],[10,"read_i64","","Read a i64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"result"}}],[10,"read_i32","","Read a i32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"result"}}],[10,"read_i16","","Read a i16 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[10,"read_i8","","Read a i8 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["i8"],"name":"result"}}],[10,"read_bool","","Read a bool value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[10,"read_f64","","Read a f64 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"result"}}],[10,"read_f32","","Read a f32 value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["f32"],"name":"result"}}],[10,"read_char","","Read a char value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["char"],"name":"result"}}],[10,"read_str","","Read a string value.",25,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"result"}}],[10,"read_enum","","Read an enumeration value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","Read an struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","Read a field for a struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","Read a tuple value.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","Read a data item for a tuple.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","Read a tuple struct value.",25,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","Read an optional value.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","Read a sequence of values.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","Read an element in the sequence.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","Read an associative container (map).",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_usize","","Emit a usize value.",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","Emit a u64 value.",26,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","Emit a u32 value.",26,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","Emit a u16 value.",26,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","Emit a u8 value.",26,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","Emit a isize value.",26,{"inputs":[{"name":"self"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","Emit a i64 value.",26,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","Emit a i32 value.",26,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","Emit a i16 value.",26,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","Emit a i8 value.",26,{"inputs":[{"name":"self"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","Emit a bool value.",26,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","Emit a f64 value.",26,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","Emit a f32 value.",26,{"inputs":[{"name":"self"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","Emit a char value.",26,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","Emit a string value.",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","Emit an enumeration value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","Emit a struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","Emit a field item for a struct.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","Emit a tuple value.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,{"inputs":[{"name":"self"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","Emit an optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","Emit the `None` optional value.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","Emit a sequence of values.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","Emit an element in a sequence.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","Emit an associative container (map).",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["vec"],"name":"result"}}],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["syn"] = {"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",null,null],[12,"style","","",0,null],[12,"value","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"ident","","Name of the field, if any.",1,null],[12,"vis","","Visibility of the field.",1,null],[12,"attrs","","Attributes tagged on the field.",1,null],[12,"ty","","Type of the field.",1,null],[3,"Variant","","An enum variant.",null,null],[12,"ident","","Name of the variant.",2,null],[12,"attrs","","Attributes tagged on the variant.",2,null],[12,"data","","Type of variant.",2,null],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,null],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lifetimes","","",3,null],[12,"ty_params","","",3,null],[12,"where_clause","","",3,null],[3,"Lifetime","","",null,null],[12,"ident","","",4,null],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",null,null],[12,"attrs","","",5,null],[12,"lifetime","","",5,null],[12,"bounds","","",5,null],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",null,null],[12,"attrs","","",6,null],[12,"ident","","",6,null],[12,"bounds","","",6,null],[12,"default","","",6,null],[3,"WhereBoundPredicate","","A type bound.",null,null],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,null],[12,"bounded_ty","","The type being bounded",7,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,null],[3,"WhereClause","","A `where` clause in a definition",null,null],[12,"predicates","","",8,null],[3,"WhereEqPredicate","","An equality predicate (unsupported).",null,null],[12,"lhs_ty","","",9,null],[12,"rhs_ty","","",9,null],[3,"WhereRegionPredicate","","A lifetime predicate.",null,null],[12,"lifetime","","",10,null],[12,"bounds","","",10,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",null,null],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","",null,null],[3,"ByteStrLit","","",null,null],[12,"value","","",11,null],[12,"style","","",11,null],[3,"FloatLit","","",null,null],[12,"value","","",12,null],[12,"suffix","","",12,null],[3,"IntLit","","",null,null],[12,"value","","",13,null],[12,"suffix","","",13,null],[3,"StrLit","","",null,null],[12,"value","","",14,null],[12,"style","","",14,null],[3,"Delimited","","",null,null],[12,"delim","","The type of delimiter",15,null],[12,"tts","","The delimited sequence of token trees",15,null],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",null,null],[12,"path","","",16,null],[12,"tts","","",16,null],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",null,null],[12,"ident","","Name of the struct or enum.",17,null],[12,"vis","","Visibility of the struct or enum.",17,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,null],[12,"generics","","Generics required to complete the definition.",17,null],[12,"body","","Data within the struct or enum.",17,null],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",null,null],[12,"lifetimes","","The lifetime parameters for this path segment.",18,null],[12,"types","","The type parameters for this path segment, if present.",18,null],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",18,null],[3,"BareFnArg","","An argument in a function type.",null,null],[12,"name","","",19,null],[12,"ty","","",19,null],[3,"BareFnTy","","",null,null],[12,"unsafety","","",20,null],[12,"abi","","",20,null],[12,"lifetimes","","",20,null],[12,"inputs","","",20,null],[12,"output","","",20,null],[12,"variadic","","",20,null],[3,"MutTy","","",null,null],[12,"ty","","",21,null],[12,"mutability","","",21,null],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",null,null],[12,"inputs","","`(A, B)`",22,null],[12,"output","","`C`",22,null],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",null,null],[12,"global","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",23,null],[12,"segments","","The segments in the path: the things separated by `::`.",23,null],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",null,null],[12,"ident","","The identifier portion of this path segment.",24,null],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",24,null],[3,"PolyTraitRef","","",null,null],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,null],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,null],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",null,null],[12,"ty","","",26,null],[12,"position","","",26,null],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",null,null],[12,"ident","","",27,null],[12,"ty","","",27,null],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",null,null],[13,"Outer","","Attribute of the form `#![...]`.",28,null],[13,"Inner","","Attribute of the form `#[...]`.",28,null],[4,"MetaItem","","A compile-time attribute item.",null,null],[13,"Word","","Word meta item.",29,null],[13,"List","","List meta item.",29,null],[13,"NameValue","","Name-value meta item.",29,null],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",null,null],[13,"MetaItem","","A full `MetaItem`.",30,null],[13,"Literal","","A Rust literal.",30,null],[4,"ConstExpr","","",null,null],[13,"Call","","A function call",31,null],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,null],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,null],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,null],[13,"Cast","","A cast (`foo as f64`)",31,null],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",31,null],[13,"Index","","An indexing operation (`foo[2]`)",31,null],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,null],[13,"Other","","If compiling with full support for expression syntax, any expression is allowed",31,null],[4,"VariantData","","Data stored within an enum variant or struct.",null,null],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,null],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,null],[13,"Unit","","Unit variant, e.g. `None`.",32,null],[4,"Visibility","","Visibility level of an item.",null,null],[13,"Public","","Public, i.e. `pub`.",33,null],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,null],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,null],[13,"Inherited","","Inherited, i.e. private.",33,null],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",null,null],[13,"None","","",34,null],[13,"Maybe","","",34,null],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",null,null],[13,"Trait","","",35,null],[13,"Region","","",35,null],[4,"WherePredicate","","A single predicate in a `where` clause",null,null],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,null],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,null],[13,"EqPredicate","","An equality predicate (unsupported)",36,null],[4,"FloatTy","","",null,null],[13,"F32","","",37,null],[13,"F64","","",37,null],[13,"Unsuffixed","","",37,null],[4,"IntTy","","",null,null],[13,"Isize","","",38,null],[13,"I8","","",38,null],[13,"I16","","",38,null],[13,"I32","","",38,null],[13,"I64","","",38,null],[13,"Usize","","",38,null],[13,"U8","","",38,null],[13,"U16","","",38,null],[13,"U32","","",38,null],[13,"U64","","",38,null],[13,"Unsuffixed","","",38,null],[4,"Lit","","Literal kind.",null,null],[13,"Str","","A string literal (`\"foo\"`)",39,null],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,null],[13,"Byte","","A byte char (`b'f'`)",39,null],[13,"Char","","A character literal (`'a'`)",39,null],[13,"Int","","An integer literal (`1`)",39,null],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,null],[13,"Bool","","A boolean literal",39,null],[4,"StrStyle","","",null,null],[13,"Cooked","","A regular string, like `\"foo\"`",40,null],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,null],[4,"BinOpToken","","",null,null],[13,"Plus","","",41,null],[13,"Minus","","",41,null],[13,"Star","","",41,null],[13,"Slash","","",41,null],[13,"Percent","","",41,null],[13,"Caret","","",41,null],[13,"And","","",41,null],[13,"Or","","",41,null],[13,"Shl","","",41,null],[13,"Shr","","",41,null],[4,"DelimToken","","A delimiter token",null,null],[13,"Paren","","A round parenthesis: `(` or `)`",42,null],[13,"Bracket","","A square bracket: `[` or `]`",42,null],[13,"Brace","","A curly brace: `{` or `}`",42,null],[4,"Token","","",null,null],[13,"Eq","","",43,null],[13,"Lt","","",43,null],[13,"Le","","",43,null],[13,"EqEq","","",43,null],[13,"Ne","","",43,null],[13,"Ge","","",43,null],[13,"Gt","","",43,null],[13,"AndAnd","","",43,null],[13,"OrOr","","",43,null],[13,"Not","","",43,null],[13,"Tilde","","",43,null],[13,"BinOp","","",43,null],[13,"BinOpEq","","",43,null],[13,"At","","",43,null],[13,"Dot","","",43,null],[13,"DotDot","","",43,null],[13,"DotDotDot","","",43,null],[13,"Comma","","",43,null],[13,"Semi","","",43,null],[13,"Colon","","",43,null],[13,"ModSep","","",43,null],[13,"RArrow","","",43,null],[13,"LArrow","","",43,null],[13,"FatArrow","","",43,null],[13,"Pound","","",43,null],[13,"Dollar","","",43,null],[13,"Question","","",43,null],[13,"Literal","","",43,null],[13,"Ident","","",43,null],[13,"Underscore","","",43,null],[13,"Lifetime","","",43,null],[13,"DocComment","","",43,null],[4,"TokenTree","","When the main rust parser encounters a syntax-extension invocation, it parses the arguments to the invocation as a token-tree. This is a very loose structure, such that all sorts of different AST-fragments can be passed to syntax extensions using a uniform type.",null,null],[13,"Token","","A single token",44,null],[13,"Delimited","","A delimited sequence of token trees",44,null],[4,"Body","","Body of a derived struct or enum.",null,null],[13,"Enum","","It's an enum.",45,null],[13,"Struct","","It's a struct.",45,null],[4,"BinOp","","",null,null],[13,"Add","","The `+` operator (addition)",46,null],[13,"Sub","","The `-` operator (subtraction)",46,null],[13,"Mul","","The `*` operator (multiplication)",46,null],[13,"Div","","The `/` operator (division)",46,null],[13,"Rem","","The `%` operator (modulus)",46,null],[13,"And","","The `&&` operator (logical and)",46,null],[13,"Or","","The `||` operator (logical or)",46,null],[13,"BitXor","","The `^` operator (bitwise xor)",46,null],[13,"BitAnd","","The `&` operator (bitwise and)",46,null],[13,"BitOr","","The `|` operator (bitwise or)",46,null],[13,"Shl","","The `<<` operator (shift left)",46,null],[13,"Shr","","The `>>` operator (shift right)",46,null],[13,"Eq","","The `==` operator (equality)",46,null],[13,"Lt","","The `<` operator (less than)",46,null],[13,"Le","","The `<=` operator (less than or equal to)",46,null],[13,"Ne","","The `!=` operator (not equal to)",46,null],[13,"Ge","","The `>=` operator (greater than or equal to)",46,null],[13,"Gt","","The `>` operator (greater than)",46,null],[4,"UnOp","","",null,null],[13,"Deref","","The `*` operator for dereferencing",47,null],[13,"Not","","The `!` operator for logical inversion",47,null],[13,"Neg","","The `-` operator for negation",47,null],[4,"Abi","","",null,null],[13,"Named","","",48,null],[13,"Rust","","",48,null],[4,"FunctionRetTy","","",null,null],[13,"Default","","Return type is not specified.",49,null],[13,"Ty","","Everything else",49,null],[4,"Mutability","","",null,null],[13,"Mutable","","",50,null],[13,"Immutable","","",50,null],[4,"PathParameters","","Parameters of a path segment.",null,null],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,null],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,null],[4,"Ty","","The different kinds of types recognized by the compiler",null,null],[13,"Slice","","A variable-length array (`[T]`)",52,null],[13,"Array","","A fixed length array (`[T; n]`)",52,null],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,null],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,null],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,null],[13,"Never","","The never type (`!`)",52,null],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,null],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",52,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",52,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",52,null],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,null],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",52,null],[13,"Mac","","A macro in the type position.",52,null],[4,"Unsafety","","",null,null],[13,"Unsafe","","",53,null],[13,"Normal","","",53,null],[5,"parse_derive_input","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["deriveinput","string"],"name":"result"}}],[5,"parse_type","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ty","string"],"name":"result"}}],[5,"parse_path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["path","string"],"name":"result"}}],[5,"parse_where_clause","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["whereclause","string"],"name":"result"}}],[5,"parse_token_trees","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["vec","string"],"name":"result"}}],[5,"parse_ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["ident","string"],"name":"result"}}],[5,"parse_ty_param_bound","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["typarambound","string"],"name":"result"}}],[5,"parse_outer_attr","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["attribute","string"],"name":"result"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",29,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",30,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"name","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"attrstyle"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"metaitem"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"metaitem"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"name","","Name of the item.",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"nestedmetaitem"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"nestedmetaitem"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"to_tokens","","",31,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"constexpr"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",32,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",33,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"variantdata"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"variantdata"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"fields","","Slice containing the fields stored in the variant.",32,null],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"visibility"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",54,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",55,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",56,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",5,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",6,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",35,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",8,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",36,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",7,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",10,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",9,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"generics"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"generics"}}],[11,"hash","","",3,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",3,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",55,{"inputs":[{"name":"self"}],"output":{"name":"turbofish"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"lifetimedef"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"new","","",5,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"typaram"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"from","","",6,{"inputs":[{"name":"ident"}],"output":{"name":"self"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"typarambound"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"traitboundmodifier"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"whereclause"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"whereclause"}}],[11,"hash","","",8,null],[11,"none","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"wherepredicate"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"whereboundpredicate"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"whereregionpredicate"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"whereeqpredicate"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"to_tokens","","",57,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"new","","",57,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",57,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"as_ref","","",57,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"to_tokens","","",39,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"lit"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"strstyle"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"from","","",39,{"inputs":[{"name":"string"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"str"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"lit"}}],[11,"from","","",39,null],[11,"from","","",39,{"inputs":[{"name":"char"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"bool"}],"output":{"name":"lit"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"intty"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"floatty"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"from","","",39,{"inputs":[{"name":"isize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"i64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u8"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u16"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"u64"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f32"}],"output":{"name":"lit"}}],[11,"from","","",39,{"inputs":[{"name":"f64"}],"output":{"name":"lit"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"strlit"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bytestrlit"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"intlit"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"floatlit"}}],[11,"to_tokens","","",16,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",44,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",15,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",43,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",41,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"mac"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"mac"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"delimited"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"token"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"binoptoken"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"delimtoken"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"to_tokens","","",17,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"deriveinput"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"hash","","",45,null],[11,"op","","",46,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"assign_op","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",46,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"op","","",47,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"to_tokens","","",47,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"binop"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"bool"}}],[11,"hash","","",46,null],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"unop"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"to_tokens","","",52,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",50,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",23,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",24,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",51,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",18,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",27,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",22,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",25,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",20,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",19,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",53,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",48,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ty"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"mutty"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"mutability"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"from","","",23,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"pathsegment"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"from","","",24,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"pathparameters"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"none","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"anglebracketedparameterdata"}}],[11,"hash","","",18,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"typebinding"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"polytraitref"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"qself"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"barefnty"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"unsafety"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"abi"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"barefnarg"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"functionretty"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[0,"visit","","AST walker. Each overridden visit method has full control over what happens with its node, it can do its own traversal of the node's children, call `visit::walk_*` to apply the default traversal algorithm, or prevent deeper traversal by doing nothing.",null,null],[5,"walk_opt_ident","syn::visit","",null,{"inputs":[{"name":"v"},{"name":"option"}],"output":null}],[5,"walk_lifetime_def","","",null,{"inputs":[{"name":"v"},{"name":"lifetimedef"}],"output":null}],[5,"walk_poly_trait_ref","","",null,{"inputs":[{"name":"v"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[5,"walk_derive_input","","",null,{"inputs":[{"name":"v"},{"name":"deriveinput"}],"output":null}],[5,"walk_variant","","",null,{"inputs":[{"name":"v"},{"name":"variant"},{"name":"generics"}],"output":null}],[5,"walk_ty","","",null,{"inputs":[{"name":"v"},{"name":"ty"}],"output":null}],[5,"walk_path","","",null,{"inputs":[{"name":"v"},{"name":"path"}],"output":null}],[5,"walk_path_segment","","",null,{"inputs":[{"name":"v"},{"name":"pathsegment"}],"output":null}],[5,"walk_path_parameters","","",null,{"inputs":[{"name":"v"},{"name":"pathparameters"}],"output":null}],[5,"walk_assoc_type_binding","","",null,{"inputs":[{"name":"v"},{"name":"typebinding"}],"output":null}],[5,"walk_ty_param_bound","","",null,{"inputs":[{"name":"v"},{"name":"typarambound"}],"output":null}],[5,"walk_generics","","",null,{"inputs":[{"name":"v"},{"name":"generics"}],"output":null}],[5,"walk_fn_ret_ty","","",null,{"inputs":[{"name":"v"},{"name":"functionretty"}],"output":null}],[5,"walk_variant_data","","",null,{"inputs":[{"name":"v"},{"name":"variantdata"}],"output":null}],[5,"walk_field","","",null,{"inputs":[{"name":"v"},{"name":"field"}],"output":null}],[5,"walk_const_expr","","",null,{"inputs":[{"name":"v"},{"name":"constexpr"}],"output":null}],[5,"walk_mac","","",null,{"inputs":[{"name":"v"},{"name":"mac"}],"output":null}],[8,"Visitor","","Each method of the Visitor trait is a hook to be potentially overridden.  Each method's default implementation recursively visits the substructure of the input via the corresponding `walk` method; e.g. the `visit_mod` method by default calls `visit::walk_mod`.",null,null],[11,"visit_ident","","",58,{"inputs":[{"name":"self"},{"name":"ident"}],"output":null}],[11,"visit_derive_input","","",58,{"inputs":[{"name":"self"},{"name":"deriveinput"}],"output":null}],[11,"visit_ty","","",58,{"inputs":[{"name":"self"},{"name":"ty"}],"output":null}],[11,"visit_generics","","",58,{"inputs":[{"name":"self"},{"name":"generics"}],"output":null}],[11,"visit_ty_param_bound","","",58,{"inputs":[{"name":"self"},{"name":"typarambound"}],"output":null}],[11,"visit_poly_trait_ref","","",58,{"inputs":[{"name":"self"},{"name":"polytraitref"},{"name":"traitboundmodifier"}],"output":null}],[11,"visit_variant_data","","",58,{"inputs":[{"name":"self"},{"name":"variantdata"},{"name":"ident"},{"name":"generics"}],"output":null}],[11,"visit_field","","",58,{"inputs":[{"name":"self"},{"name":"field"}],"output":null}],[11,"visit_variant","","",58,{"inputs":[{"name":"self"},{"name":"variant"},{"name":"generics"}],"output":null}],[11,"visit_lifetime","","",58,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":null}],[11,"visit_lifetime_def","","",58,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":null}],[11,"visit_path","","",58,{"inputs":[{"name":"self"},{"name":"path"}],"output":null}],[11,"visit_path_segment","","",58,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":null}],[11,"visit_path_parameters","","",58,{"inputs":[{"name":"self"},{"name":"pathparameters"}],"output":null}],[11,"visit_assoc_type_binding","","",58,{"inputs":[{"name":"self"},{"name":"typebinding"}],"output":null}],[11,"visit_attribute","","",58,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"visit_fn_ret_ty","","",58,{"inputs":[{"name":"self"},{"name":"functionretty"}],"output":null}],[11,"visit_const_expr","","",58,{"inputs":[{"name":"self"},{"name":"constexpr"}],"output":null}],[11,"visit_lit","","",58,{"inputs":[{"name":"self"},{"name":"lit"}],"output":null}],[11,"visit_mac","","",58,{"inputs":[{"name":"self"},{"name":"mac"}],"output":null}],[0,"parse","syn","This module contains a set of exported nom parsers which can be used to parse custom grammars when used alongside the `synom` crate.",null,null],[4,"IResult","syn::parse","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",59,null],[13,"Error","","Parsing failed.",59,null],[5,"lit","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lit"],"name":"iresult"}}],[5,"string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","strlit"],"name":"iresult"}}],[5,"byte_string","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bytestrlit"],"name":"iresult"}}],[5,"byte","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","u8"],"name":"iresult"}}],[5,"character","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","char"],"name":"iresult"}}],[5,"float","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","floatlit"],"name":"iresult"}}],[5,"int","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","intlit"],"name":"iresult"}}],[5,"boolean","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","bool"],"name":"iresult"}}],[5,"ty","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ty"],"name":"iresult"}}],[5,"path","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","path"],"name":"iresult"}}],[5,"tt","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","tokentree"],"name":"iresult"}}],[5,"ident","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","ident"],"name":"iresult"}}],[5,"lifetime","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["str","lifetime"],"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",59,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"ImplGenerics"],[3,"TyGenerics"],[3,"Turbofish"],[3,"Ident"],[8,"Visitor"],[4,"IResult"]]};
searchIndex["synom"] = {"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,null],[13,"Error","","Parsing failed.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"iresult"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"o"}}],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",null,null],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",null,null],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"preceded","","Parse two things, returning the value of the second.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",null,null],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"delimited","","Value surrounded by a pair of delimiters.",null,null],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null]],"paths":[[4,"IResult"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum variants, and extracting bindings to each of the fields in the deriving Struct or Enum in a generic way.","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both an `Ident` reference to the given field, and the syn `&'a Field` descriptor for that field.",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however each of the fields are references rather than owned. When this is used as the AST for a real variant, this struct simply borrows the fields of the `syn` `Variant`, however this type may also be used as the sole variant for astruct.",null,null],[12,"ident","","",1,null],[12,"attrs","","",1,null],[12,"data","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn` `DeriveInput`'s variant which provides utilities for destructuring `Variant`s with `match` expressions.",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn` `DeriveInput` which provides utilities for creating custom derive trait implementations.",null,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",3,null],[13,"MoveMut","","`mut x`",3,null],[13,"Ref","","`ref x`",3,null],[13,"RefMut","","`ref mut x`",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bindstyle"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bindstyle"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bindinginfo"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"bindinginfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"bindinginfo"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `BindingInfo` references",0,{"inputs":[{"name":"self"}],"output":{"name":"field"}}],[11,"pat","","Generates the pattern fragment for this field binding.",0,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",0,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"variantast"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"variantast"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"variantast"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"variantinfo"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"variantinfo"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"variantinfo"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,null],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,null],[11,"ast","","Returns a `VariantAst` object which contains references to the underlying `syn` AST node which this `Variant` was created from.",2,{"inputs":[{"name":"self"}],"output":{"name":"variantast"}}],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"pat","","Generates the match-arm pattern which could be used to match against this Variant.",2,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"construct","","Generates the token stream required to construct the current variant.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating a `match` arm which evaluates the returned tokens.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating a `match` arm which evaluates to the resulting tokens.",2,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"filter","","Filter the bindings created by this `Variant` object. This has 2 effects:",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"remove_binding","","Remove the binding at the given index.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",2,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"structure"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"structure"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"structure"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"new","","Create a new `Structure` with the variants and fields from the passed-in `DeriveInput`.",4,{"inputs":[{"name":"deriveinput"}],"output":{"name":"self"}}],[11,"variants","","Returns a slice of the variants in this Structure.",4,null],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",4,null],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `Structure` was created from.",4,{"inputs":[{"name":"self"}],"output":{"name":"deriveinput"}}],[11,"omitted_variants","","True if any variants were omitted due to a `filter_variants` call.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating `match` arms which evaluate to the resulting tokens.",4,{"inputs":[{"name":"self"},{"name":"i"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"each_variant","","Runs the passed-in function once for each variant, passing in a `VariantInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"tokens"}}],[11,"filter","","Filter the bindings created by this `Structure` object. This has 2 effects:",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"filter_variants","","Filter the variants matched by this `Structure` object. This has 2 effects:",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"remove_variant","","Remove the variant at the given index.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced in the types of non-filtered fields / variants.",4,{"inputs":[{"name":"self"}],"output":{"generics":["ident"],"name":"vec"}}],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each type parmaeter referenced in the types of non-filtered fields.",4,{"inputs":[{"name":"self"},{"name":"typarambound"},{"name":"vec"}],"output":null}],[11,"bound_impl","","Creates an `impl` block with the required generic type fields filled in to implement the trait `path`.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unsafe_bound_impl","","This method is the same as `bound_impl`, except also includes the `unsafe` keyword for implementing unsafe traits.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unbound_impl","","This method is like `bound_impl` but doesn't add the additional bounds to the where clause.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[11,"unsafe_unbound_impl","","This method is the same as `unbound_impl`, except also includes the `unsafe` keyword for implementing unsafe traits.",4,{"inputs":[{"name":"self"},{"name":"p"},{"name":"b"}],"output":{"name":"tokens"}}],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper. It will parse the incoming TokenStream into a `synstructure::Structure` object, and pass it into the inner function.",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the original struct and the expansion to ensure that they compile correctly, and confirms that feeding the original struct into the named derive will produce the written output.",null,null]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
